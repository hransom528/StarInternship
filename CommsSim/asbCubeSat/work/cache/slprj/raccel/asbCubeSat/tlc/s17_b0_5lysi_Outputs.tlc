%implements s17_b0_5lysi_Outputs "C"

%function OutputsForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

ptrdiff_t INCX;
ptrdiff_t INCY;
ptrdiff_t LDA;
ptrdiff_t M;
ptrdiff_t N;
real_T cmlambda[121];
real_T smlambda[121];
real_T factor_dS[66];
real_T factor_dS_e[66];
real_T factor_dS_g[66];
real_T factor_dS_i[66];
real_T factor_dS_j[66];
real_T factor_dS_m[66];
real_T factor_dS_p[66];
real_T cmlambda_p[21];
real_T smlambda_p[21];
real_T nutationV[14];
real_T nutationV_e[14];
real_T nutationV_g[14];
real_T nutationV_i[14];
real_T nutationV_j[14];
real_T nutationV_m[14];
real_T nutationV_p[14];
real_T posCoeff_e[13];
real_T posCoeff_p[13];
real_T posCoeff[11];
real_T pData[9];
real_T pData_e[9];
real_T pData_i[9];
real_T pData_m[9];
real_T pData_p[9];
real_T v1[9];
real_T nutationV_s[8];
real_T nutationV_s_e[8];
real_T nutationV_s_g[8];
real_T nutationV_s_i[8];
real_T nutationV_s_j[8];
real_T nutationV_s_m[8];
real_T nutationV_s_p[8];
real_T A;
real_T B;
real_T C;
real_T bessDate;
real_T beta;
real_T betaNew;
real_T dUT2UT1;
real_T dUdlambdaSumM;
real_T dUdphiSumM;
real_T dUdrSumM;
real_T flat;
real_T fracSec;
real_T hour;
real_T lonNew;
real_T min;
real_T month;
real_T sec;
real_T ssUT;
int32_T count;
int32_T degreeP1;
int32_T degreeP3;
char_T TRANS;
int8_T rtAction;
int8_T rtPrevAction;
boolean_T guard1;
static const real_T tmp[113058] = %<(TLC_STR_CTX(0))>;
static const real_T tmp_p[133614] = %<(TLC_STR_CTX(1))>;
static const real_T tmp_e[534456] = %<(TLC_STR_CTX(2))>;
__m128d tmp_i;
__m128d tmp_m;
real_T dCIP_idx_0;
real_T dCIP_idx_1;
real_T pData_idx_0;
real_T pData_idx_0_c;
real_T pData_idx_0_e;
real_T pData_idx_0_f;
real_T pData_idx_0_g;
real_T pData_idx_0_i;
real_T pData_idx_0_j;
real_T pData_idx_0_k;
real_T pData_idx_0_m;
real_T pData_idx_0_p;
real_T pData_idx_1;
real_T pData_idx_1_c;
real_T pData_idx_1_e;
real_T pData_idx_1_f;
real_T pData_idx_1_g;
real_T pData_idx_1_i;
real_T pData_idx_1_j;
real_T pData_idx_1_k;
real_T pData_idx_1_m;
real_T pData_idx_1_p;
real_T pData_idx_2;
real_T pData_idx_2_c;
real_T pData_idx_2_e;
real_T pData_idx_2_f;
real_T pData_idx_2_g;
real_T pData_idx_2_i;
real_T pData_idx_2_j;
real_T pData_idx_2_k;
real_T pData_idx_2_m;
real_T pData_idx_2_p;
real_T pData_idx_3;
real_T pData_idx_3_e;
real_T pData_idx_3_i;
real_T pData_idx_3_p;
real_T pData_idx_4;
real_T pData_idx_4_e;
real_T pData_idx_4_p;
real_T pData_idx_5;
real_T pData_idx_5_e;
real_T pData_idx_5_p;
real_T pData_idx_6;
real_T pData_idx_6_p;
real_T pData_idx_7;
real_T pData_idx_8;
real_T pm_idx_0;
real_T pm_idx_1;
real_T rot_pm_idx_0;
real_T uTmp_idx_0;
real_T uTmp_idx_1;
real_T uTmp_idx_2;
static const real_T tmp_g[11715] = %<(TLC_STR_CTX(3))>;
static const real_T tmp_j[23430] = %<(TLC_STR_CTX(4))>;
static const real_T tmp_f[22824] = %<(TLC_STR_CTX(5))>;
static const real_T tmp_c[27200] = %<(TLC_STR_CTX(6))>;
static const real_T tmp_k[21675] = %<(TLC_STR_CTX(7))>;
static const real_T tmp_b[726] = %<(TLC_STR_CTX(8))>;
static const real_T tmp_n[14641] = %<(TLC_STR_CTX(9))>;
static const real_T tmp_l[14641] = %<(TLC_STR_CTX(10))>;
static const real_T tmp_d[441] = %<(TLC_STR_CTX(11))>;
static const real_T tmp_o[441] = %<(TLC_STR_CTX(12))>;
const real_T *cbuff1;
const real_T *cbuff2;
const real_T *dxyData;
const real_T *pmData;
%closefile localVarDecl
%assign _modelSS = ""

%assign tlcOutputsFcnOfS13B1 = OpaqueTLCBlockFcn("Outputs", 13, 1, 4, 2, 0)
%assign tlcOutputsFcnOfS13B2 = OpaqueTLCBlockFcnForMdlRef("Outputs", 13, 2, 4, 2, 1)
%assign tlcVarSampleHit_0 = LibIsSampleHit(0)
%<SLibGetRootInportsFromFile(system, TLC_FALSE)>
%<SLibGenerateExtModeOutput(system)>
/* Reset subsysRan breadcrumbs */
srClearBC(dzu2rlzxmw1.atygzznv2xe.hu5jjqenrx);
/* Reset subsysRan breadcrumbs */
srClearBC(dzu2rlzxmw1.enr11s3r13x.bvo4sqc1xt);
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.gv5etq1ziu);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.gv5etq1ziu);
%endif
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.fkef5z4gjh);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.fkef5z4gjh);
%endif
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.jopax3kg4g);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.jopax3kg4g);
%endif
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.c1r2s0jhqc);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.c1r2s0jhqc);
%endif
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.i5gew0eykk);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.i5gew0eykk);
%endif
/* Reset subsysRan breadcrumbs */
srClearBC(dzu2rlzxmw1.pookmfxkbnb.ibsclnmq4a);
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.n4rxz4dznf);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.n4rxz4dznf);
%endif
/* Reset subsysRan breadcrumbs */
srClearBC(dzu2rlzxmw1.dmj10vcnymf.mzkry3c5o5);
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.a3qoyxgbtd);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.a3qoyxgbtd);
%endif
/* Reset subsysRan breadcrumbs */
%if (tlcVarSampleHit_0 != "1")
if (%<tlcVarSampleHit_0>) {
    srClearBC(dzu2rlzxmw1.j4vy4l4h0i);
}
%endif
%if (tlcVarSampleHit_0 == "1")
srClearBC(dzu2rlzxmw1.j4vy4l4h0i);
%endif
uTmp_idx_1 = mft3luzpor.SpacecraftDynamics_startDate + 0.5;
A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
B = A + 1524.0;
uTmp_idx_2 = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
month = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
if (month > 12.0) {
    month = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
}
bessDate = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
if (month < 3.0) {
    bessDate++;
}
fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
hour = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
min = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
sec = muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0) + fracSec;
if (month <= 2.0) {
    bessDate--;
    month += 12.0;
}
B = (2.0 - muDoubleScalarFloor(bessDate / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(bessDate / 100.0) / 4.0);
C = (((%<(SLibCG_SE(LibGetT()))> + sec) / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((bessDate + 4716.0) * 365.25) + muDoubleScalarFloor((month + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
uTmp_idx_1 += 0.5;
A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
B = A + 1524.0;
uTmp_idx_2 = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
month = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
if (month > 12.0) {
    month = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
}
bessDate = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
if (month < 3.0) {
    bessDate++;
}
fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
hour = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
min = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
sec = muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0) + fracSec;
if (dzu2rlzxmw1.jici0zznxs) {
    dzu2rlzxmw1.jici0zznxs = false;
    uTmp_idx_0 = e0vrfmpfmv0.mhexdtzhzk[0];
    dUT2UT1 = e0vrfmpfmv0.mhexdtzhzk[1];
    pData_idx_2_p = e0vrfmpfmv0.mhexdtzhzk[2];
    pData_idx_0 = e0vrfmpfmv0.mhexdtzhzk[3];
    pData_idx_1 = e0vrfmpfmv0.mhexdtzhzk[4];
    pData_idx_2 = e0vrfmpfmv0.mhexdtzhzk[5];
    pData_idx_0_e = e0vrfmpfmv0.mhexdtzhzk[6];
    pData_idx_1_e = e0vrfmpfmv0.mhexdtzhzk[7];
    pData_idx_2_m = e0vrfmpfmv0.mhexdtzhzk[8];
    pData_idx_3_p = e0vrfmpfmv0.mhexdtzhzk[9];
    pData_idx_0_p = e0vrfmpfmv0.mhexdtzhzk[10];
    pData_idx_1_p = e0vrfmpfmv0.mhexdtzhzk[11];
    pData_idx_2_i = e0vrfmpfmv0.mhexdtzhzk[12];
    uTmp_idx_1 = mft3luzpor.SpacecraftDynamics_startDate + 0.5;
    A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
    B = A + 1524.0;
    betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
    if (beta > 12.0) {
        beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
    }
    A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
    if (beta < 3.0) {
        A++;
    }
    fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
    flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
    lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
    fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
    if (beta <= 2.0) {
        A--;
        beta += 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = (((%<(SLibCG_SE(LibGetT()))> + fracSec) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    uTmp_idx_1 += 0.5;
    A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
    B = A + 1524.0;
    betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
    if (beta > 12.0) {
        beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
    }
    A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
    if (beta < 3.0) {
        A++;
    }
    fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
    flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
    lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
    fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    degreeP1 = 0;
    if (B < 48622.0) {
        dUdrSumM = -0.1251659;
    } else if (B >= 60337.0) {
        uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
        uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
        uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
        if (uTmp_idx_1 < -0.9) {
            dUdrSumM = -0.9;
        } else {
            dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
        }
    } else if ((B >= 60336.0) && (B < 60337.0)) {
        dUdrSumM = 0.0917493;
    } else {
        for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        dUdrSumM = tmp_g[(uint32_T)degreeP1];
    }
    degreeP1 = 0;
    if (B < 48622.0) {
        pm_idx_0 = 0.182987;
        pm_idx_1 = 0.168775;
    } else if (B >= 60337.0) {
        pm_idx_0 = 0.102773;
        pm_idx_1 = 0.250242;
    } else if ((B >= 60336.0) && (B < 60337.0)) {
        pm_idx_0 = 0.102773;
        pm_idx_1 = 0.250242;
    } else {
        for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        pm_idx_0 = tmp_j[(uint32_T)degreeP1];
        pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
    }
    degreeP1 = 0;
    if (B < 48622.0) {
        dCIP_idx_0 = -0.086;
        dCIP_idx_1 = 0.13;
    } else if (B >= 60034.0) {
        dCIP_idx_0 = 0.16;
        dCIP_idx_1 = 0.123;
    } else if ((B >= 60033.0) && (B < 60034.0)) {
        dCIP_idx_0 = 0.16;
        dCIP_idx_1 = 0.123;
    } else {
        for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
        dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
    }
    dCIP_idx_0 *= 4.8481368110953594E-9;
    dCIP_idx_1 *= 4.8481368110953594E-9;
    pm_idx_0 *= 4.84813681109536E-6;
    pm_idx_1 *= 4.84813681109536E-6;
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    if (uTmp_idx_1 >= 2.4577545E+6) {
        dUdlambdaSumM = 37.0;
    } else if (uTmp_idx_1 >= 2.4572045E+6) {
        dUdlambdaSumM = 36.0;
    } else if (uTmp_idx_1 >= 2.4561095E+6) {
        dUdlambdaSumM = 35.0;
    } else if (uTmp_idx_1 >= 2.4548325E+6) {
        dUdlambdaSumM = 34.0;
    } else if (uTmp_idx_1 >= 2.4537365E+6) {
        dUdlambdaSumM = 33.0;
    } else if (uTmp_idx_1 >= 2.4511795E+6) {
        dUdlambdaSumM = 32.0;
    } else if (uTmp_idx_1 >= 2.4506305E+6) {
        dUdlambdaSumM = 31.0;
    } else if (uTmp_idx_1 >= 2.4500835E+6) {
        dUdlambdaSumM = 30.0;
    } else if (uTmp_idx_1 >= 2.4495345E+6) {
        dUdlambdaSumM = 29.0;
    } else if (uTmp_idx_1 >= 2.4491695E+6) {
        dUdlambdaSumM = 28.0;
    } else if (uTmp_idx_1 >= 2.4488045E+6) {
        dUdlambdaSumM = 27.0;
    } else if (uTmp_idx_1 >= 2.4482575E+6) {
        dUdlambdaSumM = 26.0;
    } else if (uTmp_idx_1 >= 2.4478925E+6) {
        dUdlambdaSumM = 25.0;
    } else if (uTmp_idx_1 >= 2.4471615E+6) {
        dUdlambdaSumM = 24.0;
    } else if (uTmp_idx_1 >= 2.4462475E+6) {
        dUdlambdaSumM = 23.0;
    } else if (uTmp_idx_1 >= 2.4455165E+6) {
        dUdlambdaSumM = 22.0;
    } else if (uTmp_idx_1 >= 2.4451515E+6) {
        dUdlambdaSumM = 21.0;
    } else if (uTmp_idx_1 >= 2.4447865E+6) {
        dUdlambdaSumM = 20.0;
    } else if (uTmp_idx_1 >= 2.4442395E+6) {
        dUdlambdaSumM = 19.0;
    } else if (uTmp_idx_1 >= 2.4438745E+6) {
        dUdlambdaSumM = 18.0;
    } else if (uTmp_idx_1 >= 2.4435095E+6) {
        dUdlambdaSumM = 17.0;
    } else if (uTmp_idx_1 >= 2.4431445E+6) {
        dUdlambdaSumM = 16.0;
    } else if (uTmp_idx_1 >= 2.4427785E+6) {
        dUdlambdaSumM = 15.0;
    } else if (uTmp_idx_1 >= 2.4424135E+6) {
        dUdlambdaSumM = 14.0;
    } else if (uTmp_idx_1 >= 2.4420485E+6) {
        dUdlambdaSumM = 13.0;
    } else if (uTmp_idx_1 >= 2.4416835E+6) {
        dUdlambdaSumM = 12.0;
    } else if (uTmp_idx_1 >= 2.4414995E+6) {
        dUdlambdaSumM = 11.0;
    } else if (uTmp_idx_1 >= 2.4413175E+6) {
        dUdlambdaSumM = 10.0;
    } else if (uTmp_idx_1 >= 2.4398875E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
    } else if (uTmp_idx_1 >= 2.4391265E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
    } else if (uTmp_idx_1 >= 2.4390045E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
    } else if (uTmp_idx_1 >= 2.4389425E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
    } else if (uTmp_idx_1 >= 2.4388205E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
    } else if (uTmp_idx_1 >= 2.4387615E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
    } else if (uTmp_idx_1 >= 2.4386395E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
    } else if (uTmp_idx_1 >= 2.4384865E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
    } else if (uTmp_idx_1 >= 2.4383955E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
    } else if (uTmp_idx_1 >= 2.4383345E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
    } else if (uTmp_idx_1 >= 2.4376655E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
    } else if (uTmp_idx_1 >= 2.4375125E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
    } else if (uTmp_idx_1 >= 2.4373005E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
    } else {
        dUdlambdaSumM = 0.0;
    }
    ssUT = fracSec + dUdrSumM;
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
        A--;
        beta += 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((((fracSec + dUdlambdaSumM) + 32.184) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    uTmp_idx_1 -= 2.451545E+6;
    rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
    C = -pm_idx_0;
    pm_idx_0 = -pm_idx_1;
    pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
    pm_idx_1 = muDoubleScalarSin(pm_idx_0);
    pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
    pm_idx_0 = muDoubleScalarCos(pm_idx_0);
    pData_idx_0_k = muDoubleScalarCos(C);
    pData_idx_6_p = -muDoubleScalarSin(C);
    pData_idx_2_k = muDoubleScalarSin(C);
    pData_idx_8 = muDoubleScalarCos(C);
    pData_idx_0_k += 0.0 * pData_idx_2_k;
    pData_idx_1_k = pm_idx_1 * pData_idx_2_k;
    pData_idx_4_e += pm_idx_1 * 0.0;
    pm_idx_1 *= pData_idx_8;
    pData_idx_2_k *= pm_idx_0;
    dUdrSumM = pData_idx_6_p * 0.0;
    dUdrSumM += 0.0 * pData_idx_5_e;
    dUdrSumM += pm_idx_0 * pData_idx_8;
    pData_idx_0_c = muDoubleScalarCos(rot_pm_idx_0);
    pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
    pData_idx_1_c = -muDoubleScalarSin(rot_pm_idx_0);
    B = muDoubleScalarCos(rot_pm_idx_0);
    pData_idx_0_g = pData_idx_0_k * pData_idx_0_c;
    pData_idx_0_g += 0.0 * pData_idx_1_c;
    pData_idx_0_g += pData_idx_6_p * 0.0;
    pData_idx_3_e = pData_idx_0_k * pData_idx_3_i;
    pData_idx_3_e += 0.0 * B;
    pData_idx_3_e += pData_idx_6_p * 0.0;
    pData_idx_1_g = pData_idx_0_c * pData_idx_1_k;
    pData_idx_1_g += pData_idx_1_c * pData_idx_4_e;
    pData_idx_1_g += pm_idx_1 * 0.0;
    pData_idx_4 = pData_idx_3_i * pData_idx_1_k;
    pData_idx_4 += pData_idx_4_e * B;
    pData_idx_4 += pm_idx_1 * 0.0;
    pData_idx_2_f = pData_idx_0_c * pData_idx_2_k;
    pData_idx_2_f += pData_idx_1_c * pData_idx_5_e;
    pData_idx_5 = pData_idx_3_i * pData_idx_2_k;
    pData_idx_5 += B * pData_idx_5_e;
    pm_idx_0 = 0.0 * pData_idx_2_k;
    pm_idx_0 += 0.0 * pData_idx_5_e;
    pm_idx_0 += dUdrSumM;
    fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
    dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
    dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
    dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((ssUT / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = A - 2.4000005E+6;
    A = B - 51544.5;
    pData_idx_0_k = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_1_k = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    nutationV[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
    nutationV[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
    nutationV[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
    nutationV[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
    nutationV[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
    nutationV[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
    nutationV[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
    nutationV[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
    nutationV[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
    nutationV[0] = muDoubleScalarMod(nutationV[0], 6.2831853071795862);
    nutationV[1] = muDoubleScalarMod(nutationV[1], 6.2831853071795862);
    nutationV[2] = muDoubleScalarMod(nutationV[2], 6.2831853071795862);
    nutationV[3] = muDoubleScalarMod(nutationV[3], 6.2831853071795862);
    nutationV[4] = muDoubleScalarMod(nutationV[4], 6.2831853071795862);
    nutationV[5] = muDoubleScalarMod(nutationV[5], 6.2831853071795862);
    nutationV[6] = muDoubleScalarMod(nutationV[6], 6.2831853071795862);
    nutationV[7] = muDoubleScalarMod(nutationV[7], 6.2831853071795862);
    nutationV[8] = muDoubleScalarMod(nutationV[8], 6.2831853071795862);
    nutationV[9] = muDoubleScalarMod(nutationV[9], 6.2831853071795862);
    nutationV[10] = muDoubleScalarMod(nutationV[10], 6.2831853071795862);
    nutationV[11] = muDoubleScalarMod(nutationV[11], 6.2831853071795862);
    nutationV[12] = muDoubleScalarMod(nutationV[12], 6.2831853071795862);
    nutationV[13] = muDoubleScalarMod(nutationV[13], 6.2831853071795862);
    A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
    beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
    betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
    degreeP1 = 0;
    for (count = 0; count < 1306; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX[degreeP3] = 1.0;
    }
    for (count = 0; count < 253; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX[degreeP3] = uTmp_idx_1 / 36525.0;
    }
    for (count = 0; count < 36; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX[degreeP3] = fracSec;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX[degreeP3] = dUdrSumM;
    ktuiv5qnvo2.factor_dX[degreeP1] = dUdphiSumM;
    degreeP1 = 0;
    for (count = 0; count < 962; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY[degreeP3] = 1.0;
    }
    for (count = 0; count < 277; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY[degreeP3] = uTmp_idx_1 / 36525.0;
    }
    for (count = 0; count < 30; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY[degreeP3] = fracSec;
    }
    for (count = 0; count < 5; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY[degreeP3] = dUdrSumM;
    }
    ktuiv5qnvo2.factor_dY[degreeP1] = dUdphiSumM;
    degreeP1 = 0;
    for (count = 0; count < 33; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        factor_dS[degreeP3] = 1.0;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = uTmp_idx_1 / 36525.0;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = uTmp_idx_1 / 36525.0;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = uTmp_idx_1 / 36525.0;
    for (count = 0; count < 25; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        factor_dS[degreeP3] = fracSec;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS[degreeP3] = dUdrSumM;
    factor_dS[degreeP1] = dUdphiSumM;
    flat = 0.0;
    lonNew = 0.0;
    for (count = 0; count < 1600; count++) {
        for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
            lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV[degreeP1];
        }
        flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX[count];
        lonNew = 0.0;
    }
    uTmp_idx_1 = 0.0;
    for (count = 0; count < 1275; count++) {
        for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
            uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV[degreeP1];
        }
        lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY[count];
        uTmp_idx_1 = 0.0;
    }
    nutationV_s[0] = nutationV[0];
    nutationV_s[1] = nutationV[1];
    nutationV_s[2] = nutationV[2];
    nutationV_s[3] = nutationV[3];
    nutationV_s[4] = nutationV[4];
    nutationV_s[5] = nutationV[6];
    nutationV_s[6] = nutationV[7];
    nutationV_s[7] = nutationV[13];
    fracSec = 0.0;
    for (count = 0; count < 66; count++) {
        for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
            fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s[degreeP1];
        }
        uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS[count];
        fracSec = 0.0;
    }
    A += flat;
    beta += lonNew;
    betaNew += uTmp_idx_1;
    A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
    beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
    betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
    flat = A * A;
    lonNew = beta * beta;
    dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
    dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
    A = -muDoubleScalarAtan2(beta, A) - betaNew;
    pData_idx_0_c = muDoubleScalarCos(A);
    C = muDoubleScalarSin(A);
    pData_idx_1_c = -muDoubleScalarSin(A);
    B = muDoubleScalarCos(A);
    pData_idx_0_f = muDoubleScalarCos(dUdrSumM);
    pData_idx_6 = -muDoubleScalarSin(dUdrSumM);
    pData_idx_2_k = muDoubleScalarSin(dUdrSumM);
    pData_idx_8 = muDoubleScalarCos(dUdrSumM);
    pData_idx_0_j = pData_idx_0_c * pData_idx_0_f;
    pData_idx_0_j += C * 0.0;
    pData_idx_0_j += 0.0 * pData_idx_2_k;
    rot_pm_idx_0 = pData_idx_0_c * 0.0;
    rot_pm_idx_0 += C;
    beta = pData_idx_0_c * pData_idx_6;
    beta += C * 0.0;
    beta += 0.0 * pData_idx_8;
    pData_idx_1_f = pData_idx_0_f * pData_idx_1_c;
    pData_idx_1_f += 0.0 * B;
    pData_idx_1_f += 0.0 * pData_idx_2_k;
    pData_idx_4_p = 0.0 * pData_idx_1_c;
    pData_idx_4_p += B;
    betaNew = pData_idx_6 * pData_idx_1_c;
    betaNew += B * 0.0;
    betaNew += 0.0 * pData_idx_8;
    pData_idx_2_c = pData_idx_0_f * 0.0;
    pData_idx_2_c += pData_idx_2_k;
    dUdrSumM = pData_idx_6 * 0.0;
    dUdrSumM += pData_idx_8;
    pData_idx_0_c = muDoubleScalarCos(dCIP_idx_1);
    C = muDoubleScalarSin(dCIP_idx_1);
    pData_idx_1_c = -muDoubleScalarSin(dCIP_idx_1);
    B = muDoubleScalarCos(dCIP_idx_1);
    pData_idx_0_f = pData_idx_0_j * pData_idx_0_c;
    pData_idx_0_f += rot_pm_idx_0 * pData_idx_1_c;
    pData_idx_0_f += beta * 0.0;
    uTmp_idx_1 = pData_idx_0_j * C;
    uTmp_idx_1 += rot_pm_idx_0 * B;
    uTmp_idx_1 += beta * 0.0;
    pData_idx_6 = pData_idx_0_j * 0.0;
    pData_idx_6 += rot_pm_idx_0 * 0.0;
    pData_idx_6 += beta;
    pData_idx_1_j = pData_idx_0_c * pData_idx_1_f;
    pData_idx_1_j += pData_idx_1_c * pData_idx_4_p;
    pData_idx_1_j += betaNew * 0.0;
    lonNew = C * pData_idx_1_f;
    lonNew += pData_idx_4_p * B;
    lonNew += betaNew * 0.0;
    pData_idx_7 = 0.0 * pData_idx_1_f;
    pData_idx_7 += pData_idx_4_p * 0.0;
    pData_idx_7 += betaNew;
    pData_idx_2_k = pData_idx_0_c * pData_idx_2_c;
    pData_idx_2_k += pData_idx_1_c * 0.0;
    pData_idx_2_k += 0.0 * dUdrSumM;
    pData_idx_5_e = C * pData_idx_2_c;
    pData_idx_5_e += B * 0.0;
    pData_idx_5_e += 0.0 * dUdrSumM;
    pData_idx_8 = 0.0 * pData_idx_2_c;
    pData_idx_8 += dUdrSumM;
    pData_idx_0_c = pData_idx_0_k * pData_idx_0_f;
    pData_idx_0_c += pData_idx_3_i * pData_idx_1_j;
    pData_idx_0_c += 0.0 * pData_idx_2_k;
    C = pData_idx_0_k * uTmp_idx_1;
    C += pData_idx_3_i * lonNew;
    C += 0.0 * pData_idx_5_e;
    beta = pData_idx_0_k * pData_idx_6;
    beta += pData_idx_3_i * pData_idx_7;
    beta += 0.0 * pData_idx_8;
    pData_idx_1_c = pData_idx_0_f * pData_idx_1_k;
    pData_idx_1_c += pData_idx_1_j * pData_idx_4_e;
    pData_idx_1_c += 0.0 * pData_idx_2_k;
    B = uTmp_idx_1 * pData_idx_1_k;
    B += pData_idx_4_e * lonNew;
    B += 0.0 * pData_idx_5_e;
    betaNew = pData_idx_6 * pData_idx_1_k;
    betaNew += pData_idx_4_e * pData_idx_7;
    betaNew += 0.0 * pData_idx_8;
    pData_idx_2_c = pData_idx_0_f * 0.0;
    pData_idx_2_c += pData_idx_1_j * 0.0;
    pData_idx_2_c += pData_idx_2_k;
    pData_idx_5_p = uTmp_idx_1 * 0.0;
    pData_idx_5_p += lonNew * 0.0;
    pData_idx_5_p += pData_idx_5_e;
    dUdrSumM = pData_idx_6 * 0.0;
    dUdrSumM += pData_idx_7 * 0.0;
    dUdrSumM += pData_idx_8;
    pData_idx_0_k = (pData_idx_0_c * uTmp_idx_0 + C * dUT2UT1) + beta * pData_idx_2_p;
    pData_idx_1_k = (uTmp_idx_0 * pData_idx_1_c + dUT2UT1 * B) + betaNew * pData_idx_2_p;
    pData_idx_2_k = (uTmp_idx_0 * pData_idx_2_c + dUT2UT1 * pData_idx_5_p) + pData_idx_2_p * dUdrSumM;
    pData_idx_0_f = (pData_idx_0_g * pData_idx_0_k + pData_idx_3_e * pData_idx_1_k) + pData_idx_6_p * pData_idx_2_k;
    pData_idx_1_f = (pData_idx_0_k * pData_idx_1_g + pData_idx_1_k * pData_idx_4) + pm_idx_1 * pData_idx_2_k;
    pData_idx_2_e = (pData_idx_0_k * pData_idx_2_f + pData_idx_1_k * pData_idx_5) + pData_idx_2_k * pm_idx_0;
    pData_idx_0_c = (pData_idx_0_c * pData_idx_0 + C * pData_idx_1) + beta * pData_idx_2;
    pData_idx_1_c = (pData_idx_0 * pData_idx_1_c + pData_idx_1 * B) + betaNew * pData_idx_2;
    pData_idx_2_c = (pData_idx_0 * pData_idx_2_c + pData_idx_1 * pData_idx_5_p) + pData_idx_2 * dUdrSumM;
    pData_idx_0_j = 0.0 * pData_idx_2_k - pData_idx_1_k * 7.2921151467069791E-5;
    pData_idx_1_j = pData_idx_0_k * 7.2921151467069791E-5 - 0.0 * pData_idx_2_k;
    pData_idx_2_k = 0.0 * pData_idx_1_k - pData_idx_0_k * 0.0;
    pData_idx_0_k = pData_idx_0_c - pData_idx_0_j;
    pData_idx_1_k = pData_idx_1_c - pData_idx_1_j;
    pData_idx_2_k = pData_idx_2_c - pData_idx_2_k;
    pData_idx_0_c = (pData_idx_0_g * pData_idx_0_k + pData_idx_3_e * pData_idx_1_k) + pData_idx_6_p * pData_idx_2_k;
    pData_idx_1_c = (pData_idx_0_k * pData_idx_1_g + pData_idx_1_k * pData_idx_4) + pm_idx_1 * pData_idx_2_k;
    pData_idx_2_k = (pData_idx_0_k * pData_idx_2_f + pData_idx_1_k * pData_idx_5) + pData_idx_2_k * pm_idx_0;
    uTmp_idx_1 = mft3luzpor.SpacecraftDynamics_startDate + 0.5;
    A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
    B = A + 1524.0;
    betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
    if (beta > 12.0) {
        beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
    }
    A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
    if (beta < 3.0) {
        A++;
    }
    fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
    flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
    lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
    fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
    if (beta <= 2.0) {
        A--;
        beta += 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = (((%<(SLibCG_SE(LibGetT()))> + fracSec) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    uTmp_idx_1 += 0.5;
    A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
    B = A + 1524.0;
    betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
    if (beta > 12.0) {
        beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
    }
    A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
    if (beta < 3.0) {
        A++;
    }
    fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
    flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
    lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
    fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    degreeP1 = 0;
    if (B < 48622.0) {
        dUdrSumM = -0.1251659;
    } else if (B >= 60337.0) {
        uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
        uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
        uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
        if (uTmp_idx_1 < -0.9) {
            dUdrSumM = -0.9;
        } else {
            dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
        }
    } else if ((B >= 60336.0) && (B < 60337.0)) {
        dUdrSumM = 0.0917493;
    } else {
        for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        dUdrSumM = tmp_g[(uint32_T)degreeP1];
    }
    degreeP1 = 0;
    if (B < 48622.0) {
        pm_idx_0 = 0.182987;
        pm_idx_1 = 0.168775;
    } else if (B >= 60337.0) {
        pm_idx_0 = 0.102773;
        pm_idx_1 = 0.250242;
    } else if ((B >= 60336.0) && (B < 60337.0)) {
        pm_idx_0 = 0.102773;
        pm_idx_1 = 0.250242;
    } else {
        for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        pm_idx_0 = tmp_j[(uint32_T)degreeP1];
        pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
    }
    degreeP1 = 0;
    if (B < 48622.0) {
        dCIP_idx_0 = -0.086;
        dCIP_idx_1 = 0.13;
    } else if (B >= 60034.0) {
        dCIP_idx_0 = 0.16;
        dCIP_idx_1 = 0.123;
    } else if ((B >= 60033.0) && (B < 60034.0)) {
        dCIP_idx_0 = 0.16;
        dCIP_idx_1 = 0.123;
    } else {
        for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
            if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
                degreeP1 = degreeP3;
            }
        }
        dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
        dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
    }
    dCIP_idx_0 *= 4.8481368110953594E-9;
    dCIP_idx_1 *= 4.8481368110953594E-9;
    pm_idx_0 *= 4.84813681109536E-6;
    pm_idx_1 *= 4.84813681109536E-6;
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    if (uTmp_idx_1 >= 2.4577545E+6) {
        dUdlambdaSumM = 37.0;
    } else if (uTmp_idx_1 >= 2.4572045E+6) {
        dUdlambdaSumM = 36.0;
    } else if (uTmp_idx_1 >= 2.4561095E+6) {
        dUdlambdaSumM = 35.0;
    } else if (uTmp_idx_1 >= 2.4548325E+6) {
        dUdlambdaSumM = 34.0;
    } else if (uTmp_idx_1 >= 2.4537365E+6) {
        dUdlambdaSumM = 33.0;
    } else if (uTmp_idx_1 >= 2.4511795E+6) {
        dUdlambdaSumM = 32.0;
    } else if (uTmp_idx_1 >= 2.4506305E+6) {
        dUdlambdaSumM = 31.0;
    } else if (uTmp_idx_1 >= 2.4500835E+6) {
        dUdlambdaSumM = 30.0;
    } else if (uTmp_idx_1 >= 2.4495345E+6) {
        dUdlambdaSumM = 29.0;
    } else if (uTmp_idx_1 >= 2.4491695E+6) {
        dUdlambdaSumM = 28.0;
    } else if (uTmp_idx_1 >= 2.4488045E+6) {
        dUdlambdaSumM = 27.0;
    } else if (uTmp_idx_1 >= 2.4482575E+6) {
        dUdlambdaSumM = 26.0;
    } else if (uTmp_idx_1 >= 2.4478925E+6) {
        dUdlambdaSumM = 25.0;
    } else if (uTmp_idx_1 >= 2.4471615E+6) {
        dUdlambdaSumM = 24.0;
    } else if (uTmp_idx_1 >= 2.4462475E+6) {
        dUdlambdaSumM = 23.0;
    } else if (uTmp_idx_1 >= 2.4455165E+6) {
        dUdlambdaSumM = 22.0;
    } else if (uTmp_idx_1 >= 2.4451515E+6) {
        dUdlambdaSumM = 21.0;
    } else if (uTmp_idx_1 >= 2.4447865E+6) {
        dUdlambdaSumM = 20.0;
    } else if (uTmp_idx_1 >= 2.4442395E+6) {
        dUdlambdaSumM = 19.0;
    } else if (uTmp_idx_1 >= 2.4438745E+6) {
        dUdlambdaSumM = 18.0;
    } else if (uTmp_idx_1 >= 2.4435095E+6) {
        dUdlambdaSumM = 17.0;
    } else if (uTmp_idx_1 >= 2.4431445E+6) {
        dUdlambdaSumM = 16.0;
    } else if (uTmp_idx_1 >= 2.4427785E+6) {
        dUdlambdaSumM = 15.0;
    } else if (uTmp_idx_1 >= 2.4424135E+6) {
        dUdlambdaSumM = 14.0;
    } else if (uTmp_idx_1 >= 2.4420485E+6) {
        dUdlambdaSumM = 13.0;
    } else if (uTmp_idx_1 >= 2.4416835E+6) {
        dUdlambdaSumM = 12.0;
    } else if (uTmp_idx_1 >= 2.4414995E+6) {
        dUdlambdaSumM = 11.0;
    } else if (uTmp_idx_1 >= 2.4413175E+6) {
        dUdlambdaSumM = 10.0;
    } else if (uTmp_idx_1 >= 2.4398875E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
    } else if (uTmp_idx_1 >= 2.4391265E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
    } else if (uTmp_idx_1 >= 2.4390045E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
    } else if (uTmp_idx_1 >= 2.4389425E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
    } else if (uTmp_idx_1 >= 2.4388205E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
    } else if (uTmp_idx_1 >= 2.4387615E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
    } else if (uTmp_idx_1 >= 2.4386395E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
    } else if (uTmp_idx_1 >= 2.4384865E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
    } else if (uTmp_idx_1 >= 2.4383955E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
    } else if (uTmp_idx_1 >= 2.4383345E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
    } else if (uTmp_idx_1 >= 2.4376655E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
    } else if (uTmp_idx_1 >= 2.4375125E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
    } else if (uTmp_idx_1 >= 2.4373005E+6) {
        uTmp_idx_1 = A;
        dUdphiSumM = beta;
        if (beta <= 2.0) {
            uTmp_idx_1 = A - 1.0;
            dUdphiSumM = beta + 12.0;
        }
        B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
        C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
        uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
        B = uTmp_idx_1 - 2.4000005E+6;
        dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
    } else {
        dUdlambdaSumM = 0.0;
    }
    ssUT = fracSec + dUdrSumM;
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
        A--;
        beta += 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((((fracSec + dUdlambdaSumM) + 32.184) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    uTmp_idx_1 -= 2.451545E+6;
    rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
    C = -pm_idx_0;
    pm_idx_0 = -pm_idx_1;
    pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
    pm_idx_1 = muDoubleScalarSin(pm_idx_0);
    pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
    pm_idx_0 = muDoubleScalarCos(pm_idx_0);
    pData_idx_0_k = muDoubleScalarCos(C);
    pData_idx_6_p = -muDoubleScalarSin(C);
    pData_idx_2_f = muDoubleScalarSin(C);
    pData_idx_8 = muDoubleScalarCos(C);
    pData_idx_0_k += 0.0 * pData_idx_2_f;
    pData_idx_1_k = pm_idx_1 * pData_idx_2_f;
    pData_idx_4_e += pm_idx_1 * 0.0;
    pm_idx_1 *= pData_idx_8;
    pData_idx_2_f *= pm_idx_0;
    dUdrSumM = pData_idx_6_p * 0.0;
    dUdrSumM += 0.0 * pData_idx_5_e;
    dUdrSumM += pm_idx_0 * pData_idx_8;
    pData_idx_0_g = muDoubleScalarCos(rot_pm_idx_0);
    pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
    pData_idx_1_g = -muDoubleScalarSin(rot_pm_idx_0);
    B = muDoubleScalarCos(rot_pm_idx_0);
    pData_idx_0_j = pData_idx_0_k * pData_idx_0_g;
    pData_idx_0_j += 0.0 * pData_idx_1_g;
    pData_idx_0_j += pData_idx_6_p * 0.0;
    pData_idx_3_e = pData_idx_0_k * pData_idx_3_i;
    pData_idx_3_e += 0.0 * B;
    pData_idx_3_e += pData_idx_6_p * 0.0;
    pData_idx_1_j = pData_idx_0_g * pData_idx_1_k;
    pData_idx_1_j += pData_idx_1_g * pData_idx_4_e;
    pData_idx_1_j += pm_idx_1 * 0.0;
    pData_idx_4 = pData_idx_3_i * pData_idx_1_k;
    pData_idx_4 += pData_idx_4_e * B;
    pData_idx_4 += pm_idx_1 * 0.0;
    pData_idx_2_c = pData_idx_0_g * pData_idx_2_f;
    pData_idx_2_c += pData_idx_1_g * pData_idx_5_e;
    pData_idx_5 = pData_idx_3_i * pData_idx_2_f;
    pData_idx_5 += B * pData_idx_5_e;
    pm_idx_0 = 0.0 * pData_idx_2_f;
    pm_idx_0 += 0.0 * pData_idx_5_e;
    pm_idx_0 += dUdrSumM;
    fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
    dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
    dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
    dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((ssUT / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = A - 2.4000005E+6;
    A = B - 51544.5;
    pData_idx_0_k = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_1_k = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
    nutationV_p[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV_p[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV_p[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV_p[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV_p[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
    nutationV_p[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
    nutationV_p[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
    nutationV_p[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
    nutationV_p[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
    nutationV_p[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
    nutationV_p[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
    nutationV_p[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
    nutationV_p[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
    nutationV_p[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
    nutationV_p[0] = muDoubleScalarMod(nutationV_p[0], 6.2831853071795862);
    nutationV_p[1] = muDoubleScalarMod(nutationV_p[1], 6.2831853071795862);
    nutationV_p[2] = muDoubleScalarMod(nutationV_p[2], 6.2831853071795862);
    nutationV_p[3] = muDoubleScalarMod(nutationV_p[3], 6.2831853071795862);
    nutationV_p[4] = muDoubleScalarMod(nutationV_p[4], 6.2831853071795862);
    nutationV_p[5] = muDoubleScalarMod(nutationV_p[5], 6.2831853071795862);
    nutationV_p[6] = muDoubleScalarMod(nutationV_p[6], 6.2831853071795862);
    nutationV_p[7] = muDoubleScalarMod(nutationV_p[7], 6.2831853071795862);
    nutationV_p[8] = muDoubleScalarMod(nutationV_p[8], 6.2831853071795862);
    nutationV_p[9] = muDoubleScalarMod(nutationV_p[9], 6.2831853071795862);
    nutationV_p[10] = muDoubleScalarMod(nutationV_p[10], 6.2831853071795862);
    nutationV_p[11] = muDoubleScalarMod(nutationV_p[11], 6.2831853071795862);
    nutationV_p[12] = muDoubleScalarMod(nutationV_p[12], 6.2831853071795862);
    nutationV_p[13] = muDoubleScalarMod(nutationV_p[13], 6.2831853071795862);
    A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
    beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
    betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
    degreeP1 = 0;
    for (count = 0; count < 1306; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = 1.0;
    }
    for (count = 0; count < 253; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = uTmp_idx_1 / 36525.0;
    }
    for (count = 0; count < 36; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = fracSec;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP3] = dUdrSumM;
    ktuiv5qnvo2.factor_dX_mbvzarwird[degreeP1] = dUdphiSumM;
    degreeP1 = 0;
    for (count = 0; count < 962; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY_cv5hdgrwft[degreeP3] = 1.0;
    }
    for (count = 0; count < 277; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY_cv5hdgrwft[degreeP3] = uTmp_idx_1 / 36525.0;
    }
    for (count = 0; count < 30; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY_cv5hdgrwft[degreeP3] = fracSec;
    }
    for (count = 0; count < 5; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        ktuiv5qnvo2.factor_dY_cv5hdgrwft[degreeP3] = dUdrSumM;
    }
    ktuiv5qnvo2.factor_dY_cv5hdgrwft[degreeP1] = dUdphiSumM;
    degreeP1 = 0;
    for (count = 0; count < 33; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        factor_dS_p[degreeP3] = 1.0;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = uTmp_idx_1 / 36525.0;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = uTmp_idx_1 / 36525.0;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = uTmp_idx_1 / 36525.0;
    for (count = 0; count < 25; count++) {
        degreeP3 = degreeP1;
        degreeP1++;
        factor_dS_p[degreeP3] = fracSec;
    }
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = dUdrSumM;
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_p[degreeP3] = dUdrSumM;
    factor_dS_p[degreeP1] = dUdphiSumM;
    flat = 0.0;
    lonNew = 0.0;
    for (count = 0; count < 1600; count++) {
        for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
            lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_p[degreeP1];
        }
        flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_mbvzarwird[count];
        lonNew = 0.0;
    }
    uTmp_idx_1 = 0.0;
    for (count = 0; count < 1275; count++) {
        for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
            uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_p[degreeP1];
        }
        lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_cv5hdgrwft[count];
        uTmp_idx_1 = 0.0;
    }
    nutationV_s_p[0] = nutationV_p[0];
    nutationV_s_p[1] = nutationV_p[1];
    nutationV_s_p[2] = nutationV_p[2];
    nutationV_s_p[3] = nutationV_p[3];
    nutationV_s_p[4] = nutationV_p[4];
    nutationV_s_p[5] = nutationV_p[6];
    nutationV_s_p[6] = nutationV_p[7];
    nutationV_s_p[7] = nutationV_p[13];
    fracSec = 0.0;
    for (count = 0; count < 66; count++) {
        for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
            fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_p[degreeP1];
        }
        uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_p[count];
        fracSec = 0.0;
    }
    A += flat;
    beta += lonNew;
    betaNew += uTmp_idx_1;
    A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
    beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
    betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
    flat = A * A;
    lonNew = beta * beta;
    dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
    dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
    A = -muDoubleScalarAtan2(beta, A) - betaNew;
    pData_idx_0_g = muDoubleScalarCos(A);
    C = muDoubleScalarSin(A);
    pData_idx_1_g = -muDoubleScalarSin(A);
    B = muDoubleScalarCos(A);
    pData_idx_0_m = muDoubleScalarCos(dUdrSumM);
    pData_idx_6 = -muDoubleScalarSin(dUdrSumM);
    pData_idx_2_f = muDoubleScalarSin(dUdrSumM);
    pData_idx_8 = muDoubleScalarCos(dUdrSumM);
    pData_idx_0_i = pData_idx_0_g * pData_idx_0_m;
    pData_idx_0_i += C * 0.0;
    pData_idx_0_i += 0.0 * pData_idx_2_f;
    rot_pm_idx_0 = pData_idx_0_g * 0.0;
    rot_pm_idx_0 += C;
    beta = pData_idx_0_g * pData_idx_6;
    beta += C * 0.0;
    beta += 0.0 * pData_idx_8;
    pData_idx_1_m = pData_idx_0_m * pData_idx_1_g;
    pData_idx_1_m += 0.0 * B;
    pData_idx_1_m += 0.0 * pData_idx_2_f;
    pData_idx_4_p = 0.0 * pData_idx_1_g;
    pData_idx_4_p += B;
    betaNew = pData_idx_6 * pData_idx_1_g;
    betaNew += B * 0.0;
    betaNew += 0.0 * pData_idx_8;
    pData_idx_2_j = pData_idx_0_m * 0.0;
    pData_idx_2_j += pData_idx_2_f;
    dUdrSumM = pData_idx_6 * 0.0;
    dUdrSumM += pData_idx_8;
    pData_idx_0_g = muDoubleScalarCos(dCIP_idx_1);
    C = muDoubleScalarSin(dCIP_idx_1);
    pData_idx_1_g = -muDoubleScalarSin(dCIP_idx_1);
    B = muDoubleScalarCos(dCIP_idx_1);
    pData_idx_0_m = pData_idx_0_i * pData_idx_0_g;
    pData_idx_0_m += rot_pm_idx_0 * pData_idx_1_g;
    pData_idx_0_m += beta * 0.0;
    uTmp_idx_1 = pData_idx_0_i * C;
    uTmp_idx_1 += rot_pm_idx_0 * B;
    uTmp_idx_1 += beta * 0.0;
    pData_idx_6 = pData_idx_0_i * 0.0;
    pData_idx_6 += rot_pm_idx_0 * 0.0;
    pData_idx_6 += beta;
    pData_idx_1_i = pData_idx_0_g * pData_idx_1_m;
    pData_idx_1_i += pData_idx_1_g * pData_idx_4_p;
    pData_idx_1_i += betaNew * 0.0;
    lonNew = C * pData_idx_1_m;
    lonNew += pData_idx_4_p * B;
    lonNew += betaNew * 0.0;
    pData_idx_7 = 0.0 * pData_idx_1_m;
    pData_idx_7 += pData_idx_4_p * 0.0;
    pData_idx_7 += betaNew;
    pData_idx_2_f = pData_idx_0_g * pData_idx_2_j;
    pData_idx_2_f += pData_idx_1_g * 0.0;
    pData_idx_2_f += 0.0 * dUdrSumM;
    pData_idx_5_e = C * pData_idx_2_j;
    pData_idx_5_e += B * 0.0;
    pData_idx_5_e += 0.0 * dUdrSumM;
    pData_idx_8 = 0.0 * pData_idx_2_j;
    pData_idx_8 += dUdrSumM;
    pData_idx_0_g = pData_idx_0_k * pData_idx_0_m;
    pData_idx_0_g += pData_idx_3_i * pData_idx_1_i;
    pData_idx_0_g += 0.0 * pData_idx_2_f;
    C = pData_idx_0_k * uTmp_idx_1;
    C += pData_idx_3_i * lonNew;
    C += 0.0 * pData_idx_5_e;
    beta = pData_idx_0_k * pData_idx_6;
    beta += pData_idx_3_i * pData_idx_7;
    beta += 0.0 * pData_idx_8;
    pData_idx_1_g = pData_idx_0_m * pData_idx_1_k;
    pData_idx_1_g += pData_idx_1_i * pData_idx_4_e;
    pData_idx_1_g += 0.0 * pData_idx_2_f;
    B = uTmp_idx_1 * pData_idx_1_k;
    B += pData_idx_4_e * lonNew;
    B += 0.0 * pData_idx_5_e;
    betaNew = pData_idx_6 * pData_idx_1_k;
    betaNew += pData_idx_4_e * pData_idx_7;
    betaNew += 0.0 * pData_idx_8;
    pData_idx_2_j = pData_idx_0_m * 0.0;
    pData_idx_2_j += pData_idx_1_i * 0.0;
    pData_idx_2_j += pData_idx_2_f;
    pData_idx_5_p = uTmp_idx_1 * 0.0;
    pData_idx_5_p += lonNew * 0.0;
    pData_idx_5_p += pData_idx_5_e;
    dUdrSumM = pData_idx_6 * 0.0;
    dUdrSumM += pData_idx_7 * 0.0;
    dUdrSumM += pData_idx_8;
    pData_idx_0_k = pData_idx_0_j * pData_idx_0_g;
    pData_idx_0_k += pData_idx_3_e * pData_idx_1_g;
    pData_idx_0_k += pData_idx_6_p * pData_idx_2_j;
    pData_idx_3_i = pData_idx_0_j * C;
    pData_idx_3_i += pData_idx_3_e * B;
    pData_idx_3_i += pData_idx_6_p * pData_idx_5_p;
    pData_idx_6 = pData_idx_0_j * beta;
    pData_idx_6 += pData_idx_3_e * betaNew;
    pData_idx_6 += pData_idx_6_p * dUdrSumM;
    pData_idx_1_k = pData_idx_0_g * pData_idx_1_j;
    pData_idx_1_k += pData_idx_1_g * pData_idx_4;
    pData_idx_1_k += pm_idx_1 * pData_idx_2_j;
    pData_idx_4_e = C * pData_idx_1_j;
    pData_idx_4_e += pData_idx_4 * B;
    pData_idx_4_e += pm_idx_1 * pData_idx_5_p;
    pData_idx_7 = beta * pData_idx_1_j;
    pData_idx_7 += pData_idx_4 * betaNew;
    pData_idx_7 += pm_idx_1 * dUdrSumM;
    pData_idx_2_f = pData_idx_0_g * pData_idx_2_c;
    pData_idx_2_f += pData_idx_1_g * pData_idx_5;
    pData_idx_2_f += pData_idx_2_j * pm_idx_0;
    pData_idx_5_e = C * pData_idx_2_c;
    pData_idx_5_e += B * pData_idx_5;
    pData_idx_5_e += pData_idx_5_p * pm_idx_0;
    pData_idx_8 = beta * pData_idx_2_c;
    pData_idx_8 += betaNew * pData_idx_5;
    pData_idx_8 += pm_idx_0 * dUdrSumM;
    beta = muDoubleScalarAtan2(pData_idx_2_e, muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) * 0.99664718683);
    A = muDoubleScalarAtan2(42841.338876856695 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + pData_idx_2_e, muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) - 42697.699871649937 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
    betaNew = muDoubleScalarAtan2(0.99664718683 * muDoubleScalarSin(A), muDoubleScalarCos(A));
    count = 0;
    while ((beta != betaNew) && (count < 5)) {
        beta = betaNew;
        A = muDoubleScalarAtan2(42841.338876856695 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + pData_idx_2_e, muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) - 42697.699871649937 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
        betaNew = muDoubleScalarAtan2(0.99664718683 * muDoubleScalarSin(A), muDoubleScalarCos(A));
        count++;
    }
    flat = muDoubleScalarAbs(A);
    beta = A;
    lonNew = muDoubleScalarAtan2(pData_idx_1_f, pData_idx_0_f);
    if (flat > 3.1415926535897931) {
        beta = muDoubleScalarMod(A + 3.1415926535897931, 6.2831853071795862) - 3.1415926535897931;
        flat = muDoubleScalarAbs(beta);
    }
    if (flat > 1.5707963267948966) {
        lonNew = muDoubleScalarAtan2(pData_idx_1_f, pData_idx_0_f) + 3.1415926535897931;
        beta = (1.5707963267948966 - (flat - 1.5707963267948966)) * muDoubleScalarSign(beta);
    }
    if ((muDoubleScalarAbs(lonNew) > 3.1415926535897931) && (muDoubleScalarAbs(lonNew) > 3.1415926535897931)) {
        lonNew = muDoubleScalarRem(lonNew, 6.2831853071795862) - trunc(muDoubleScalarRem(lonNew, 6.2831853071795862) / 3.1415926535897931) * 6.2831853071795862;
    }
    pData_idx_0_g = -muDoubleScalarCos(lonNew) * muDoubleScalarSin(beta);
    pData_idx_3_e = -muDoubleScalarSin(lonNew) * muDoubleScalarSin(beta);
    pData_idx_6_p = muDoubleScalarCos(beta);
    pData_idx_1_g = -muDoubleScalarSin(lonNew);
    B = muDoubleScalarCos(lonNew);
    pData_idx_2_c = -muDoubleScalarCos(lonNew) * muDoubleScalarCos(beta);
    pData_idx_5 = -muDoubleScalarSin(lonNew) * muDoubleScalarCos(beta);
    pm_idx_0 = -muDoubleScalarSin(beta);
    pData_idx_0_j = 1.0 / muDoubleScalarSqrt(((pData_idx_0_e * pData_idx_0_e + pData_idx_1_e * pData_idx_1_e) + pData_idx_2_m * pData_idx_2_m) + pData_idx_3_p * pData_idx_3_p) * pData_idx_0_e;
    pData_idx_1_j = 1.0 / muDoubleScalarSqrt(((pData_idx_0_e * pData_idx_0_e + pData_idx_1_e * pData_idx_1_e) + pData_idx_2_m * pData_idx_2_m) + pData_idx_3_p * pData_idx_3_p) * pData_idx_1_e;
    pData_idx_2_j = 1.0 / muDoubleScalarSqrt(((pData_idx_0_e * pData_idx_0_e + pData_idx_1_e * pData_idx_1_e) + pData_idx_2_m * pData_idx_2_m) + pData_idx_3_p * pData_idx_3_p) * pData_idx_2_m;
    C = 1.0 / muDoubleScalarSqrt(((pData_idx_0_e * pData_idx_0_e + pData_idx_1_e * pData_idx_1_e) + pData_idx_2_m * pData_idx_2_m) + pData_idx_3_p * pData_idx_3_p) * pData_idx_3_p;
    if ((pData_idx_0_g + B) + pm_idx_0 > 0.0) {
        pData_idx_0_m = muDoubleScalarSqrt(((pData_idx_0_g + B) + pm_idx_0) + 1.0) * 0.5;
        pData_idx_1_m = (0.0 - pData_idx_5) / (muDoubleScalarSqrt(((pData_idx_0_g + B) + pm_idx_0) + 1.0) * 2.0);
        pData_idx_2_g = (pData_idx_2_c - pData_idx_6_p) / (muDoubleScalarSqrt(((pData_idx_0_g + B) + pm_idx_0) + 1.0) * 2.0);
        rot_pm_idx_0 = (pData_idx_3_e - pData_idx_1_g) / (muDoubleScalarSqrt(((pData_idx_0_g + B) + pm_idx_0) + 1.0) * 2.0);
    } else if ((B > pData_idx_0_g) && (B > pm_idx_0)) {
        betaNew = muDoubleScalarSqrt(((B - pData_idx_0_g) - pm_idx_0) + 1.0);
        pData_idx_2_g = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        pData_idx_0_m = (pData_idx_2_c - pData_idx_6_p) * betaNew;
        pData_idx_1_m = (pData_idx_3_e + pData_idx_1_g) * betaNew;
        rot_pm_idx_0 = pData_idx_5 * betaNew;
    } else if (pm_idx_0 > pData_idx_0_g) {
        betaNew = muDoubleScalarSqrt(((pm_idx_0 - pData_idx_0_g) - B) + 1.0);
        rot_pm_idx_0 = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        pData_idx_0_m = (pData_idx_3_e - pData_idx_1_g) * betaNew;
        pData_idx_1_m = (pData_idx_6_p + pData_idx_2_c) * betaNew;
        pData_idx_2_g = pData_idx_5 * betaNew;
    } else {
        betaNew = muDoubleScalarSqrt(((pData_idx_0_g - B) - pm_idx_0) + 1.0);
        pData_idx_1_m = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        pData_idx_0_m = (0.0 - pData_idx_5) * betaNew;
        pData_idx_2_g = (pData_idx_3_e + pData_idx_1_g) * betaNew;
        rot_pm_idx_0 = (pData_idx_6_p + pData_idx_2_c) * betaNew;
    }
    pData_idx_0_g = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_0_m;
    pData_idx_1_g = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_1_m;
    pData_idx_2_c = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_2_g;
    pData_idx_3_e = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * rot_pm_idx_0;
    pData_idx_0_m = pData_idx_1_j * pData_idx_0_g;
    pData_idx_1_m = pData_idx_0_g * pData_idx_2_j;
    pData_idx_2_g = pData_idx_0_g * C;
    pData_idx_0_i = pData_idx_1_g * pData_idx_0_j;
    pData_idx_1_i = pData_idx_0_j * pData_idx_2_c;
    pData_idx_2_m = pData_idx_0_j * pData_idx_3_e;
    pData_idx_0_m += pData_idx_0_i;
    pData_idx_1_m += pData_idx_1_i;
    pData_idx_2_g += pData_idx_2_m;
    pData_idx_0_i = pData_idx_2_c * C - pData_idx_2_j * pData_idx_3_e;
    pData_idx_1_i = pData_idx_1_j * pData_idx_3_e - pData_idx_1_g * C;
    pData_idx_2_m = pData_idx_1_g * pData_idx_2_j - pData_idx_1_j * pData_idx_2_c;
    pData_idx_0_m += pData_idx_0_i;
    pData_idx_1_m += pData_idx_1_i;
    pData_idx_2_g += pData_idx_2_m;
    pData_idx_0_i = pData_idx_0_g * pData_idx_0_j - ((pData_idx_1_g * pData_idx_1_j + pData_idx_2_c * pData_idx_2_j) + pData_idx_3_e * C);
    if ((pData_idx_0_k + pData_idx_4_e) + pData_idx_8 > 0.0) {
        flat = muDoubleScalarSqrt(((pData_idx_0_k + pData_idx_4_e) + pData_idx_8) + 1.0) * 0.5;
        pData_idx_1_i = (pData_idx_7 - pData_idx_5_e) / (muDoubleScalarSqrt(((pData_idx_0_k + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
        pData_idx_2_m = (pData_idx_2_f - pData_idx_6) / (muDoubleScalarSqrt(((pData_idx_0_k + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
        rot_pm_idx_0 = (pData_idx_3_i - pData_idx_1_k) / (muDoubleScalarSqrt(((pData_idx_0_k + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
    } else if ((pData_idx_4_e > pData_idx_0_k) && (pData_idx_4_e > pData_idx_8)) {
        betaNew = muDoubleScalarSqrt(((pData_idx_4_e - pData_idx_0_k) - pData_idx_8) + 1.0);
        pData_idx_2_m = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        flat = (pData_idx_2_f - pData_idx_6) * betaNew;
        pData_idx_1_i = (pData_idx_3_i + pData_idx_1_k) * betaNew;
        rot_pm_idx_0 = (pData_idx_7 + pData_idx_5_e) * betaNew;
    } else if (pData_idx_8 > pData_idx_0_k) {
        betaNew = muDoubleScalarSqrt(((pData_idx_8 - pData_idx_0_k) - pData_idx_4_e) + 1.0);
        rot_pm_idx_0 = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        flat = (pData_idx_3_i - pData_idx_1_k) * betaNew;
        pData_idx_1_i = (pData_idx_6 + pData_idx_2_f) * betaNew;
        pData_idx_2_m = (pData_idx_7 + pData_idx_5_e) * betaNew;
    } else {
        betaNew = muDoubleScalarSqrt(((pData_idx_0_k - pData_idx_4_e) - pData_idx_8) + 1.0);
        pData_idx_1_i = 0.5 * betaNew;
        if (betaNew != 0.0) {
            betaNew = 0.5 / betaNew;
        }
        flat = (pData_idx_7 - pData_idx_5_e) * betaNew;
        pData_idx_2_m = (pData_idx_3_i + pData_idx_1_k) * betaNew;
        rot_pm_idx_0 = (pData_idx_6 + pData_idx_2_f) * betaNew;
    }
    pData_idx_0_k = pData_idx_0_m * flat;
    pData_idx_1_k = flat * pData_idx_1_m;
    pData_idx_2_f = flat * pData_idx_2_g;
    pData_idx_0_e = pData_idx_1_i * pData_idx_0_i;
    pData_idx_1_e = pData_idx_0_i * pData_idx_2_m;
    uTmp_idx_1 = pData_idx_0_i * rot_pm_idx_0;
    pData_idx_0_k += pData_idx_0_e;
    pData_idx_1_k += pData_idx_1_e;
    pData_idx_2_f += uTmp_idx_1;
    pData_idx_0_e = pData_idx_2_m * pData_idx_2_g - pData_idx_1_m * rot_pm_idx_0;
    pData_idx_1_e = pData_idx_0_m * rot_pm_idx_0 - pData_idx_1_i * pData_idx_2_g;
    uTmp_idx_1 = pData_idx_1_i * pData_idx_1_m - pData_idx_0_m * pData_idx_2_m;
    pData_idx_0_k += pData_idx_0_e;
    pData_idx_1_k += pData_idx_1_e;
    pData_idx_2_f += uTmp_idx_1;
    flat = flat * pData_idx_0_i - ((pData_idx_1_i * pData_idx_0_m + pData_idx_2_m * pData_idx_1_m) + rot_pm_idx_0 * pData_idx_2_g);
    pData_idx_0_e = 1.0 / muDoubleScalarSqrt(((flat * flat + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_f * pData_idx_2_f) * flat;
    pData_idx_1_e = 1.0 / muDoubleScalarSqrt(((flat * flat + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_f * pData_idx_2_f) * pData_idx_0_k;
    pData_idx_2_m = 1.0 / muDoubleScalarSqrt(((flat * flat + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_f * pData_idx_2_f) * pData_idx_1_k;
    pData_idx_3_p = 1.0 / muDoubleScalarSqrt(((flat * flat + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_f * pData_idx_2_f) * pData_idx_2_f;
    pData_idx_1_k = -pData_idx_1_g;
    pData_idx_2_f = -pData_idx_2_c;
    pData_idx_3_i = -pData_idx_3_e;
    pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_g * pData_idx_0_g + pData_idx_1_g * pData_idx_1_g) + pData_idx_2_c * pData_idx_2_c) + pData_idx_3_e * pData_idx_3_e) * pData_idx_0_g;
    pData_idx_1_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_g * pData_idx_0_g + pData_idx_1_g * pData_idx_1_g) + pData_idx_2_c * pData_idx_2_c) + pData_idx_3_e * pData_idx_3_e);
    pData_idx_2_f *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_g * pData_idx_0_g + pData_idx_1_g * pData_idx_1_g) + pData_idx_2_c * pData_idx_2_c) + pData_idx_3_e * pData_idx_3_e);
    pData_idx_3_i *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_g * pData_idx_0_g + pData_idx_1_g * pData_idx_1_g) + pData_idx_2_c * pData_idx_2_c) + pData_idx_3_e * pData_idx_3_e);
    flat = pData_idx_0_c * pData_idx_0_k;
    pData_idx_1_i = pData_idx_0_k * pData_idx_1_c;
    uTmp_idx_1 = pData_idx_0_k * pData_idx_2_k;
    pData_idx_5_e = pData_idx_1_k * 0.0;
    ssUT = 0.0 * pData_idx_2_f;
    pData_idx_4_e = 0.0 * pData_idx_3_i;
    flat += pData_idx_5_e;
    pData_idx_1_i += ssUT;
    uTmp_idx_1 += pData_idx_4_e;
    pData_idx_5_e = pData_idx_2_f * pData_idx_2_k - pData_idx_1_c * pData_idx_3_i;
    ssUT = pData_idx_0_c * pData_idx_3_i - pData_idx_1_k * pData_idx_2_k;
    pData_idx_4_e = pData_idx_1_k * pData_idx_1_c - pData_idx_0_c * pData_idx_2_f;
    flat += pData_idx_5_e;
    pData_idx_1_i += ssUT;
    uTmp_idx_1 += pData_idx_4_e;
    pData_idx_0_k = pData_idx_0_k * 0.0 - ((pData_idx_1_k * pData_idx_0_c + pData_idx_2_f * pData_idx_1_c) + pData_idx_3_i * pData_idx_2_k);
    pData_idx_0_c = pData_idx_1_g * pData_idx_0_k;
    pData_idx_1_k = pData_idx_0_k * pData_idx_2_c;
    pData_idx_0_k = flat * pData_idx_0_g;
    pData_idx_1_c = pData_idx_0_g * pData_idx_1_i;
    pData_idx_0_k += pData_idx_0_c;
    pData_idx_1_k += pData_idx_1_c;
    pData_idx_0_c = pData_idx_1_i * pData_idx_3_e - pData_idx_2_c * uTmp_idx_1;
    pData_idx_1_c = pData_idx_1_g * uTmp_idx_1 - flat * pData_idx_3_e;
    pData_idx_0_k += pData_idx_0_c;
    pData_idx_1_k += pData_idx_1_c;
    pData_idx_0_c = pData_idx_1_k / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_e) * muDoubleScalarSin(A) + muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126));
    pData_idx_1_c = -(pData_idx_0_k / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_e) * muDoubleScalarSin(A) + muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.33543860012835E+6 / muDoubleScalarPower(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126, 1.5)));
    pData_idx_2_k = -(pData_idx_1_k / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_e) * muDoubleScalarSin(A) + muDoubleScalarSqrt(pData_idx_0_f * pData_idx_0_f + pData_idx_1_f * pData_idx_1_f) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126)) * muDoubleScalarTan(beta));
    pData_idx_1_k = -pData_idx_1_j;
    pData_idx_2_f = -pData_idx_2_j;
    pData_idx_3_i = -C;
    pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_j * pData_idx_0_j + pData_idx_1_j * pData_idx_1_j) + pData_idx_2_j * pData_idx_2_j) + C * C) * pData_idx_0_j;
    pData_idx_1_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_j * pData_idx_0_j + pData_idx_1_j * pData_idx_1_j) + pData_idx_2_j * pData_idx_2_j) + C * C);
    pData_idx_2_f *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_j * pData_idx_0_j + pData_idx_1_j * pData_idx_1_j) + pData_idx_2_j * pData_idx_2_j) + C * C);
    pData_idx_3_i *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_j * pData_idx_0_j + pData_idx_1_j * pData_idx_1_j) + pData_idx_2_j * pData_idx_2_j) + C * C);
    pData_idx_0_g = pData_idx_0_c * pData_idx_0_k;
    pData_idx_1_g = pData_idx_0_k * pData_idx_1_c;
    pData_idx_2_c = pData_idx_0_k * pData_idx_2_k;
    pData_idx_0_f = pData_idx_1_k * 0.0;
    pData_idx_1_f = 0.0 * pData_idx_2_f;
    pData_idx_2_e = 0.0 * pData_idx_3_i;
    pData_idx_0_g += pData_idx_0_f;
    pData_idx_1_g += pData_idx_1_f;
    pData_idx_2_c += pData_idx_2_e;
    pData_idx_0_f = pData_idx_2_f * pData_idx_2_k - pData_idx_1_c * pData_idx_3_i;
    pData_idx_1_f = pData_idx_0_c * pData_idx_3_i - pData_idx_1_k * pData_idx_2_k;
    pData_idx_2_e = pData_idx_1_k * pData_idx_1_c - pData_idx_0_c * pData_idx_2_f;
    pData_idx_0_g += pData_idx_0_f;
    pData_idx_1_g += pData_idx_1_f;
    pData_idx_2_c += pData_idx_2_e;
    pData_idx_0_k = pData_idx_0_k * 0.0 - ((pData_idx_1_k * pData_idx_0_c + pData_idx_2_f * pData_idx_1_c) + pData_idx_3_i * pData_idx_2_k);
    pData_idx_0_c = pData_idx_1_j * pData_idx_0_k;
    pData_idx_1_k = pData_idx_0_k * pData_idx_2_j;
    pData_idx_2_k = pData_idx_0_k * C;
    pData_idx_0_k = pData_idx_0_g * pData_idx_0_j;
    pData_idx_1_c = pData_idx_0_j * pData_idx_1_g;
    pData_idx_2_f = pData_idx_0_j * pData_idx_2_c;
    pData_idx_0_k += pData_idx_0_c;
    pData_idx_1_k += pData_idx_1_c;
    pData_idx_2_k += pData_idx_2_f;
    pData_idx_0_c = pData_idx_1_g * C - pData_idx_2_j * pData_idx_2_c;
    pData_idx_1_c = pData_idx_1_j * pData_idx_2_c - pData_idx_0_g * C;
    pData_idx_2_f = pData_idx_0_g * pData_idx_2_j - pData_idx_1_j * pData_idx_1_g;
    pData_idx_0_k += pData_idx_0_c;
    pData_idx_1_k += pData_idx_1_c;
    pData_idx_2_k += pData_idx_2_f;
    pData_idx_0_p += pData_idx_0_k;
    pData_idx_1_p += pData_idx_1_k;
    pData_idx_2_i += pData_idx_2_k;
    pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_i * pData_idx_0_i + pData_idx_0_m * pData_idx_0_m) + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) * pData_idx_0_i;
    pData_idx_1_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_i * pData_idx_0_i + pData_idx_0_m * pData_idx_0_m) + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) * pData_idx_0_m;
    pData_idx_2_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_i * pData_idx_0_i + pData_idx_0_m * pData_idx_0_m) + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) * pData_idx_1_m;
    pData_idx_3_i = 1.0 / muDoubleScalarSqrt(((pData_idx_0_i * pData_idx_0_i + pData_idx_0_m * pData_idx_0_m) + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) * pData_idx_2_g;
    pData_idx_1_c = -pData_idx_1_k;
    pData_idx_2_f = -pData_idx_2_k;
    pData_idx_3_e = -pData_idx_3_i;
    pData_idx_0_c = 1.0 / muDoubleScalarSqrt(((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i) * pData_idx_0_k;
    pData_idx_1_c *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
    pData_idx_2_f *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
    pData_idx_3_e *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
    pData_idx_0_g = 0.0 * pData_idx_0_c;
    pData_idx_1_g = pData_idx_0_c * 0.0;
    pData_idx_2_c = pData_idx_0_c * 7.2921151467069791E-5;
    pData_idx_0_f = pData_idx_1_c * 0.0;
    pData_idx_1_f = 0.0 * pData_idx_2_f;
    pData_idx_2_e = 0.0 * pData_idx_3_e;
    pData_idx_0_g += pData_idx_0_f;
    pData_idx_1_g += pData_idx_1_f;
    pData_idx_2_c += pData_idx_2_e;
    pData_idx_0_f = pData_idx_2_f * 7.2921151467069791E-5 - 0.0 * pData_idx_3_e;
    pData_idx_1_f = 0.0 * pData_idx_3_e - pData_idx_1_c * 7.2921151467069791E-5;
    pData_idx_2_e = pData_idx_1_c * 0.0 - 0.0 * pData_idx_2_f;
    pData_idx_0_g += pData_idx_0_f;
    pData_idx_1_g += pData_idx_1_f;
    pData_idx_2_c += pData_idx_2_e;
    pData_idx_0_c = pData_idx_0_c * 0.0 - ((pData_idx_1_c * 0.0 + pData_idx_2_f * 0.0) + pData_idx_3_e * 7.2921151467069791E-5);
    pData_idx_0_f = pData_idx_1_k * pData_idx_0_c;
    pData_idx_1_c = pData_idx_0_c * pData_idx_2_k;
    pData_idx_2_f = pData_idx_0_c * pData_idx_3_i;
    pData_idx_0_c = pData_idx_0_g * pData_idx_0_k;
    pData_idx_1_f = pData_idx_0_k * pData_idx_1_g;
    pData_idx_2_e = pData_idx_0_k * pData_idx_2_c;
    pData_idx_0_k = pData_idx_0_f + pData_idx_0_c;
    pData_idx_1_c += pData_idx_1_f;
    pData_idx_2_f += pData_idx_2_e;
    pData_idx_0_c = pData_idx_1_g * pData_idx_3_i - pData_idx_2_k * pData_idx_2_c;
    pData_idx_1_f = pData_idx_1_k * pData_idx_2_c - pData_idx_0_g * pData_idx_3_i;
    pData_idx_2_k = pData_idx_0_g * pData_idx_2_k - pData_idx_1_k * pData_idx_1_g;
    pData_idx_0_k += pData_idx_0_c;
    pData_idx_1_k = pData_idx_1_c + pData_idx_1_f;
    pData_idx_2_k += pData_idx_2_f;
    pData_idx_0_p += pData_idx_0_k;
    pData_idx_1_p += pData_idx_1_k;
    pData_idx_2_i += pData_idx_2_k;
    e0vrfmpfmv0.mhexdtzhzk[0] = uTmp_idx_0;
    e0vrfmpfmv0.mhexdtzhzk[1] = dUT2UT1;
    e0vrfmpfmv0.mhexdtzhzk[2] = pData_idx_2_p;
    e0vrfmpfmv0.mhexdtzhzk[3] = pData_idx_0;
    e0vrfmpfmv0.mhexdtzhzk[4] = pData_idx_1;
    e0vrfmpfmv0.mhexdtzhzk[5] = pData_idx_2;
    e0vrfmpfmv0.mhexdtzhzk[6] = pData_idx_0_e;
    e0vrfmpfmv0.mhexdtzhzk[7] = pData_idx_1_e;
    e0vrfmpfmv0.mhexdtzhzk[8] = pData_idx_2_m;
    e0vrfmpfmv0.mhexdtzhzk[9] = pData_idx_3_p;
    e0vrfmpfmv0.mhexdtzhzk[10] = pData_idx_0_p;
    e0vrfmpfmv0.mhexdtzhzk[11] = pData_idx_1_p;
    e0vrfmpfmv0.mhexdtzhzk[12] = pData_idx_2_i;
}
pData_idx_0_p = e0vrfmpfmv0.mhexdtzhzk[0];
pData_idx_1_p = e0vrfmpfmv0.mhexdtzhzk[1];
pData_idx_2_i = e0vrfmpfmv0.mhexdtzhzk[2];
pData_idx_0_k = e0vrfmpfmv0.mhexdtzhzk[3];
pData_idx_1_k = e0vrfmpfmv0.mhexdtzhzk[4];
pData_idx_2_k = e0vrfmpfmv0.mhexdtzhzk[5];
uTmp_idx_0 = e0vrfmpfmv0.mhexdtzhzk[6];
dUT2UT1 = e0vrfmpfmv0.mhexdtzhzk[7];
pData_idx_2_p = e0vrfmpfmv0.mhexdtzhzk[8];
pData_idx_3_i = e0vrfmpfmv0.mhexdtzhzk[9];
pData_idx_0_c = 1.0 / muDoubleScalarSqrt(((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) + pData_idx_3_i * pData_idx_3_i) * uTmp_idx_0;
pData_idx_1_c = 1.0 / muDoubleScalarSqrt(((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) + pData_idx_3_i * pData_idx_3_i) * dUT2UT1;
pData_idx_2_f = 1.0 / muDoubleScalarSqrt(((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) + pData_idx_3_i * pData_idx_3_i) * pData_idx_2_p;
pData_idx_3 = 1.0 / muDoubleScalarSqrt(((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) + pData_idx_3_i * pData_idx_3_i) * pData_idx_3_i;
pData_idx_0_g = e0vrfmpfmv0.mhexdtzhzk[10];
pData_idx_1_g = e0vrfmpfmv0.mhexdtzhzk[11];
pData_idx_2_c = e0vrfmpfmv0.mhexdtzhzk[12];
uTmp_idx_0 = pData_idx_0_p;
pData_idx_0 = pData_idx_0_k;
dUT2UT1 = pData_idx_1_p;
pData_idx_1 = pData_idx_1_k;
pData_idx_2_p = pData_idx_2_i;
pData_idx_2 = pData_idx_2_k;
pData_idx_4 = mft3luzpor.SpacecraftDynamics_mass;
pData[0] = mft3luzpor.SpacecraftDynamics_inertia[0];
pData[3] = mft3luzpor.SpacecraftDynamics_inertia[3];
pData[6] = mft3luzpor.SpacecraftDynamics_inertia[6];
pData[1] = mft3luzpor.SpacecraftDynamics_inertia[1];
pData[4] = mft3luzpor.SpacecraftDynamics_inertia[4];
pData[7] = mft3luzpor.SpacecraftDynamics_inertia[7];
pData[2] = mft3luzpor.SpacecraftDynamics_inertia[2];
pData[5] = mft3luzpor.SpacecraftDynamics_inertia[5];
pData[8] = mft3luzpor.SpacecraftDynamics_inertia[8];
pData_idx_0_p = ktuiv5qnvo2.pznqhrc4sj[0];
pData_idx_1_p = ktuiv5qnvo2.pznqhrc4sj[1];
pData_idx_2_i = ktuiv5qnvo2.pznqhrc4sj[2];
pData_idx_1_k = -pData_idx_1_c;
pData_idx_2_k = -pData_idx_2_f;
pData_idx_3_i = -pData_idx_3;
pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_0_c;
pData_idx_1_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_2_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_3_i *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_0_f = uTmp_idx_0 * pData_idx_0_k;
pData_idx_1_f = pData_idx_0_k * dUT2UT1;
pData_idx_2_e = pData_idx_0_k * pData_idx_2_p;
pData_idx_0_j = pData_idx_1_k * 0.0;
pData_idx_1_j = 0.0 * pData_idx_2_k;
pData_idx_2_j = 0.0 * pData_idx_3_i;
pData_idx_0_f += pData_idx_0_j;
pData_idx_1_f += pData_idx_1_j;
pData_idx_2_e += pData_idx_2_j;
pData_idx_0_j = pData_idx_2_k * pData_idx_2_p - dUT2UT1 * pData_idx_3_i;
pData_idx_1_j = uTmp_idx_0 * pData_idx_3_i - pData_idx_1_k * pData_idx_2_p;
pData_idx_2_j = pData_idx_1_k * dUT2UT1 - uTmp_idx_0 * pData_idx_2_k;
pData_idx_0_f += pData_idx_0_j;
pData_idx_1_f += pData_idx_1_j;
pData_idx_2_e += pData_idx_2_j;
pData_idx_0_k = pData_idx_0_k * 0.0 - ((pData_idx_1_k * uTmp_idx_0 + pData_idx_2_k * dUT2UT1) + pData_idx_3_i * pData_idx_2_p);
pData_idx_0_j = pData_idx_1_c * pData_idx_0_k;
pData_idx_1_k = pData_idx_0_k * pData_idx_2_f;
pData_idx_2_k = pData_idx_0_k * pData_idx_3;
pData_idx_0_k = pData_idx_0_f * pData_idx_0_c;
pData_idx_1_j = pData_idx_0_c * pData_idx_1_f;
pData_idx_2_j = pData_idx_0_c * pData_idx_2_e;
pData_idx_0_k += pData_idx_0_j;
pData_idx_1_k += pData_idx_1_j;
pData_idx_2_k += pData_idx_2_j;
pData_idx_0_j = pData_idx_1_f * pData_idx_3 - pData_idx_2_f * pData_idx_2_e;
pData_idx_1_j = pData_idx_1_c * pData_idx_2_e - pData_idx_0_f * pData_idx_3;
pData_idx_2_e = pData_idx_0_f * pData_idx_2_f - pData_idx_1_c * pData_idx_1_f;
pData_idx_0_k += pData_idx_0_j;
pData_idx_1_k += pData_idx_1_j;
pData_idx_2_k += pData_idx_2_e;
pData_idx_0_f = 1.1958013254E+15 / muDoubleScalarPower(muDoubleScalarSqrt((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k), 5.0) * pData_idx_0_k;
pData_idx_1_f = 1.1958013254E+15 / muDoubleScalarPower(muDoubleScalarSqrt((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k), 5.0) * pData_idx_1_k;
pData_idx_2_e = 1.1958013254E+15 / muDoubleScalarPower(muDoubleScalarSqrt((pData_idx_0_k * pData_idx_0_k + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k), 5.0) * pData_idx_2_k;
pData_idx_0_j = pData[0] * pData_idx_0_k;
pData_idx_0_j += pData[3] * pData_idx_1_k;
pData_idx_0_j += pData[6] * pData_idx_2_k;
pData_idx_1_j = pData_idx_0_k * pData[1];
pData_idx_1_j += pData_idx_1_k * pData[4];
pData_idx_1_j += pData[7] * pData_idx_2_k;
pData_idx_2_j = pData_idx_0_k * pData[2];
pData_idx_2_j += pData_idx_1_k * pData[5];
pData_idx_2_j += pData_idx_2_k * pData[8];
pData_idx_0_k = pData_idx_1_f * pData_idx_2_j - pData_idx_1_j * pData_idx_2_e;
pData_idx_1_k = pData_idx_0_j * pData_idx_2_e - pData_idx_0_f * pData_idx_2_j;
pData_idx_2_k = pData_idx_0_f * pData_idx_1_j - pData_idx_0_j * pData_idx_1_f;
pData_idx_0_p += pData_idx_0_k;
pData_idx_1_p += pData_idx_1_k;
pData_idx_2_i += pData_idx_2_k;
v1[0] = pData[4] * pData[8] - pData[5] * pData[7];
v1[3] = pData[1] * pData[8] - pData[2] * pData[7];
v1[6] = pData[1] * pData[5] - pData[2] * pData[4];
v1[1] = pData[3] * pData[8] - pData[5] * pData[6];
v1[4] = pData[0] * pData[8] - pData[2] * pData[6];
v1[7] = pData[0] * pData[5] - pData[2] * pData[3];
v1[2] = pData[3] * pData[7] - pData[4] * pData[6];
v1[5] = pData[0] * pData[7] - pData[1] * pData[6];
v1[8] = pData[0] * pData[4] - pData[1] * pData[3];
pData_idx_0_k = v1[0];
pData_idx_3_i = v1[1];
pData_idx_6_p = v1[2];
pData_idx_1_k = v1[3];
pData_idx_4_e = v1[4];
pm_idx_1 = v1[5];
pData_idx_2_k = v1[6];
pData_idx_5_e = v1[7];
pm_idx_0 = v1[8];
pData_idx_3_e = ((pData[4] * pData[8] - pData[5] * pData[7]) * pData[0] - (pData[1] * pData[8] - pData[2] * pData[7]) * pData[3]) + (pData[1] * pData[5] - pData[2] * pData[4]) * pData[6];
pData_idx_0_k *= 1.0 / pData_idx_3_e;
pData_idx_3_i *= 1.0 / pData_idx_3_e;
pData_idx_6_p *= 1.0 / pData_idx_3_e;
pData_idx_1_k *= 1.0 / pData_idx_3_e;
pData_idx_4_e *= 1.0 / pData_idx_3_e;
pm_idx_1 *= 1.0 / pData_idx_3_e;
pData_idx_2_k *= 1.0 / pData_idx_3_e;
pData_idx_5_e *= 1.0 / pData_idx_3_e;
pm_idx_0 *= 1.0 / pData_idx_3_e;
pData_idx_0_f = 0.0 * pData_idx_0_g;
pData_idx_0_f += 0.0 * pData_idx_1_g;
pData_idx_0_f += 0.0 * pData_idx_2_c;
pData_idx_1_f = pData_idx_0_g * 0.0;
pData_idx_1_f += pData_idx_1_g * 0.0;
pData_idx_1_f += 0.0 * pData_idx_2_c;
pData_idx_2_e = pData_idx_0_g * 0.0;
pData_idx_2_e += pData_idx_1_g * 0.0;
pData_idx_2_e += pData_idx_2_c * 0.0;
pData_idx_0_p -= pData_idx_0_f;
pData_idx_1_p -= pData_idx_1_f;
pData_idx_2_i -= pData_idx_2_e;
pData_idx_0_f = pData[0] * pData_idx_0_g;
pData_idx_0_f += pData[3] * pData_idx_1_g;
pData_idx_0_f += pData[6] * pData_idx_2_c;
pData_idx_1_f = pData_idx_0_g * pData[1];
pData_idx_1_f += pData_idx_1_g * pData[4];
pData_idx_1_f += pData[7] * pData_idx_2_c;
pData_idx_2_e = pData_idx_0_g * pData[2];
pData_idx_2_e += pData_idx_1_g * pData[5];
pData_idx_2_e += pData_idx_2_c * pData[8];
pData_idx_0_j = pData_idx_1_g * pData_idx_2_e - pData_idx_1_f * pData_idx_2_c;
pData_idx_1_j = pData_idx_0_f * pData_idx_2_c - pData_idx_0_g * pData_idx_2_e;
pData_idx_2_e = pData_idx_0_g * pData_idx_1_f - pData_idx_0_f * pData_idx_1_g;
pData_idx_0_p -= pData_idx_0_j;
pData_idx_1_p -= pData_idx_1_j;
pData_idx_2_i -= pData_idx_2_e;
pData_idx_0_f = pData_idx_0_k * pData_idx_0_p;
pData_idx_0_f += pData_idx_3_i * pData_idx_1_p;
pData_idx_0_f += pData_idx_6_p * pData_idx_2_i;
pData_idx_1_f = pData_idx_0_p * pData_idx_1_k;
pData_idx_1_f += pData_idx_1_p * pData_idx_4_e;
pData_idx_1_f += pm_idx_1 * pData_idx_2_i;
pData_idx_2_e = pData_idx_0_p * pData_idx_2_k;
pData_idx_2_e += pData_idx_1_p * pData_idx_5_e;
pData_idx_2_e += pData_idx_2_i * pm_idx_0;
pData_idx_0_j = ktuiv5qnvo2.eogfn30uhr[0];
pData_idx_1_j = ktuiv5qnvo2.eogfn30uhr[1];
pData_idx_2_j = ktuiv5qnvo2.eogfn30uhr[2];
pData_idx_0_p = ktuiv5qnvo2.cv1nz3ipi2[0];
pData_idx_1_p = ktuiv5qnvo2.cv1nz3ipi2[1];
pData_idx_2_i = ktuiv5qnvo2.cv1nz3ipi2[2];
pData_idx_1_k = -pData_idx_1_c;
pData_idx_2_k = -pData_idx_2_f;
pData_idx_3_i = -pData_idx_3;
pData_idx_1_m = -pData_idx_1_k;
pData_idx_2_g = -pData_idx_2_k;
pData_idx_3_e = -pData_idx_3_i;
pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i) * pData_idx_0_c;
pData_idx_1_m *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
pData_idx_2_g *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
pData_idx_3_e *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) + pData_idx_3_i * pData_idx_3_i);
pData_idx_0_m = pData_idx_0_p * pData_idx_0_k;
pData_idx_1_i = pData_idx_0_k * pData_idx_1_p;
pData_idx_2_m = pData_idx_0_k * pData_idx_2_i;
pData_idx_0_i = pData_idx_1_m * 0.0;
pData_idx_1_e = 0.0 * pData_idx_2_g;
uTmp_idx_1 = 0.0 * pData_idx_3_e;
pData_idx_0_m += pData_idx_0_i;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_i = pData_idx_2_g * pData_idx_2_i - pData_idx_1_p * pData_idx_3_e;
pData_idx_1_e = pData_idx_0_p * pData_idx_3_e - pData_idx_1_m * pData_idx_2_i;
uTmp_idx_1 = pData_idx_1_m * pData_idx_1_p - pData_idx_0_p * pData_idx_2_g;
pData_idx_0_m += pData_idx_0_i;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_p = pData_idx_0_k * 0.0 - ((pData_idx_1_m * pData_idx_0_p + pData_idx_2_g * pData_idx_1_p) + pData_idx_3_e * pData_idx_2_i);
pData_idx_0_k = pData_idx_1_k * pData_idx_0_p;
pData_idx_1_p = pData_idx_0_p * pData_idx_2_k;
pData_idx_2_i = pData_idx_0_p * pData_idx_3_i;
pData_idx_0_p = pData_idx_0_m * pData_idx_0_c;
pData_idx_1_m = pData_idx_0_c * pData_idx_1_i;
pData_idx_2_g = pData_idx_0_c * pData_idx_2_m;
pData_idx_0_p += pData_idx_0_k;
pData_idx_1_p += pData_idx_1_m;
pData_idx_2_i += pData_idx_2_g;
pData_idx_0_k = pData_idx_1_i * pData_idx_3_i - pData_idx_2_k * pData_idx_2_m;
pData_idx_1_m = pData_idx_1_k * pData_idx_2_m - pData_idx_0_m * pData_idx_3_i;
pData_idx_2_k = pData_idx_0_m * pData_idx_2_k - pData_idx_1_k * pData_idx_1_i;
pData_idx_0_p += pData_idx_0_k;
pData_idx_1_p += pData_idx_1_m;
pData_idx_2_i += pData_idx_2_k;
pData_idx_0_m = pData_idx_0_p / pData_idx_4;
pData_idx_1_m = pData_idx_1_p / pData_idx_4;
pData_idx_2_g = pData_idx_2_i / pData_idx_4;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = uTmp_idx_1 - 2.4000005E+6;
degreeP1 = 0;
if (B < 48622.0) {
    dUdrSumM = -0.1251659;
} else if (B >= 60337.0) {
    uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
    uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
    uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
    if (uTmp_idx_1 < -0.9) {
        dUdrSumM = -0.9;
    } else {
        dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    }
} else if ((B >= 60336.0) && (B < 60337.0)) {
    dUdrSumM = 0.0917493;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dUdrSumM = tmp_g[(uint32_T)degreeP1];
}
degreeP1 = 0;
if (B < 48622.0) {
    pData_idx_1_p = 0.182987;
    pData_idx_0_p = 0.168775;
} else if (B >= 60337.0) {
    pData_idx_1_p = 0.102773;
    pData_idx_0_p = 0.250242;
} else if ((B >= 60336.0) && (B < 60337.0)) {
    pData_idx_1_p = 0.102773;
    pData_idx_0_p = 0.250242;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    pData_idx_1_p = tmp_j[(uint32_T)degreeP1];
    pData_idx_0_p = tmp_j[(uint32_T)degreeP1 + 11715U];
}
degreeP1 = 0;
if (B < 48622.0) {
    dCIP_idx_0 = -0.086;
    dCIP_idx_1 = 0.13;
} else if (B >= 60034.0) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else if ((B >= 60033.0) && (B < 60034.0)) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else {
    for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
    dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
}
dCIP_idx_0 *= 4.8481368110953594E-9;
dCIP_idx_1 *= 4.8481368110953594E-9;
pData_idx_1_p *= 4.84813681109536E-6;
pData_idx_0_p *= 4.84813681109536E-6;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
if (uTmp_idx_1 >= 2.4577545E+6) {
    dUdlambdaSumM = 37.0;
} else if (uTmp_idx_1 >= 2.4572045E+6) {
    dUdlambdaSumM = 36.0;
} else if (uTmp_idx_1 >= 2.4561095E+6) {
    dUdlambdaSumM = 35.0;
} else if (uTmp_idx_1 >= 2.4548325E+6) {
    dUdlambdaSumM = 34.0;
} else if (uTmp_idx_1 >= 2.4537365E+6) {
    dUdlambdaSumM = 33.0;
} else if (uTmp_idx_1 >= 2.4511795E+6) {
    dUdlambdaSumM = 32.0;
} else if (uTmp_idx_1 >= 2.4506305E+6) {
    dUdlambdaSumM = 31.0;
} else if (uTmp_idx_1 >= 2.4500835E+6) {
    dUdlambdaSumM = 30.0;
} else if (uTmp_idx_1 >= 2.4495345E+6) {
    dUdlambdaSumM = 29.0;
} else if (uTmp_idx_1 >= 2.4491695E+6) {
    dUdlambdaSumM = 28.0;
} else if (uTmp_idx_1 >= 2.4488045E+6) {
    dUdlambdaSumM = 27.0;
} else if (uTmp_idx_1 >= 2.4482575E+6) {
    dUdlambdaSumM = 26.0;
} else if (uTmp_idx_1 >= 2.4478925E+6) {
    dUdlambdaSumM = 25.0;
} else if (uTmp_idx_1 >= 2.4471615E+6) {
    dUdlambdaSumM = 24.0;
} else if (uTmp_idx_1 >= 2.4462475E+6) {
    dUdlambdaSumM = 23.0;
} else if (uTmp_idx_1 >= 2.4455165E+6) {
    dUdlambdaSumM = 22.0;
} else if (uTmp_idx_1 >= 2.4451515E+6) {
    dUdlambdaSumM = 21.0;
} else if (uTmp_idx_1 >= 2.4447865E+6) {
    dUdlambdaSumM = 20.0;
} else if (uTmp_idx_1 >= 2.4442395E+6) {
    dUdlambdaSumM = 19.0;
} else if (uTmp_idx_1 >= 2.4438745E+6) {
    dUdlambdaSumM = 18.0;
} else if (uTmp_idx_1 >= 2.4435095E+6) {
    dUdlambdaSumM = 17.0;
} else if (uTmp_idx_1 >= 2.4431445E+6) {
    dUdlambdaSumM = 16.0;
} else if (uTmp_idx_1 >= 2.4427785E+6) {
    dUdlambdaSumM = 15.0;
} else if (uTmp_idx_1 >= 2.4424135E+6) {
    dUdlambdaSumM = 14.0;
} else if (uTmp_idx_1 >= 2.4420485E+6) {
    dUdlambdaSumM = 13.0;
} else if (uTmp_idx_1 >= 2.4416835E+6) {
    dUdlambdaSumM = 12.0;
} else if (uTmp_idx_1 >= 2.4414995E+6) {
    dUdlambdaSumM = 11.0;
} else if (uTmp_idx_1 >= 2.4413175E+6) {
    dUdlambdaSumM = 10.0;
} else if (uTmp_idx_1 >= 2.4398875E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
} else if (uTmp_idx_1 >= 2.4391265E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
} else if (uTmp_idx_1 >= 2.4390045E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
} else if (uTmp_idx_1 >= 2.4389425E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
} else if (uTmp_idx_1 >= 2.4388205E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
} else if (uTmp_idx_1 >= 2.4387615E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
} else if (uTmp_idx_1 >= 2.4386395E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
} else if (uTmp_idx_1 >= 2.4384865E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
} else if (uTmp_idx_1 >= 2.4383955E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
} else if (uTmp_idx_1 >= 2.4383345E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
} else if (uTmp_idx_1 >= 2.4376655E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
} else if (uTmp_idx_1 >= 2.4375125E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
} else if (uTmp_idx_1 >= 2.4373005E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
} else {
    dUdlambdaSumM = 0.0;
}
ssUT = sec + dUdrSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((((sec + dUdlambdaSumM) + 32.184) / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
uTmp_idx_1 -= 2.451545E+6;
rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
C = -pData_idx_1_p;
pm_idx_0 = -pData_idx_0_p;
pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
pm_idx_1 = muDoubleScalarSin(pm_idx_0);
pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
pm_idx_0 = muDoubleScalarCos(pm_idx_0);
pData_idx_0_p = muDoubleScalarCos(C);
pData_idx_6_p = -muDoubleScalarSin(C);
pData_idx_2_i = muDoubleScalarSin(C);
pData_idx_8 = muDoubleScalarCos(C);
pData_idx_0_p += 0.0 * pData_idx_2_i;
pData_idx_1_p = pm_idx_1 * pData_idx_2_i;
pData_idx_4_e += pm_idx_1 * 0.0;
pm_idx_1 *= pData_idx_8;
pData_idx_2_i *= pm_idx_0;
dUdrSumM = pData_idx_6_p * 0.0;
dUdrSumM += 0.0 * pData_idx_5_e;
dUdrSumM += pm_idx_0 * pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
pData_idx_1_k = -muDoubleScalarSin(rot_pm_idx_0);
B = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_0_i = pData_idx_0_p * pData_idx_0_k;
pData_idx_0_i += 0.0 * pData_idx_1_k;
pData_idx_0_i += pData_idx_6_p * 0.0;
pData_idx_3_e = pData_idx_0_p * pData_idx_3_i;
pData_idx_3_e += 0.0 * B;
pData_idx_3_e += pData_idx_6_p * 0.0;
pData_idx_1_i = pData_idx_0_k * pData_idx_1_p;
pData_idx_1_i += pData_idx_1_k * pData_idx_4_e;
pData_idx_1_i += pm_idx_1 * 0.0;
pData_idx_4 = pData_idx_3_i * pData_idx_1_p;
pData_idx_4 += pData_idx_4_e * B;
pData_idx_4 += pm_idx_1 * 0.0;
pData_idx_2_k = pData_idx_0_k * pData_idx_2_i;
pData_idx_2_k += pData_idx_1_k * pData_idx_5_e;
pData_idx_5 = pData_idx_3_i * pData_idx_2_i;
pData_idx_5 += B * pData_idx_5_e;
pm_idx_0 = 0.0 * pData_idx_2_i;
pm_idx_0 += 0.0 * pData_idx_5_e;
pm_idx_0 += dUdrSumM;
fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((ssUT / 60.0 + min) / 60.0 + hour) / 24.0;
A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = A - 2.4000005E+6;
A = B - 51544.5;
pData_idx_0_p = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_1_p = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
nutationV_e[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_e[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_e[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_e[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_e[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_e[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
nutationV_e[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
nutationV_e[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
nutationV_e[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
nutationV_e[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
nutationV_e[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
nutationV_e[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
nutationV_e[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
nutationV_e[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
nutationV_e[0] = muDoubleScalarMod(nutationV_e[0], 6.2831853071795862);
nutationV_e[1] = muDoubleScalarMod(nutationV_e[1], 6.2831853071795862);
nutationV_e[2] = muDoubleScalarMod(nutationV_e[2], 6.2831853071795862);
nutationV_e[3] = muDoubleScalarMod(nutationV_e[3], 6.2831853071795862);
nutationV_e[4] = muDoubleScalarMod(nutationV_e[4], 6.2831853071795862);
nutationV_e[5] = muDoubleScalarMod(nutationV_e[5], 6.2831853071795862);
nutationV_e[6] = muDoubleScalarMod(nutationV_e[6], 6.2831853071795862);
nutationV_e[7] = muDoubleScalarMod(nutationV_e[7], 6.2831853071795862);
nutationV_e[8] = muDoubleScalarMod(nutationV_e[8], 6.2831853071795862);
nutationV_e[9] = muDoubleScalarMod(nutationV_e[9], 6.2831853071795862);
nutationV_e[10] = muDoubleScalarMod(nutationV_e[10], 6.2831853071795862);
nutationV_e[11] = muDoubleScalarMod(nutationV_e[11], 6.2831853071795862);
nutationV_e[12] = muDoubleScalarMod(nutationV_e[12], 6.2831853071795862);
nutationV_e[13] = muDoubleScalarMod(nutationV_e[13], 6.2831853071795862);
A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
degreeP1 = 0;
for (count = 0; count < 1306; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = 1.0;
}
for (count = 0; count < 253; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 36; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP3] = dUdrSumM;
ktuiv5qnvo2.factor_dX_cl54gopm0x[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 962; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_fqdqrf4qbc[degreeP3] = 1.0;
}
for (count = 0; count < 277; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_fqdqrf4qbc[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 30; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_fqdqrf4qbc[degreeP3] = fracSec;
}
for (count = 0; count < 5; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_fqdqrf4qbc[degreeP3] = dUdrSumM;
}
ktuiv5qnvo2.factor_dY_fqdqrf4qbc[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 33; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_e[degreeP3] = 1.0;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = uTmp_idx_1 / 36525.0;
for (count = 0; count < 25; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_e[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_e[degreeP3] = dUdrSumM;
factor_dS_e[degreeP1] = dUdphiSumM;
flat = 0.0;
lonNew = 0.0;
for (count = 0; count < 1600; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_e[degreeP1];
    }
    flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_cl54gopm0x[count];
    lonNew = 0.0;
}
uTmp_idx_1 = 0.0;
for (count = 0; count < 1275; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_e[degreeP1];
    }
    lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_fqdqrf4qbc[count];
    uTmp_idx_1 = 0.0;
}
nutationV_s_e[0] = nutationV_e[0];
nutationV_s_e[1] = nutationV_e[1];
nutationV_s_e[2] = nutationV_e[2];
nutationV_s_e[3] = nutationV_e[3];
nutationV_s_e[4] = nutationV_e[4];
nutationV_s_e[5] = nutationV_e[6];
nutationV_s_e[6] = nutationV_e[7];
nutationV_s_e[7] = nutationV_e[13];
fracSec = 0.0;
for (count = 0; count < 66; count++) {
    for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
        fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_e[degreeP1];
    }
    uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_e[count];
    fracSec = 0.0;
}
A += flat;
beta += lonNew;
betaNew += uTmp_idx_1;
A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
flat = A * A;
lonNew = beta * beta;
dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
A = -muDoubleScalarAtan2(beta, A) - betaNew;
pData_idx_0_k = muDoubleScalarCos(A);
C = muDoubleScalarSin(A);
pData_idx_1_k = -muDoubleScalarSin(A);
B = muDoubleScalarCos(A);
flat = muDoubleScalarCos(dUdrSumM);
pData_idx_6 = -muDoubleScalarSin(dUdrSumM);
pData_idx_2_i = muDoubleScalarSin(dUdrSumM);
pData_idx_8 = muDoubleScalarCos(dUdrSumM);
pData_idx_0_e = pData_idx_0_k * flat;
pData_idx_0_e += C * 0.0;
pData_idx_0_e += 0.0 * pData_idx_2_i;
rot_pm_idx_0 = pData_idx_0_k * 0.0;
rot_pm_idx_0 += C;
beta = pData_idx_0_k * pData_idx_6;
beta += C * 0.0;
beta += 0.0 * pData_idx_8;
pData_idx_1_e = flat * pData_idx_1_k;
pData_idx_1_e += 0.0 * B;
pData_idx_1_e += 0.0 * pData_idx_2_i;
pData_idx_4_p = 0.0 * pData_idx_1_k;
pData_idx_4_p += B;
betaNew = pData_idx_6 * pData_idx_1_k;
betaNew += B * 0.0;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_m = flat * 0.0;
pData_idx_2_m += pData_idx_2_i;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(dCIP_idx_1);
C = muDoubleScalarSin(dCIP_idx_1);
pData_idx_1_k = -muDoubleScalarSin(dCIP_idx_1);
B = muDoubleScalarCos(dCIP_idx_1);
flat = pData_idx_0_e * pData_idx_0_k;
flat += rot_pm_idx_0 * pData_idx_1_k;
flat += beta * 0.0;
uTmp_idx_1 = pData_idx_0_e * C;
uTmp_idx_1 += rot_pm_idx_0 * B;
uTmp_idx_1 += beta * 0.0;
pData_idx_6 = pData_idx_0_e * 0.0;
pData_idx_6 += rot_pm_idx_0 * 0.0;
pData_idx_6 += beta;
ssUT = pData_idx_0_k * pData_idx_1_e;
ssUT += pData_idx_1_k * pData_idx_4_p;
ssUT += betaNew * 0.0;
lonNew = C * pData_idx_1_e;
lonNew += pData_idx_4_p * B;
lonNew += betaNew * 0.0;
pData_idx_7 = 0.0 * pData_idx_1_e;
pData_idx_7 += pData_idx_4_p * 0.0;
pData_idx_7 += betaNew;
pData_idx_2_i = pData_idx_0_k * pData_idx_2_m;
pData_idx_2_i += pData_idx_1_k * 0.0;
pData_idx_2_i += 0.0 * dUdrSumM;
pData_idx_5_e = C * pData_idx_2_m;
pData_idx_5_e += B * 0.0;
pData_idx_5_e += 0.0 * dUdrSumM;
pData_idx_8 = 0.0 * pData_idx_2_m;
pData_idx_8 += dUdrSumM;
pData_idx_0_k = pData_idx_0_p * flat;
pData_idx_0_k += pData_idx_3_i * ssUT;
pData_idx_0_k += 0.0 * pData_idx_2_i;
C = pData_idx_0_p * uTmp_idx_1;
C += pData_idx_3_i * lonNew;
C += 0.0 * pData_idx_5_e;
beta = pData_idx_0_p * pData_idx_6;
beta += pData_idx_3_i * pData_idx_7;
beta += 0.0 * pData_idx_8;
pData_idx_1_k = flat * pData_idx_1_p;
pData_idx_1_k += ssUT * pData_idx_4_e;
pData_idx_1_k += 0.0 * pData_idx_2_i;
B = uTmp_idx_1 * pData_idx_1_p;
B += pData_idx_4_e * lonNew;
B += 0.0 * pData_idx_5_e;
betaNew = pData_idx_6 * pData_idx_1_p;
betaNew += pData_idx_4_e * pData_idx_7;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_m = flat * 0.0;
pData_idx_2_m += ssUT * 0.0;
pData_idx_2_m += pData_idx_2_i;
pData_idx_5_p = uTmp_idx_1 * 0.0;
pData_idx_5_p += lonNew * 0.0;
pData_idx_5_p += pData_idx_5_e;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_7 * 0.0;
dUdrSumM += pData_idx_8;
flat = (pData_idx_0_k * uTmp_idx_0 + C * dUT2UT1) + beta * pData_idx_2_p;
pData_idx_1_e = (uTmp_idx_0 * pData_idx_1_k + dUT2UT1 * B) + betaNew * pData_idx_2_p;
uTmp_idx_1 = (uTmp_idx_0 * pData_idx_2_m + dUT2UT1 * pData_idx_5_p) + pData_idx_2_p * dUdrSumM;
pData_idx_0_p = (pData_idx_0_i * flat + pData_idx_3_e * pData_idx_1_e) + pData_idx_6_p * uTmp_idx_1;
pData_idx_1_p = (flat * pData_idx_1_i + pData_idx_1_e * pData_idx_4) + pm_idx_1 * uTmp_idx_1;
pData_idx_2_i = (flat * pData_idx_2_k + pData_idx_1_e * pData_idx_5) + uTmp_idx_1 * pm_idx_0;
pData_idx_0_k = (pData_idx_0_k * pData_idx_0 + C * pData_idx_1) + beta * pData_idx_2;
pData_idx_1_k = (pData_idx_0 * pData_idx_1_k + pData_idx_1 * B) + betaNew * pData_idx_2;
pData_idx_2_m = (pData_idx_0 * pData_idx_2_m + pData_idx_1 * pData_idx_5_p) + pData_idx_2 * dUdrSumM;
pData_idx_0_e = 0.0 * uTmp_idx_1 - pData_idx_1_e * 7.2921151467069791E-5;
ssUT = flat * 7.2921151467069791E-5 - 0.0 * uTmp_idx_1;
uTmp_idx_1 = 0.0 * pData_idx_1_e - flat * 0.0;
flat = pData_idx_0_k - pData_idx_0_e;
pData_idx_1_e = pData_idx_1_k - ssUT;
pData_idx_2_m -= uTmp_idx_1;
pData_idx_0_k = (pData_idx_0_i * flat + pData_idx_3_e * pData_idx_1_e) + pData_idx_6_p * pData_idx_2_m;
pData_idx_1_k = (flat * pData_idx_1_i + pData_idx_1_e * pData_idx_4) + pm_idx_1 * pData_idx_2_m;
pData_idx_2_k = (flat * pData_idx_2_k + pData_idx_1_e * pData_idx_5) + pData_idx_2_m * pm_idx_0;
smlambda[0] = 0.0;
cmlambda[0] = 1.0;
smlambda[1] = muDoubleScalarSin(muDoubleScalarAtan2(pData_idx_1_p, pData_idx_0_p));
cmlambda[1] = muDoubleScalarCos(muDoubleScalarAtan2(pData_idx_1_p, pData_idx_0_p));
for (degreeP1 = 2; degreeP1 < 121; degreeP1++) {
    smlambda[degreeP1] = 2.0 * muDoubleScalarCos(muDoubleScalarAtan2(pData_idx_1_p, pData_idx_0_p)) * smlambda[degreeP1 - 1] - smlambda[degreeP1 - 2];
    cmlambda[degreeP1] = 2.0 * muDoubleScalarCos(muDoubleScalarAtan2(pData_idx_1_p, pData_idx_0_p)) * cmlambda[degreeP1 - 1] - cmlambda[degreeP1 - 2];
}
A = muDoubleScalarCos(1.5707963267948966 - muDoubleScalarAsin(pData_idx_2_i / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i)));
beta = muDoubleScalarSin(1.5707963267948966 - muDoubleScalarAsin(pData_idx_2_i / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i)));
if (muDoubleScalarAbs(A) <= 2.2204460492503131E-16) {
    A = 0.0;
}
if (muDoubleScalarAbs(beta) <= 2.2204460492503131E-16) {
    beta = 0.0;
}
ktuiv5qnvo2.P[0] = 1.0;
ktuiv5qnvo2.P[1] = 1.7320508075688772 * A;
ktuiv5qnvo2.P[124] = 1.7320508075688772 * beta;
ktuiv5qnvo2.scaleFactor[0] = 0.0;
ktuiv5qnvo2.scaleFactor[1] = 1.0;
ktuiv5qnvo2.scaleFactor[124] = 0.0;
for (degreeP3 = 2; degreeP3 < 123; degreeP3++) {
    betaNew = degreeP3;
    flat = muDoubleScalarSqrt(2.0 * betaNew);
    lonNew = muDoubleScalarSqrt(2.0 * betaNew + 1.0);
    uTmp_idx_1 = muDoubleScalarSqrt(2.0 * betaNew - 1.0);
    fracSec = muDoubleScalarSqrt(2.0 * betaNew - 3.0);
    for (degreeP1 = 0; degreeP1 < degreeP3 + 1; degreeP1++) {
        if (degreeP3 == degreeP1) {
            ktuiv5qnvo2.P[degreeP3 + 123 * degreeP1] = ktuiv5qnvo2.P[((degreeP1 - 1) * 123 + degreeP3) - 1] * (lonNew / flat * beta);
            ktuiv5qnvo2.scaleFactor[degreeP3 + 123 * degreeP1] = 0.0;
        } else if (degreeP1 == 0) {
            ktuiv5qnvo2.P[degreeP3] = (uTmp_idx_1 * A * ktuiv5qnvo2.P[degreeP3 - 1] - (betaNew - 1.0) / fracSec * ktuiv5qnvo2.P[degreeP3 - 2]) * (lonNew / betaNew);
            ktuiv5qnvo2.scaleFactor[degreeP3] = muDoubleScalarSqrt((betaNew + 1.0) * betaNew / 2.0);
        } else {
            pData_idx_3_e = degreeP1;
            ktuiv5qnvo2.P[degreeP3 + 123 * degreeP1] = (ktuiv5qnvo2.P[(123 * degreeP1 + degreeP3) - 1] * (uTmp_idx_1 * A) - muDoubleScalarSqrt((betaNew + pData_idx_3_e) - 1.0) * muDoubleScalarSqrt((betaNew - pData_idx_3_e) - 1.0) / fracSec * ktuiv5qnvo2.P[(123 * degreeP1 + degreeP3) - 2]) * (lonNew / (muDoubleScalarSqrt(betaNew + pData_idx_3_e) * muDoubleScalarSqrt(betaNew - pData_idx_3_e)));
            ktuiv5qnvo2.scaleFactor[degreeP3 + 123 * degreeP1] = muDoubleScalarSqrt(((betaNew + pData_idx_3_e) + 1.0) * (betaNew - pData_idx_3_e));
        }
    }
}
uTmp_idx_1 = 6.378137E+6 / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i);
fracSec = uTmp_idx_1;
B = 1.0;
lonNew = 0.0;
flat = 0.0;
A = pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p;
beta = muDoubleScalarSqrt(A);
for (degreeP3 = 2; degreeP3 < 121; degreeP3++) {
    fracSec *= uTmp_idx_1;
    dUdrSumM = 0.0;
    dUdphiSumM = 0.0;
    dUdlambdaSumM = 0.0;
    for (degreeP1 = 0; degreeP1 < degreeP3 + 1; degreeP1++) {
        count = degreeP1 * 121 + degreeP3;
        pData_idx_3_e = degreeP1;
        betaNew = tmp_n[count] * cmlambda[degreeP1] + tmp_l[count] * smlambda[degreeP1];
        dUdrSumM += ktuiv5qnvo2.P[123 * degreeP1 + degreeP3] * betaNew;
        dUdphiSumM += (ktuiv5qnvo2.P[(degreeP1 + 1) * 123 + degreeP3] * ktuiv5qnvo2.scaleFactor[123 * degreeP1 + degreeP3] - pData_idx_2_i / beta * pData_idx_3_e * ktuiv5qnvo2.P[123 * degreeP1 + degreeP3]) * betaNew;
        dUdlambdaSumM += ktuiv5qnvo2.P[123 * degreeP1 + degreeP3] * pData_idx_3_e * (tmp_l[count] * cmlambda[degreeP1] - tmp_n[count] * smlambda[degreeP1]);
    }
    betaNew = degreeP3;
    B += dUdrSumM * fracSec * (betaNew + 1.0);
    lonNew += dUdphiSumM * fracSec;
    flat += dUdlambdaSumM * fracSec;
}
pData_idx_3_e = -3.986004418E+14 / (muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i) * muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i)) * B;
betaNew = 3.986004418E+14 / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i) * lonNew;
lonNew = 3.986004418E+14 / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i) * flat;
uTmp_idx_1 = muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i) * muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i);
flat = 1.0 / muDoubleScalarSqrt((pData_idx_0_p * pData_idx_0_p + pData_idx_1_p * pData_idx_1_p) + pData_idx_2_i * pData_idx_2_i);
pData_idx_0_i = (flat * pData_idx_3_e - pData_idx_2_i / (uTmp_idx_1 * beta) * betaNew) * pData_idx_0_p - lonNew / A * pData_idx_1_p;
pData_idx_1_i = (flat * pData_idx_3_e - pData_idx_2_i / (uTmp_idx_1 * beta) * betaNew) * pData_idx_1_p + lonNew / A * pData_idx_0_p;
pData_idx_2_m = flat * pData_idx_3_e * pData_idx_2_i + beta / uTmp_idx_1 * betaNew;
A = muDoubleScalarAbs(muDoubleScalarAtan2(pData_idx_2_i, beta) - 1.5707963267948966);
if (A <= 2.2204460492503131E-16) {
    pData_idx_0_i = 0.0;
    pData_idx_1_i = 0.0;
    pData_idx_2_m = flat * pData_idx_3_e * pData_idx_2_i;
}
flat = 0.0 * pData_idx_2_k - pData_idx_1_k * 7.2921151467069791E-5;
pData_idx_1_e = pData_idx_0_k * 7.2921151467069791E-5 - 0.0 * pData_idx_2_k;
uTmp_idx_1 = 0.0 * pData_idx_1_k - pData_idx_0_k * 0.0;
flat *= -2.0;
pData_idx_1_e *= -2.0;
uTmp_idx_1 *= -2.0;
pData_idx_0_e = 0.0 * pData_idx_2_i - pData_idx_1_p * 7.2921151467069791E-5;
ssUT = pData_idx_0_p * 7.2921151467069791E-5 - 0.0 * pData_idx_2_i;
pData_idx_4_e = 0.0 * pData_idx_1_p - pData_idx_0_p * 0.0;
pData_idx_5_e = 0.0 * pData_idx_4_e - ssUT * 7.2921151467069791E-5;
pData_idx_6 = pData_idx_0_e * 7.2921151467069791E-5 - 0.0 * pData_idx_4_e;
pData_idx_4_e = 0.0 * ssUT - pData_idx_0_e * 0.0;
pData_idx_0_e = -pData_idx_5_e;
ssUT = -pData_idx_6;
pData_idx_4_e = -pData_idx_4_e;
pData_idx_0_i += flat;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_i += pData_idx_0_e;
pData_idx_1_i += ssUT;
pData_idx_2_m += pData_idx_4_e;
pData_idx_0_j += pData_idx_0_i;
pData_idx_1_j += pData_idx_1_i;
pData_idx_2_j += pData_idx_2_m;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = uTmp_idx_1 - 2.4000005E+6;
degreeP1 = 0;
if (B < 48622.0) {
    dUdrSumM = -0.1251659;
} else if (B >= 60337.0) {
    uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
    uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
    uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
    if (uTmp_idx_1 < -0.9) {
        dUdrSumM = -0.9;
    } else {
        dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    }
} else if ((B >= 60336.0) && (B < 60337.0)) {
    dUdrSumM = 0.0917493;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dUdrSumM = tmp_g[(uint32_T)degreeP1];
}
degreeP1 = 0;
if (B < 48622.0) {
    pm_idx_0 = 0.182987;
    pm_idx_1 = 0.168775;
} else if (B >= 60337.0) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else if ((B >= 60336.0) && (B < 60337.0)) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    pm_idx_0 = tmp_j[(uint32_T)degreeP1];
    pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
}
degreeP1 = 0;
if (B < 48622.0) {
    dCIP_idx_0 = -0.086;
    dCIP_idx_1 = 0.13;
} else if (B >= 60034.0) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else if ((B >= 60033.0) && (B < 60034.0)) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else {
    for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
    dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
}
dCIP_idx_0 *= 4.8481368110953594E-9;
dCIP_idx_1 *= 4.8481368110953594E-9;
pm_idx_0 *= 4.84813681109536E-6;
pm_idx_1 *= 4.84813681109536E-6;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
if (uTmp_idx_1 >= 2.4577545E+6) {
    dUdlambdaSumM = 37.0;
} else if (uTmp_idx_1 >= 2.4572045E+6) {
    dUdlambdaSumM = 36.0;
} else if (uTmp_idx_1 >= 2.4561095E+6) {
    dUdlambdaSumM = 35.0;
} else if (uTmp_idx_1 >= 2.4548325E+6) {
    dUdlambdaSumM = 34.0;
} else if (uTmp_idx_1 >= 2.4537365E+6) {
    dUdlambdaSumM = 33.0;
} else if (uTmp_idx_1 >= 2.4511795E+6) {
    dUdlambdaSumM = 32.0;
} else if (uTmp_idx_1 >= 2.4506305E+6) {
    dUdlambdaSumM = 31.0;
} else if (uTmp_idx_1 >= 2.4500835E+6) {
    dUdlambdaSumM = 30.0;
} else if (uTmp_idx_1 >= 2.4495345E+6) {
    dUdlambdaSumM = 29.0;
} else if (uTmp_idx_1 >= 2.4491695E+6) {
    dUdlambdaSumM = 28.0;
} else if (uTmp_idx_1 >= 2.4488045E+6) {
    dUdlambdaSumM = 27.0;
} else if (uTmp_idx_1 >= 2.4482575E+6) {
    dUdlambdaSumM = 26.0;
} else if (uTmp_idx_1 >= 2.4478925E+6) {
    dUdlambdaSumM = 25.0;
} else if (uTmp_idx_1 >= 2.4471615E+6) {
    dUdlambdaSumM = 24.0;
} else if (uTmp_idx_1 >= 2.4462475E+6) {
    dUdlambdaSumM = 23.0;
} else if (uTmp_idx_1 >= 2.4455165E+6) {
    dUdlambdaSumM = 22.0;
} else if (uTmp_idx_1 >= 2.4451515E+6) {
    dUdlambdaSumM = 21.0;
} else if (uTmp_idx_1 >= 2.4447865E+6) {
    dUdlambdaSumM = 20.0;
} else if (uTmp_idx_1 >= 2.4442395E+6) {
    dUdlambdaSumM = 19.0;
} else if (uTmp_idx_1 >= 2.4438745E+6) {
    dUdlambdaSumM = 18.0;
} else if (uTmp_idx_1 >= 2.4435095E+6) {
    dUdlambdaSumM = 17.0;
} else if (uTmp_idx_1 >= 2.4431445E+6) {
    dUdlambdaSumM = 16.0;
} else if (uTmp_idx_1 >= 2.4427785E+6) {
    dUdlambdaSumM = 15.0;
} else if (uTmp_idx_1 >= 2.4424135E+6) {
    dUdlambdaSumM = 14.0;
} else if (uTmp_idx_1 >= 2.4420485E+6) {
    dUdlambdaSumM = 13.0;
} else if (uTmp_idx_1 >= 2.4416835E+6) {
    dUdlambdaSumM = 12.0;
} else if (uTmp_idx_1 >= 2.4414995E+6) {
    dUdlambdaSumM = 11.0;
} else if (uTmp_idx_1 >= 2.4413175E+6) {
    dUdlambdaSumM = 10.0;
} else if (uTmp_idx_1 >= 2.4398875E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
} else if (uTmp_idx_1 >= 2.4391265E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
} else if (uTmp_idx_1 >= 2.4390045E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
} else if (uTmp_idx_1 >= 2.4389425E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
} else if (uTmp_idx_1 >= 2.4388205E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
} else if (uTmp_idx_1 >= 2.4387615E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
} else if (uTmp_idx_1 >= 2.4386395E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
} else if (uTmp_idx_1 >= 2.4384865E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
} else if (uTmp_idx_1 >= 2.4383955E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
} else if (uTmp_idx_1 >= 2.4383345E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
} else if (uTmp_idx_1 >= 2.4376655E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
} else if (uTmp_idx_1 >= 2.4375125E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
} else if (uTmp_idx_1 >= 2.4373005E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
} else {
    dUdlambdaSumM = 0.0;
}
ssUT = sec + dUdrSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((((sec + dUdlambdaSumM) + 32.184) / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
uTmp_idx_1 -= 2.451545E+6;
rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
C = -pm_idx_0;
pm_idx_0 = -pm_idx_1;
pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
pm_idx_1 = muDoubleScalarSin(pm_idx_0);
pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
pm_idx_0 = muDoubleScalarCos(pm_idx_0);
pData_idx_0_i = muDoubleScalarCos(C);
pData_idx_6_p = -muDoubleScalarSin(C);
pData_idx_2_m = muDoubleScalarSin(C);
pData_idx_8 = muDoubleScalarCos(C);
pData_idx_0_i += 0.0 * pData_idx_2_m;
pData_idx_1_i = pm_idx_1 * pData_idx_2_m;
pData_idx_4_e += pm_idx_1 * 0.0;
pm_idx_1 *= pData_idx_8;
pData_idx_2_m *= pm_idx_0;
dUdrSumM = pData_idx_6_p * 0.0;
dUdrSumM += 0.0 * pData_idx_5_e;
dUdrSumM += pm_idx_0 * pData_idx_8;
flat = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
pData_idx_1_e = -muDoubleScalarSin(rot_pm_idx_0);
B = muDoubleScalarCos(rot_pm_idx_0);
pData_p[0] = pData_idx_0_i * flat;
pData_p[0] += 0.0 * pData_idx_1_e;
pData_p[0] += pData_idx_6_p * 0.0;
pData_p[3] = pData_idx_0_i * pData_idx_3_i;
pData_p[3] += 0.0 * B;
pData_p[3] += pData_idx_6_p * 0.0;
pData_p[6] = pData_idx_6_p;
pData_p[1] = flat * pData_idx_1_i;
pData_p[1] += pData_idx_1_e * pData_idx_4_e;
pData_p[1] += pm_idx_1 * 0.0;
pData_p[4] = pData_idx_3_i * pData_idx_1_i;
pData_p[4] += pData_idx_4_e * B;
pData_p[4] += pm_idx_1 * 0.0;
pData_p[7] = pm_idx_1;
pData_p[2] = flat * pData_idx_2_m;
pData_p[2] += pData_idx_1_e * pData_idx_5_e;
pData_p[5] = pData_idx_3_i * pData_idx_2_m;
pData_p[5] += B * pData_idx_5_e;
pData_p[8] = dUdrSumM;
fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((ssUT / 60.0 + min) / 60.0 + hour) / 24.0;
A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = A - 2.4000005E+6;
A = B - 51544.5;
pData_idx_0_i = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_1_i = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
nutationV_i[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_i[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_i[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_i[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_i[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_i[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
nutationV_i[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
nutationV_i[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
nutationV_i[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
nutationV_i[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
nutationV_i[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
nutationV_i[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
nutationV_i[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
nutationV_i[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
nutationV_i[0] = muDoubleScalarMod(nutationV_i[0], 6.2831853071795862);
nutationV_i[1] = muDoubleScalarMod(nutationV_i[1], 6.2831853071795862);
nutationV_i[2] = muDoubleScalarMod(nutationV_i[2], 6.2831853071795862);
nutationV_i[3] = muDoubleScalarMod(nutationV_i[3], 6.2831853071795862);
nutationV_i[4] = muDoubleScalarMod(nutationV_i[4], 6.2831853071795862);
nutationV_i[5] = muDoubleScalarMod(nutationV_i[5], 6.2831853071795862);
nutationV_i[6] = muDoubleScalarMod(nutationV_i[6], 6.2831853071795862);
nutationV_i[7] = muDoubleScalarMod(nutationV_i[7], 6.2831853071795862);
nutationV_i[8] = muDoubleScalarMod(nutationV_i[8], 6.2831853071795862);
nutationV_i[9] = muDoubleScalarMod(nutationV_i[9], 6.2831853071795862);
nutationV_i[10] = muDoubleScalarMod(nutationV_i[10], 6.2831853071795862);
nutationV_i[11] = muDoubleScalarMod(nutationV_i[11], 6.2831853071795862);
nutationV_i[12] = muDoubleScalarMod(nutationV_i[12], 6.2831853071795862);
nutationV_i[13] = muDoubleScalarMod(nutationV_i[13], 6.2831853071795862);
A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
degreeP1 = 0;
for (count = 0; count < 1306; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = 1.0;
}
for (count = 0; count < 253; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 36; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP3] = dUdrSumM;
ktuiv5qnvo2.factor_dX_kkiq3xxxve[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 962; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g2mlkqadfk[degreeP3] = 1.0;
}
for (count = 0; count < 277; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g2mlkqadfk[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 30; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g2mlkqadfk[degreeP3] = fracSec;
}
for (count = 0; count < 5; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g2mlkqadfk[degreeP3] = dUdrSumM;
}
ktuiv5qnvo2.factor_dY_g2mlkqadfk[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 33; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_i[degreeP3] = 1.0;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = uTmp_idx_1 / 36525.0;
for (count = 0; count < 25; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_i[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_i[degreeP3] = dUdrSumM;
factor_dS_i[degreeP1] = dUdphiSumM;
flat = 0.0;
lonNew = 0.0;
for (count = 0; count < 1600; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_i[degreeP1];
    }
    flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_kkiq3xxxve[count];
    lonNew = 0.0;
}
uTmp_idx_1 = 0.0;
for (count = 0; count < 1275; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_i[degreeP1];
    }
    lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_g2mlkqadfk[count];
    uTmp_idx_1 = 0.0;
}
nutationV_s_i[0] = nutationV_i[0];
nutationV_s_i[1] = nutationV_i[1];
nutationV_s_i[2] = nutationV_i[2];
nutationV_s_i[3] = nutationV_i[3];
nutationV_s_i[4] = nutationV_i[4];
nutationV_s_i[5] = nutationV_i[6];
nutationV_s_i[6] = nutationV_i[7];
nutationV_s_i[7] = nutationV_i[13];
fracSec = 0.0;
for (count = 0; count < 66; count++) {
    for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
        fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_i[degreeP1];
    }
    uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_i[count];
    fracSec = 0.0;
}
A += flat;
beta += lonNew;
betaNew += uTmp_idx_1;
A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
flat = A * A;
lonNew = beta * beta;
dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
A = -muDoubleScalarAtan2(beta, A) - betaNew;
flat = muDoubleScalarCos(A);
pData_idx_3_e = muDoubleScalarSin(A);
pData_idx_1_e = -muDoubleScalarSin(A);
B = muDoubleScalarCos(A);
pData_idx_0_e = muDoubleScalarCos(dUdrSumM);
pData_idx_6_p = -muDoubleScalarSin(dUdrSumM);
pData_idx_2_m = muDoubleScalarSin(dUdrSumM);
pm_idx_0 = muDoubleScalarCos(dUdrSumM);
pData_idx_5_e = flat * pData_idx_0_e;
pData_idx_5_e += pData_idx_3_e * 0.0;
pData_idx_5_e += 0.0 * pData_idx_2_m;
C = flat * 0.0;
C += pData_idx_3_e;
pData_idx_6 = flat * pData_idx_6_p;
pData_idx_6 += pData_idx_3_e * 0.0;
pData_idx_6 += 0.0 * pm_idx_0;
ssUT = pData_idx_0_e * pData_idx_1_e;
ssUT += 0.0 * B;
ssUT += 0.0 * pData_idx_2_m;
pData_idx_4 = 0.0 * pData_idx_1_e;
pData_idx_4 += B;
pm_idx_1 = pData_idx_6_p * pData_idx_1_e;
pm_idx_1 += B * 0.0;
pm_idx_1 += 0.0 * pm_idx_0;
uTmp_idx_1 = pData_idx_0_e * 0.0;
uTmp_idx_1 += pData_idx_2_m;
pData_idx_8 = pData_idx_6_p * 0.0;
pData_idx_8 += pm_idx_0;
flat = muDoubleScalarCos(dCIP_idx_1);
pData_idx_3_e = muDoubleScalarSin(dCIP_idx_1);
pData_idx_1_e = -muDoubleScalarSin(dCIP_idx_1);
B = muDoubleScalarCos(dCIP_idx_1);
pData_idx_0_e = pData_idx_5_e * flat;
pData_idx_0_e += C * pData_idx_1_e;
pData_idx_0_e += pData_idx_6 * 0.0;
rot_pm_idx_0 = pData_idx_5_e * pData_idx_3_e;
rot_pm_idx_0 += C * B;
rot_pm_idx_0 += pData_idx_6 * 0.0;
pData_idx_6_p = pData_idx_5_e * 0.0;
pData_idx_6_p += C * 0.0;
pData_idx_6_p += pData_idx_6;
pData_idx_6 = flat * ssUT;
pData_idx_6 += pData_idx_1_e * pData_idx_4;
pData_idx_6 += pm_idx_1 * 0.0;
pData_idx_4_p = pData_idx_3_e * ssUT;
pData_idx_4_p += pData_idx_4 * B;
pData_idx_4_p += pm_idx_1 * 0.0;
betaNew = 0.0 * ssUT;
betaNew += pData_idx_4 * 0.0;
betaNew += pm_idx_1;
pData_idx_2_m = flat * uTmp_idx_1;
pData_idx_2_m += pData_idx_1_e * 0.0;
pData_idx_2_m += 0.0 * pData_idx_8;
pData_idx_5_e = pData_idx_3_e * uTmp_idx_1;
pData_idx_5_e += B * 0.0;
pData_idx_5_e += 0.0 * pData_idx_8;
pm_idx_0 = 0.0 * uTmp_idx_1;
pm_idx_0 += pData_idx_8;
pData_e[0] = pData_idx_0_i * pData_idx_0_e;
pData_e[0] += pData_idx_3_i * pData_idx_6;
pData_e[0] += 0.0 * pData_idx_2_m;
pData_e[3] = pData_idx_0_i * rot_pm_idx_0;
pData_e[3] += pData_idx_3_i * pData_idx_4_p;
pData_e[3] += 0.0 * pData_idx_5_e;
pData_e[6] = pData_idx_0_i * pData_idx_6_p;
pData_e[6] += pData_idx_3_i * betaNew;
pData_e[6] += 0.0 * pm_idx_0;
pData_e[1] = pData_idx_0_e * pData_idx_1_i;
pData_e[1] += pData_idx_6 * pData_idx_4_e;
pData_e[1] += 0.0 * pData_idx_2_m;
pData_e[4] = rot_pm_idx_0 * pData_idx_1_i;
pData_e[4] += pData_idx_4_e * pData_idx_4_p;
pData_e[4] += 0.0 * pData_idx_5_e;
pData_e[7] = pData_idx_6_p * pData_idx_1_i;
pData_e[7] += pData_idx_4_e * betaNew;
pData_e[7] += 0.0 * pm_idx_0;
pData_e[2] = pData_idx_0_e * 0.0;
pData_e[2] += pData_idx_6 * 0.0;
pData_e[2] += pData_idx_2_m;
pData_e[5] = rot_pm_idx_0 * 0.0;
pData_e[5] += pData_idx_4_p * 0.0;
pData_e[5] += pData_idx_5_e;
pData_e[8] = pData_idx_6_p * 0.0;
pData_e[8] += betaNew * 0.0;
pData_e[8] += pm_idx_0;
pData_i[0] = pData_p[0];
pData_i[3] = pData_p[1];
pData_i[6] = pData_p[2];
pData_i[1] = pData_p[3];
pData_i[4] = pData_p[4];
pData_i[7] = pData_p[5];
pData_i[2] = pData_p[6];
pData_i[5] = pData_p[7];
pData_i[8] = pData_p[8];
pData_m[0] = pData_e[0];
pData_m[3] = pData_e[1];
pData_m[6] = pData_e[2];
pData_m[1] = pData_e[3];
pData_m[4] = pData_e[4];
pData_m[7] = pData_e[5];
pData_m[2] = pData_e[6];
pData_m[5] = pData_e[7];
pData_m[8] = pData_e[8];
memcpy(&pData_p[0], &pData_i[0], 9U * sizeof(real_T));
memcpy(&pData_e[0], &pData_m[0], 9U * sizeof(real_T));
pData_idx_0_i = (pData_p[0] * pData_idx_0_p + pData_p[3] * pData_idx_1_p) + pData_p[6] * pData_idx_2_i;
pData_idx_1_i = (pData_idx_0_p * pData_p[1] + pData_idx_1_p * pData_p[4]) + pData_p[7] * pData_idx_2_i;
pData_idx_2_i = (pData_idx_0_p * pData_p[2] + pData_idx_1_p * pData_p[5]) + pData_idx_2_i * pData_p[8];
pData_idx_0_p = (pData_p[0] * pData_idx_0_k + pData_p[3] * pData_idx_1_k) + pData_p[6] * pData_idx_2_k;
pData_idx_1_p = (pData_idx_0_k * pData_p[1] + pData_idx_1_k * pData_p[4]) + pData_p[7] * pData_idx_2_k;
pData_idx_2_k = (pData_idx_0_k * pData_p[2] + pData_idx_1_k * pData_p[5]) + pData_idx_2_k * pData_p[8];
pData_idx_0_k = (pData_p[0] * pData_idx_0_j + pData_p[3] * pData_idx_1_j) + pData_p[6] * pData_idx_2_j;
pData_idx_1_k = (pData_idx_0_j * pData_p[1] + pData_idx_1_j * pData_p[4]) + pData_p[7] * pData_idx_2_j;
pData_idx_2_j = (pData_idx_0_j * pData_p[2] + pData_idx_1_j * pData_p[5]) + pData_idx_2_j * pData_p[8];
pData_idx_0_j = 0.0 * pData_idx_2_i - pData_idx_1_i * 7.2921151467069791E-5;
pData_idx_1_j = pData_idx_0_i * 7.2921151467069791E-5 - 0.0 * pData_idx_2_i;
pData_idx_2_i = 0.0 * pData_idx_1_i - pData_idx_0_i * 0.0;
pData_idx_0_i = 0.0 * pData_idx_2_i - pData_idx_1_j * 7.2921151467069791E-5;
pData_idx_1_i = pData_idx_0_j * 7.2921151467069791E-5 - 0.0 * pData_idx_2_i;
pData_idx_2_i = 0.0 * pData_idx_1_j - pData_idx_0_j * 0.0;
pData_idx_0_k += pData_idx_0_i;
pData_idx_1_k += pData_idx_1_i;
pData_idx_2_i += pData_idx_2_j;
pData_idx_0_j = 0.0 * pData_idx_2_k - pData_idx_1_p * 7.2921151467069791E-5;
pData_idx_1_j = pData_idx_0_p * 7.2921151467069791E-5 - 0.0 * pData_idx_2_k;
pData_idx_2_k = 0.0 * pData_idx_1_p - pData_idx_0_p * 0.0;
pData_idx_0_p = pData_idx_0_j * 2.0;
pData_idx_1_p = pData_idx_1_j * 2.0;
pData_idx_2_k *= 2.0;
pData_idx_0_p += pData_idx_0_k;
pData_idx_1_p += pData_idx_1_k;
pData_idx_2_i += pData_idx_2_k;
pData_idx_0_k = (pData_e[0] * pData_idx_0_p + pData_e[3] * pData_idx_1_p) + pData_e[6] * pData_idx_2_i;
pData_idx_1_k = (pData_idx_0_p * pData_e[1] + pData_idx_1_p * pData_e[4]) + pData_e[7] * pData_idx_2_i;
pData_idx_2_i = (pData_idx_0_p * pData_e[2] + pData_idx_1_p * pData_e[5]) + pData_idx_2_i * pData_e[8];
pData_idx_0_j = pData_idx_0_k + pData_idx_0_m;
pData_idx_1_j = pData_idx_1_k + pData_idx_1_m;
pData_idx_2_j = pData_idx_2_i + pData_idx_2_g;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = uTmp_idx_1 - 2.4000005E+6;
degreeP1 = 0;
if (B < 48622.0) {
    dUdrSumM = -0.1251659;
} else if (B >= 60337.0) {
    uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
    uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
    uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
    if (uTmp_idx_1 < -0.9) {
        dUdrSumM = -0.9;
    } else {
        dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    }
} else if ((B >= 60336.0) && (B < 60337.0)) {
    dUdrSumM = 0.0917493;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dUdrSumM = tmp_g[(uint32_T)degreeP1];
}
degreeP1 = 0;
if (B < 48622.0) {
    pm_idx_0 = 0.182987;
    pm_idx_1 = 0.168775;
} else if (B >= 60337.0) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else if ((B >= 60336.0) && (B < 60337.0)) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    pm_idx_0 = tmp_j[(uint32_T)degreeP1];
    pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
}
degreeP1 = 0;
if (B < 48622.0) {
    dCIP_idx_0 = -0.086;
    dCIP_idx_1 = 0.13;
} else if (B >= 60034.0) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else if ((B >= 60033.0) && (B < 60034.0)) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else {
    for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
    dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
}
dCIP_idx_0 *= 4.8481368110953594E-9;
dCIP_idx_1 *= 4.8481368110953594E-9;
pm_idx_0 *= 4.84813681109536E-6;
pm_idx_1 *= 4.84813681109536E-6;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
if (uTmp_idx_1 >= 2.4577545E+6) {
    dUdlambdaSumM = 37.0;
} else if (uTmp_idx_1 >= 2.4572045E+6) {
    dUdlambdaSumM = 36.0;
} else if (uTmp_idx_1 >= 2.4561095E+6) {
    dUdlambdaSumM = 35.0;
} else if (uTmp_idx_1 >= 2.4548325E+6) {
    dUdlambdaSumM = 34.0;
} else if (uTmp_idx_1 >= 2.4537365E+6) {
    dUdlambdaSumM = 33.0;
} else if (uTmp_idx_1 >= 2.4511795E+6) {
    dUdlambdaSumM = 32.0;
} else if (uTmp_idx_1 >= 2.4506305E+6) {
    dUdlambdaSumM = 31.0;
} else if (uTmp_idx_1 >= 2.4500835E+6) {
    dUdlambdaSumM = 30.0;
} else if (uTmp_idx_1 >= 2.4495345E+6) {
    dUdlambdaSumM = 29.0;
} else if (uTmp_idx_1 >= 2.4491695E+6) {
    dUdlambdaSumM = 28.0;
} else if (uTmp_idx_1 >= 2.4488045E+6) {
    dUdlambdaSumM = 27.0;
} else if (uTmp_idx_1 >= 2.4482575E+6) {
    dUdlambdaSumM = 26.0;
} else if (uTmp_idx_1 >= 2.4478925E+6) {
    dUdlambdaSumM = 25.0;
} else if (uTmp_idx_1 >= 2.4471615E+6) {
    dUdlambdaSumM = 24.0;
} else if (uTmp_idx_1 >= 2.4462475E+6) {
    dUdlambdaSumM = 23.0;
} else if (uTmp_idx_1 >= 2.4455165E+6) {
    dUdlambdaSumM = 22.0;
} else if (uTmp_idx_1 >= 2.4451515E+6) {
    dUdlambdaSumM = 21.0;
} else if (uTmp_idx_1 >= 2.4447865E+6) {
    dUdlambdaSumM = 20.0;
} else if (uTmp_idx_1 >= 2.4442395E+6) {
    dUdlambdaSumM = 19.0;
} else if (uTmp_idx_1 >= 2.4438745E+6) {
    dUdlambdaSumM = 18.0;
} else if (uTmp_idx_1 >= 2.4435095E+6) {
    dUdlambdaSumM = 17.0;
} else if (uTmp_idx_1 >= 2.4431445E+6) {
    dUdlambdaSumM = 16.0;
} else if (uTmp_idx_1 >= 2.4427785E+6) {
    dUdlambdaSumM = 15.0;
} else if (uTmp_idx_1 >= 2.4424135E+6) {
    dUdlambdaSumM = 14.0;
} else if (uTmp_idx_1 >= 2.4420485E+6) {
    dUdlambdaSumM = 13.0;
} else if (uTmp_idx_1 >= 2.4416835E+6) {
    dUdlambdaSumM = 12.0;
} else if (uTmp_idx_1 >= 2.4414995E+6) {
    dUdlambdaSumM = 11.0;
} else if (uTmp_idx_1 >= 2.4413175E+6) {
    dUdlambdaSumM = 10.0;
} else if (uTmp_idx_1 >= 2.4398875E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
} else if (uTmp_idx_1 >= 2.4391265E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
} else if (uTmp_idx_1 >= 2.4390045E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
} else if (uTmp_idx_1 >= 2.4389425E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
} else if (uTmp_idx_1 >= 2.4388205E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
} else if (uTmp_idx_1 >= 2.4387615E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
} else if (uTmp_idx_1 >= 2.4386395E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
} else if (uTmp_idx_1 >= 2.4384865E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
} else if (uTmp_idx_1 >= 2.4383955E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
} else if (uTmp_idx_1 >= 2.4383345E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
} else if (uTmp_idx_1 >= 2.4376655E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
} else if (uTmp_idx_1 >= 2.4375125E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
} else if (uTmp_idx_1 >= 2.4373005E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
} else {
    dUdlambdaSumM = 0.0;
}
ssUT = sec + dUdrSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((((sec + dUdlambdaSumM) + 32.184) / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
uTmp_idx_1 -= 2.451545E+6;
rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
C = -pm_idx_0;
pm_idx_0 = -pm_idx_1;
pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
pm_idx_1 = muDoubleScalarSin(pm_idx_0);
pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
pm_idx_0 = muDoubleScalarCos(pm_idx_0);
pData_idx_0_p = muDoubleScalarCos(C);
pData_idx_6_p = -muDoubleScalarSin(C);
pData_idx_2_i = muDoubleScalarSin(C);
pData_idx_8 = muDoubleScalarCos(C);
pData_idx_0_p += 0.0 * pData_idx_2_i;
pData_idx_1_p = pm_idx_1 * pData_idx_2_i;
pData_idx_4_e += pm_idx_1 * 0.0;
pm_idx_1 *= pData_idx_8;
pData_idx_2_i *= pm_idx_0;
dUdrSumM = pData_idx_6_p * 0.0;
dUdrSumM += 0.0 * pData_idx_5_e;
dUdrSumM += pm_idx_0 * pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
pData_idx_1_k = -muDoubleScalarSin(rot_pm_idx_0);
B = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_0_m = pData_idx_0_p * pData_idx_0_k;
pData_idx_0_m += 0.0 * pData_idx_1_k;
pData_idx_0_m += pData_idx_6_p * 0.0;
pData_idx_3_e = pData_idx_0_p * pData_idx_3_i;
pData_idx_3_e += 0.0 * B;
pData_idx_3_e += pData_idx_6_p * 0.0;
pData_idx_1_m = pData_idx_0_k * pData_idx_1_p;
pData_idx_1_m += pData_idx_1_k * pData_idx_4_e;
pData_idx_1_m += pm_idx_1 * 0.0;
pData_idx_4 = pData_idx_3_i * pData_idx_1_p;
pData_idx_4 += pData_idx_4_e * B;
pData_idx_4 += pm_idx_1 * 0.0;
pData_idx_2_k = pData_idx_0_k * pData_idx_2_i;
pData_idx_2_k += pData_idx_1_k * pData_idx_5_e;
pData_idx_5 = pData_idx_3_i * pData_idx_2_i;
pData_idx_5 += B * pData_idx_5_e;
pm_idx_0 = 0.0 * pData_idx_2_i;
pm_idx_0 += 0.0 * pData_idx_5_e;
pm_idx_0 += dUdrSumM;
fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((ssUT / 60.0 + min) / 60.0 + hour) / 24.0;
A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = A - 2.4000005E+6;
A = B - 51544.5;
pData_idx_0_p = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_1_p = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
nutationV_m[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_m[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_m[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_m[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_m[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_m[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
nutationV_m[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
nutationV_m[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
nutationV_m[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
nutationV_m[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
nutationV_m[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
nutationV_m[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
nutationV_m[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
nutationV_m[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
nutationV_m[0] = muDoubleScalarMod(nutationV_m[0], 6.2831853071795862);
nutationV_m[1] = muDoubleScalarMod(nutationV_m[1], 6.2831853071795862);
nutationV_m[2] = muDoubleScalarMod(nutationV_m[2], 6.2831853071795862);
nutationV_m[3] = muDoubleScalarMod(nutationV_m[3], 6.2831853071795862);
nutationV_m[4] = muDoubleScalarMod(nutationV_m[4], 6.2831853071795862);
nutationV_m[5] = muDoubleScalarMod(nutationV_m[5], 6.2831853071795862);
nutationV_m[6] = muDoubleScalarMod(nutationV_m[6], 6.2831853071795862);
nutationV_m[7] = muDoubleScalarMod(nutationV_m[7], 6.2831853071795862);
nutationV_m[8] = muDoubleScalarMod(nutationV_m[8], 6.2831853071795862);
nutationV_m[9] = muDoubleScalarMod(nutationV_m[9], 6.2831853071795862);
nutationV_m[10] = muDoubleScalarMod(nutationV_m[10], 6.2831853071795862);
nutationV_m[11] = muDoubleScalarMod(nutationV_m[11], 6.2831853071795862);
nutationV_m[12] = muDoubleScalarMod(nutationV_m[12], 6.2831853071795862);
nutationV_m[13] = muDoubleScalarMod(nutationV_m[13], 6.2831853071795862);
A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
degreeP1 = 0;
for (count = 0; count < 1306; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = 1.0;
}
for (count = 0; count < 253; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 36; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP3] = dUdrSumM;
ktuiv5qnvo2.factor_dX_cxarnvbvui[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 962; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g1smspu5ke[degreeP3] = 1.0;
}
for (count = 0; count < 277; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g1smspu5ke[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 30; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g1smspu5ke[degreeP3] = fracSec;
}
for (count = 0; count < 5; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_g1smspu5ke[degreeP3] = dUdrSumM;
}
ktuiv5qnvo2.factor_dY_g1smspu5ke[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 33; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_m[degreeP3] = 1.0;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = uTmp_idx_1 / 36525.0;
for (count = 0; count < 25; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_m[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_m[degreeP3] = dUdrSumM;
factor_dS_m[degreeP1] = dUdphiSumM;
flat = 0.0;
lonNew = 0.0;
for (count = 0; count < 1600; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_m[degreeP1];
    }
    flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_cxarnvbvui[count];
    lonNew = 0.0;
}
uTmp_idx_1 = 0.0;
for (count = 0; count < 1275; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_m[degreeP1];
    }
    lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_g1smspu5ke[count];
    uTmp_idx_1 = 0.0;
}
nutationV_s_m[0] = nutationV_m[0];
nutationV_s_m[1] = nutationV_m[1];
nutationV_s_m[2] = nutationV_m[2];
nutationV_s_m[3] = nutationV_m[3];
nutationV_s_m[4] = nutationV_m[4];
nutationV_s_m[5] = nutationV_m[6];
nutationV_s_m[6] = nutationV_m[7];
nutationV_s_m[7] = nutationV_m[13];
fracSec = 0.0;
for (count = 0; count < 66; count++) {
    for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
        fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_m[degreeP1];
    }
    uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_m[count];
    fracSec = 0.0;
}
A += flat;
beta += lonNew;
betaNew += uTmp_idx_1;
A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
flat = A * A;
lonNew = beta * beta;
dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
A = -muDoubleScalarAtan2(beta, A) - betaNew;
pData_idx_0_k = muDoubleScalarCos(A);
C = muDoubleScalarSin(A);
pData_idx_1_k = -muDoubleScalarSin(A);
B = muDoubleScalarCos(A);
pData_idx_0_i = muDoubleScalarCos(dUdrSumM);
pData_idx_6 = -muDoubleScalarSin(dUdrSumM);
pData_idx_2_i = muDoubleScalarSin(dUdrSumM);
pData_idx_8 = muDoubleScalarCos(dUdrSumM);
flat = pData_idx_0_k * pData_idx_0_i;
flat += C * 0.0;
flat += 0.0 * pData_idx_2_i;
rot_pm_idx_0 = pData_idx_0_k * 0.0;
rot_pm_idx_0 += C;
beta = pData_idx_0_k * pData_idx_6;
beta += C * 0.0;
beta += 0.0 * pData_idx_8;
pData_idx_1_i = pData_idx_0_i * pData_idx_1_k;
pData_idx_1_i += 0.0 * B;
pData_idx_1_i += 0.0 * pData_idx_2_i;
pData_idx_4_p = 0.0 * pData_idx_1_k;
pData_idx_4_p += B;
betaNew = pData_idx_6 * pData_idx_1_k;
betaNew += B * 0.0;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_g = pData_idx_0_i * 0.0;
pData_idx_2_g += pData_idx_2_i;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(dCIP_idx_1);
C = muDoubleScalarSin(dCIP_idx_1);
pData_idx_1_k = -muDoubleScalarSin(dCIP_idx_1);
B = muDoubleScalarCos(dCIP_idx_1);
pData_idx_0_i = flat * pData_idx_0_k;
pData_idx_0_i += rot_pm_idx_0 * pData_idx_1_k;
pData_idx_0_i += beta * 0.0;
uTmp_idx_1 = flat * C;
uTmp_idx_1 += rot_pm_idx_0 * B;
uTmp_idx_1 += beta * 0.0;
pData_idx_6 = flat * 0.0;
pData_idx_6 += rot_pm_idx_0 * 0.0;
pData_idx_6 += beta;
pData_idx_1_e = pData_idx_0_k * pData_idx_1_i;
pData_idx_1_e += pData_idx_1_k * pData_idx_4_p;
pData_idx_1_e += betaNew * 0.0;
lonNew = C * pData_idx_1_i;
lonNew += pData_idx_4_p * B;
lonNew += betaNew * 0.0;
pData_idx_7 = 0.0 * pData_idx_1_i;
pData_idx_7 += pData_idx_4_p * 0.0;
pData_idx_7 += betaNew;
pData_idx_2_i = pData_idx_0_k * pData_idx_2_g;
pData_idx_2_i += pData_idx_1_k * 0.0;
pData_idx_2_i += 0.0 * dUdrSumM;
pData_idx_5_e = C * pData_idx_2_g;
pData_idx_5_e += B * 0.0;
pData_idx_5_e += 0.0 * dUdrSumM;
pData_idx_8 = 0.0 * pData_idx_2_g;
pData_idx_8 += dUdrSumM;
pData_idx_0_k = pData_idx_0_p * pData_idx_0_i;
pData_idx_0_k += pData_idx_3_i * pData_idx_1_e;
pData_idx_0_k += 0.0 * pData_idx_2_i;
C = pData_idx_0_p * uTmp_idx_1;
C += pData_idx_3_i * lonNew;
C += 0.0 * pData_idx_5_e;
beta = pData_idx_0_p * pData_idx_6;
beta += pData_idx_3_i * pData_idx_7;
beta += 0.0 * pData_idx_8;
pData_idx_1_k = pData_idx_0_i * pData_idx_1_p;
pData_idx_1_k += pData_idx_1_e * pData_idx_4_e;
pData_idx_1_k += 0.0 * pData_idx_2_i;
B = uTmp_idx_1 * pData_idx_1_p;
B += pData_idx_4_e * lonNew;
B += 0.0 * pData_idx_5_e;
betaNew = pData_idx_6 * pData_idx_1_p;
betaNew += pData_idx_4_e * pData_idx_7;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_g = pData_idx_0_i * 0.0;
pData_idx_2_g += pData_idx_1_e * 0.0;
pData_idx_2_g += pData_idx_2_i;
pData_idx_5_p = uTmp_idx_1 * 0.0;
pData_idx_5_p += lonNew * 0.0;
pData_idx_5_p += pData_idx_5_e;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_7 * 0.0;
dUdrSumM += pData_idx_8;
pData_idx_0_i = (pData_idx_0_k * uTmp_idx_0 + C * dUT2UT1) + beta * pData_idx_2_p;
pData_idx_1_i = (uTmp_idx_0 * pData_idx_1_k + dUT2UT1 * B) + betaNew * pData_idx_2_p;
pData_idx_2_m = (uTmp_idx_0 * pData_idx_2_g + dUT2UT1 * pData_idx_5_p) + pData_idx_2_p * dUdrSumM;
pData_idx_0_p = (pData_idx_0_m * pData_idx_0_i + pData_idx_3_e * pData_idx_1_i) + pData_idx_6_p * pData_idx_2_m;
pData_idx_1_p = (pData_idx_0_i * pData_idx_1_m + pData_idx_1_i * pData_idx_4) + pm_idx_1 * pData_idx_2_m;
pData_idx_2_i = (pData_idx_0_i * pData_idx_2_k + pData_idx_1_i * pData_idx_5) + pData_idx_2_m * pm_idx_0;
pData_idx_0_k = (pData_idx_0_k * pData_idx_0 + C * pData_idx_1) + beta * pData_idx_2;
pData_idx_1_k = (pData_idx_0 * pData_idx_1_k + pData_idx_1 * B) + betaNew * pData_idx_2;
pData_idx_2_g = (pData_idx_0 * pData_idx_2_g + pData_idx_1 * pData_idx_5_p) + pData_idx_2 * dUdrSumM;
flat = 0.0 * pData_idx_2_m - pData_idx_1_i * 7.2921151467069791E-5;
pData_idx_1_e = pData_idx_0_i * 7.2921151467069791E-5 - 0.0 * pData_idx_2_m;
pData_idx_2_m = 0.0 * pData_idx_1_i - pData_idx_0_i * 0.0;
pData_idx_0_i = pData_idx_0_k - flat;
pData_idx_1_i = pData_idx_1_k - pData_idx_1_e;
pData_idx_2_g -= pData_idx_2_m;
pData_idx_0_k = (pData_idx_0_m * pData_idx_0_i + pData_idx_3_e * pData_idx_1_i) + pData_idx_6_p * pData_idx_2_g;
pData_idx_1_k = (pData_idx_0_i * pData_idx_1_m + pData_idx_1_i * pData_idx_4) + pm_idx_1 * pData_idx_2_g;
pData_idx_2_k = (pData_idx_0_i * pData_idx_2_k + pData_idx_1_i * pData_idx_5) + pData_idx_2_g * pm_idx_0;
ktuiv5qnvo2.guuurijbhk[0] = pData_idx_0_p;
ktuiv5qnvo2.guuurijbhk[1] = pData_idx_1_p;
ktuiv5qnvo2.guuurijbhk[2] = pData_idx_2_i;
ktuiv5qnvo2.iw0ifexhed[0] = pData_idx_0_k;
ktuiv5qnvo2.iw0ifexhed[1] = pData_idx_1_k;
ktuiv5qnvo2.iw0ifexhed[2] = pData_idx_2_k;
dzu2rlzxmw1.du2milvecl[0] = pData_idx_0_j;
dzu2rlzxmw1.du2milvecl[1] = pData_idx_1_j;
dzu2rlzxmw1.du2milvecl[2] = pData_idx_2_j;
uTmp_idx_1 = mft3luzpor.SpacecraftDynamics_startDate + 0.5;
A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
B = A + 1524.0;
betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
if (beta > 12.0) {
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
}
A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
if (beta < 3.0) {
    A++;
}
fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
if (beta <= 2.0) {
    A--;
    beta += 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = (((%<(SLibCG_SE(LibGetT()))> + fracSec) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
uTmp_idx_1 += 0.5;
A = (muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) + (muDoubleScalarFloor(uTmp_idx_1) + 1.0)) - muDoubleScalarFloor(muDoubleScalarFloor((uTmp_idx_1 - 1.86721625E+6) / 36524.25) / 4.0);
B = A + 1524.0;
betaNew = muDoubleScalarFloor(((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) + muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1)) - muDoubleScalarFloor(muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) * 30.6001));
beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 1.0;
if (beta > 12.0) {
    beta = muDoubleScalarFloor((B - muDoubleScalarFloor(muDoubleScalarFloor((B - 122.1) / 365.25) * 365.25)) / 30.6001) - 13.0;
}
A = muDoubleScalarFloor((B - 122.1) / 365.25) - 4716.0;
if (beta < 3.0) {
    A++;
}
fracSec = muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0 - muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0);
flat = muDoubleScalarFloor(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0) / 3600.0);
lonNew = muDoubleScalarFloor(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0) / 60.0);
fracSec += muDoubleScalarRem(muDoubleScalarRem(muDoubleScalarFloor(muDoubleScalarAbs(muDoubleScalarFloor(uTmp_idx_1) - uTmp_idx_1) * 86400.0), 3600.0), 60.0);
uTmp_idx_1 = A;
dUdphiSumM = beta;
if (beta <= 2.0) {
    uTmp_idx_1 = A - 1.0;
    dUdphiSumM = beta + 12.0;
}
B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
B = uTmp_idx_1 - 2.4000005E+6;
degreeP1 = 0;
if (B < 48622.0) {
    dUdrSumM = -0.1251659;
} else if (B >= 60337.0) {
    uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
    uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
    uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
    if (uTmp_idx_1 < -0.9) {
        dUdrSumM = -0.9;
    } else {
        dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    }
} else if ((B >= 60336.0) && (B < 60337.0)) {
    dUdrSumM = 0.0917493;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dUdrSumM = tmp_g[(uint32_T)degreeP1];
}
degreeP1 = 0;
if (B < 48622.0) {
    pm_idx_0 = 0.182987;
    pm_idx_1 = 0.168775;
} else if (B >= 60337.0) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else if ((B >= 60336.0) && (B < 60337.0)) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    pm_idx_0 = tmp_j[(uint32_T)degreeP1];
    pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
}
degreeP1 = 0;
if (B < 48622.0) {
    dCIP_idx_0 = -0.086;
    dCIP_idx_1 = 0.13;
} else if (B >= 60034.0) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else if ((B >= 60033.0) && (B < 60034.0)) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else {
    for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
    dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
}
dCIP_idx_0 *= 4.8481368110953594E-9;
dCIP_idx_1 *= 4.8481368110953594E-9;
pm_idx_0 *= 4.84813681109536E-6;
pm_idx_1 *= 4.84813681109536E-6;
uTmp_idx_1 = A;
dUdphiSumM = beta;
if (beta <= 2.0) {
    uTmp_idx_1 = A - 1.0;
    dUdphiSumM = beta + 12.0;
}
B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
if (uTmp_idx_1 >= 2.4577545E+6) {
    dUdlambdaSumM = 37.0;
} else if (uTmp_idx_1 >= 2.4572045E+6) {
    dUdlambdaSumM = 36.0;
} else if (uTmp_idx_1 >= 2.4561095E+6) {
    dUdlambdaSumM = 35.0;
} else if (uTmp_idx_1 >= 2.4548325E+6) {
    dUdlambdaSumM = 34.0;
} else if (uTmp_idx_1 >= 2.4537365E+6) {
    dUdlambdaSumM = 33.0;
} else if (uTmp_idx_1 >= 2.4511795E+6) {
    dUdlambdaSumM = 32.0;
} else if (uTmp_idx_1 >= 2.4506305E+6) {
    dUdlambdaSumM = 31.0;
} else if (uTmp_idx_1 >= 2.4500835E+6) {
    dUdlambdaSumM = 30.0;
} else if (uTmp_idx_1 >= 2.4495345E+6) {
    dUdlambdaSumM = 29.0;
} else if (uTmp_idx_1 >= 2.4491695E+6) {
    dUdlambdaSumM = 28.0;
} else if (uTmp_idx_1 >= 2.4488045E+6) {
    dUdlambdaSumM = 27.0;
} else if (uTmp_idx_1 >= 2.4482575E+6) {
    dUdlambdaSumM = 26.0;
} else if (uTmp_idx_1 >= 2.4478925E+6) {
    dUdlambdaSumM = 25.0;
} else if (uTmp_idx_1 >= 2.4471615E+6) {
    dUdlambdaSumM = 24.0;
} else if (uTmp_idx_1 >= 2.4462475E+6) {
    dUdlambdaSumM = 23.0;
} else if (uTmp_idx_1 >= 2.4455165E+6) {
    dUdlambdaSumM = 22.0;
} else if (uTmp_idx_1 >= 2.4451515E+6) {
    dUdlambdaSumM = 21.0;
} else if (uTmp_idx_1 >= 2.4447865E+6) {
    dUdlambdaSumM = 20.0;
} else if (uTmp_idx_1 >= 2.4442395E+6) {
    dUdlambdaSumM = 19.0;
} else if (uTmp_idx_1 >= 2.4438745E+6) {
    dUdlambdaSumM = 18.0;
} else if (uTmp_idx_1 >= 2.4435095E+6) {
    dUdlambdaSumM = 17.0;
} else if (uTmp_idx_1 >= 2.4431445E+6) {
    dUdlambdaSumM = 16.0;
} else if (uTmp_idx_1 >= 2.4427785E+6) {
    dUdlambdaSumM = 15.0;
} else if (uTmp_idx_1 >= 2.4424135E+6) {
    dUdlambdaSumM = 14.0;
} else if (uTmp_idx_1 >= 2.4420485E+6) {
    dUdlambdaSumM = 13.0;
} else if (uTmp_idx_1 >= 2.4416835E+6) {
    dUdlambdaSumM = 12.0;
} else if (uTmp_idx_1 >= 2.4414995E+6) {
    dUdlambdaSumM = 11.0;
} else if (uTmp_idx_1 >= 2.4413175E+6) {
    dUdlambdaSumM = 10.0;
} else if (uTmp_idx_1 >= 2.4398875E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
} else if (uTmp_idx_1 >= 2.4391265E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
} else if (uTmp_idx_1 >= 2.4390045E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
} else if (uTmp_idx_1 >= 2.4389425E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
} else if (uTmp_idx_1 >= 2.4388205E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
} else if (uTmp_idx_1 >= 2.4387615E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
} else if (uTmp_idx_1 >= 2.4386395E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
} else if (uTmp_idx_1 >= 2.4384865E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
} else if (uTmp_idx_1 >= 2.4383955E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
} else if (uTmp_idx_1 >= 2.4383345E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
} else if (uTmp_idx_1 >= 2.4376655E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
} else if (uTmp_idx_1 >= 2.4375125E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
} else if (uTmp_idx_1 >= 2.4373005E+6) {
    uTmp_idx_1 = A;
    dUdphiSumM = beta;
    if (beta <= 2.0) {
        uTmp_idx_1 = A - 1.0;
        dUdphiSumM = beta + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
    C = ((fracSec / 60.0 + lonNew) / 60.0 + flat) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
} else {
    dUdlambdaSumM = 0.0;
}
ssUT = fracSec + dUdrSumM;
uTmp_idx_1 = A;
dUdphiSumM = beta;
if (beta <= 2.0) {
    uTmp_idx_1 = A - 1.0;
    dUdphiSumM = beta + 12.0;
    A--;
    beta += 12.0;
}
B = (2.0 - muDoubleScalarFloor(uTmp_idx_1 / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(uTmp_idx_1 / 100.0) / 4.0);
C = ((((fracSec + dUdlambdaSumM) + 32.184) / 60.0 + lonNew) / 60.0 + flat) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((uTmp_idx_1 + 4716.0) * 365.25) + muDoubleScalarFloor((dUdphiSumM + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
uTmp_idx_1 -= 2.451545E+6;
rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
C = -pm_idx_0;
pm_idx_0 = -pm_idx_1;
pData_idx_4_e = muDoubleScalarCos(pm_idx_0);
pm_idx_1 = muDoubleScalarSin(pm_idx_0);
pData_idx_5_e = -muDoubleScalarSin(pm_idx_0);
pm_idx_0 = muDoubleScalarCos(pm_idx_0);
pData_idx_0_p = muDoubleScalarCos(C);
pData_idx_6_p = -muDoubleScalarSin(C);
pData_idx_2_i = muDoubleScalarSin(C);
pData_idx_8 = muDoubleScalarCos(C);
pData_idx_0_p += 0.0 * pData_idx_2_i;
pData_idx_1_p = pm_idx_1 * pData_idx_2_i;
pData_idx_4_e += pm_idx_1 * 0.0;
pm_idx_1 *= pData_idx_8;
pData_idx_2_i *= pm_idx_0;
dUdrSumM = pData_idx_6_p * 0.0;
dUdrSumM += 0.0 * pData_idx_5_e;
dUdrSumM += pm_idx_0 * pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_3_i = muDoubleScalarSin(rot_pm_idx_0);
pData_idx_1_k = -muDoubleScalarSin(rot_pm_idx_0);
B = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_0_j = pData_idx_0_p * pData_idx_0_k;
pData_idx_0_j += 0.0 * pData_idx_1_k;
pData_idx_0_j += pData_idx_6_p * 0.0;
pData_idx_3_e = pData_idx_0_p * pData_idx_3_i;
pData_idx_3_e += 0.0 * B;
pData_idx_3_e += pData_idx_6_p * 0.0;
pData_idx_1_j = pData_idx_0_k * pData_idx_1_p;
pData_idx_1_j += pData_idx_1_k * pData_idx_4_e;
pData_idx_1_j += pm_idx_1 * 0.0;
pData_idx_4 = pData_idx_3_i * pData_idx_1_p;
pData_idx_4 += pData_idx_4_e * B;
pData_idx_4 += pm_idx_1 * 0.0;
pData_idx_2_k = pData_idx_0_k * pData_idx_2_i;
pData_idx_2_k += pData_idx_1_k * pData_idx_5_e;
pData_idx_5 = pData_idx_3_i * pData_idx_2_i;
pData_idx_5 += B * pData_idx_5_e;
pm_idx_0 = 0.0 * pData_idx_2_i;
pm_idx_0 += 0.0 * pData_idx_5_e;
pm_idx_0 += dUdrSumM;
fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((ssUT / 60.0 + lonNew) / 60.0 + flat) / 24.0;
A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + betaNew) + B) - 1524.5) + C;
B = A - 2.4000005E+6;
A = B - 51544.5;
pData_idx_0_p = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_3_i = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_1_p = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_4_e = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
nutationV_g[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_g[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_g[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_g[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_g[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_g[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
nutationV_g[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
nutationV_g[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
nutationV_g[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
nutationV_g[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
nutationV_g[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
nutationV_g[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
nutationV_g[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
nutationV_g[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
nutationV_g[0] = muDoubleScalarMod(nutationV_g[0], 6.2831853071795862);
nutationV_g[1] = muDoubleScalarMod(nutationV_g[1], 6.2831853071795862);
nutationV_g[2] = muDoubleScalarMod(nutationV_g[2], 6.2831853071795862);
nutationV_g[3] = muDoubleScalarMod(nutationV_g[3], 6.2831853071795862);
nutationV_g[4] = muDoubleScalarMod(nutationV_g[4], 6.2831853071795862);
nutationV_g[5] = muDoubleScalarMod(nutationV_g[5], 6.2831853071795862);
nutationV_g[6] = muDoubleScalarMod(nutationV_g[6], 6.2831853071795862);
nutationV_g[7] = muDoubleScalarMod(nutationV_g[7], 6.2831853071795862);
nutationV_g[8] = muDoubleScalarMod(nutationV_g[8], 6.2831853071795862);
nutationV_g[9] = muDoubleScalarMod(nutationV_g[9], 6.2831853071795862);
nutationV_g[10] = muDoubleScalarMod(nutationV_g[10], 6.2831853071795862);
nutationV_g[11] = muDoubleScalarMod(nutationV_g[11], 6.2831853071795862);
nutationV_g[12] = muDoubleScalarMod(nutationV_g[12], 6.2831853071795862);
nutationV_g[13] = muDoubleScalarMod(nutationV_g[13], 6.2831853071795862);
A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
degreeP1 = 0;
for (count = 0; count < 1306; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = 1.0;
}
for (count = 0; count < 253; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 36; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP3] = dUdrSumM;
ktuiv5qnvo2.factor_dX_bhxxfovxdy[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 962; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_merlcviukg[degreeP3] = 1.0;
}
for (count = 0; count < 277; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_merlcviukg[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 30; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_merlcviukg[degreeP3] = fracSec;
}
for (count = 0; count < 5; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_merlcviukg[degreeP3] = dUdrSumM;
}
ktuiv5qnvo2.factor_dY_merlcviukg[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 33; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_g[degreeP3] = 1.0;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = uTmp_idx_1 / 36525.0;
for (count = 0; count < 25; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_g[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_g[degreeP3] = dUdrSumM;
factor_dS_g[degreeP1] = dUdphiSumM;
flat = 0.0;
lonNew = 0.0;
for (count = 0; count < 1600; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_g[degreeP1];
    }
    flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_bhxxfovxdy[count];
    lonNew = 0.0;
}
uTmp_idx_1 = 0.0;
for (count = 0; count < 1275; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_g[degreeP1];
    }
    lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_merlcviukg[count];
    uTmp_idx_1 = 0.0;
}
nutationV_s_g[0] = nutationV_g[0];
nutationV_s_g[1] = nutationV_g[1];
nutationV_s_g[2] = nutationV_g[2];
nutationV_s_g[3] = nutationV_g[3];
nutationV_s_g[4] = nutationV_g[4];
nutationV_s_g[5] = nutationV_g[6];
nutationV_s_g[6] = nutationV_g[7];
nutationV_s_g[7] = nutationV_g[13];
fracSec = 0.0;
for (count = 0; count < 66; count++) {
    for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
        fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_g[degreeP1];
    }
    uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_g[count];
    fracSec = 0.0;
}
A += flat;
beta += lonNew;
betaNew += uTmp_idx_1;
A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
flat = A * A;
lonNew = beta * beta;
dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
A = -muDoubleScalarAtan2(beta, A) - betaNew;
pData_idx_0_k = muDoubleScalarCos(A);
C = muDoubleScalarSin(A);
pData_idx_1_k = -muDoubleScalarSin(A);
B = muDoubleScalarCos(A);
pData_idx_0_m = muDoubleScalarCos(dUdrSumM);
pData_idx_6 = -muDoubleScalarSin(dUdrSumM);
pData_idx_2_i = muDoubleScalarSin(dUdrSumM);
pData_idx_8 = muDoubleScalarCos(dUdrSumM);
pData_idx_0_i = pData_idx_0_k * pData_idx_0_m;
pData_idx_0_i += C * 0.0;
pData_idx_0_i += 0.0 * pData_idx_2_i;
rot_pm_idx_0 = pData_idx_0_k * 0.0;
rot_pm_idx_0 += C;
beta = pData_idx_0_k * pData_idx_6;
beta += C * 0.0;
beta += 0.0 * pData_idx_8;
pData_idx_1_m = pData_idx_0_m * pData_idx_1_k;
pData_idx_1_m += 0.0 * B;
pData_idx_1_m += 0.0 * pData_idx_2_i;
pData_idx_4_p = 0.0 * pData_idx_1_k;
pData_idx_4_p += B;
betaNew = pData_idx_6 * pData_idx_1_k;
betaNew += B * 0.0;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_j = pData_idx_0_m * 0.0;
pData_idx_2_j += pData_idx_2_i;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_8;
pData_idx_0_k = muDoubleScalarCos(dCIP_idx_1);
C = muDoubleScalarSin(dCIP_idx_1);
pData_idx_1_k = -muDoubleScalarSin(dCIP_idx_1);
B = muDoubleScalarCos(dCIP_idx_1);
pData_idx_0_m = pData_idx_0_i * pData_idx_0_k;
pData_idx_0_m += rot_pm_idx_0 * pData_idx_1_k;
pData_idx_0_m += beta * 0.0;
uTmp_idx_1 = pData_idx_0_i * C;
uTmp_idx_1 += rot_pm_idx_0 * B;
uTmp_idx_1 += beta * 0.0;
pData_idx_6 = pData_idx_0_i * 0.0;
pData_idx_6 += rot_pm_idx_0 * 0.0;
pData_idx_6 += beta;
pData_idx_1_i = pData_idx_0_k * pData_idx_1_m;
pData_idx_1_i += pData_idx_1_k * pData_idx_4_p;
pData_idx_1_i += betaNew * 0.0;
lonNew = C * pData_idx_1_m;
lonNew += pData_idx_4_p * B;
lonNew += betaNew * 0.0;
pData_idx_7 = 0.0 * pData_idx_1_m;
pData_idx_7 += pData_idx_4_p * 0.0;
pData_idx_7 += betaNew;
pData_idx_2_i = pData_idx_0_k * pData_idx_2_j;
pData_idx_2_i += pData_idx_1_k * 0.0;
pData_idx_2_i += 0.0 * dUdrSumM;
pData_idx_5_e = C * pData_idx_2_j;
pData_idx_5_e += B * 0.0;
pData_idx_5_e += 0.0 * dUdrSumM;
pData_idx_8 = 0.0 * pData_idx_2_j;
pData_idx_8 += dUdrSumM;
pData_idx_0_k = pData_idx_0_p * pData_idx_0_m;
pData_idx_0_k += pData_idx_3_i * pData_idx_1_i;
pData_idx_0_k += 0.0 * pData_idx_2_i;
C = pData_idx_0_p * uTmp_idx_1;
C += pData_idx_3_i * lonNew;
C += 0.0 * pData_idx_5_e;
beta = pData_idx_0_p * pData_idx_6;
beta += pData_idx_3_i * pData_idx_7;
beta += 0.0 * pData_idx_8;
pData_idx_1_k = pData_idx_0_m * pData_idx_1_p;
pData_idx_1_k += pData_idx_1_i * pData_idx_4_e;
pData_idx_1_k += 0.0 * pData_idx_2_i;
B = uTmp_idx_1 * pData_idx_1_p;
B += pData_idx_4_e * lonNew;
B += 0.0 * pData_idx_5_e;
betaNew = pData_idx_6 * pData_idx_1_p;
betaNew += pData_idx_4_e * pData_idx_7;
betaNew += 0.0 * pData_idx_8;
pData_idx_2_j = pData_idx_0_m * 0.0;
pData_idx_2_j += pData_idx_1_i * 0.0;
pData_idx_2_j += pData_idx_2_i;
pData_idx_5_p = uTmp_idx_1 * 0.0;
pData_idx_5_p += lonNew * 0.0;
pData_idx_5_p += pData_idx_5_e;
dUdrSumM = pData_idx_6 * 0.0;
dUdrSumM += pData_idx_7 * 0.0;
dUdrSumM += pData_idx_8;
pData_idx_0_p = pData_idx_0_j * pData_idx_0_k;
pData_idx_0_p += pData_idx_3_e * pData_idx_1_k;
pData_idx_0_p += pData_idx_6_p * pData_idx_2_j;
pData_idx_3_i = pData_idx_0_j * C;
pData_idx_3_i += pData_idx_3_e * B;
pData_idx_3_i += pData_idx_6_p * pData_idx_5_p;
pData_idx_6 = pData_idx_0_j * beta;
pData_idx_6 += pData_idx_3_e * betaNew;
pData_idx_6 += pData_idx_6_p * dUdrSumM;
pData_idx_1_p = pData_idx_0_k * pData_idx_1_j;
pData_idx_1_p += pData_idx_1_k * pData_idx_4;
pData_idx_1_p += pm_idx_1 * pData_idx_2_j;
pData_idx_4_e = C * pData_idx_1_j;
pData_idx_4_e += pData_idx_4 * B;
pData_idx_4_e += pm_idx_1 * pData_idx_5_p;
pData_idx_7 = beta * pData_idx_1_j;
pData_idx_7 += pData_idx_4 * betaNew;
pData_idx_7 += pm_idx_1 * dUdrSumM;
pData_idx_2_i = pData_idx_0_k * pData_idx_2_k;
pData_idx_2_i += pData_idx_1_k * pData_idx_5;
pData_idx_2_i += pData_idx_2_j * pm_idx_0;
pData_idx_5_e = C * pData_idx_2_k;
pData_idx_5_e += B * pData_idx_5;
pData_idx_5_e += pData_idx_5_p * pm_idx_0;
pData_idx_8 = beta * pData_idx_2_k;
pData_idx_8 += betaNew * pData_idx_5;
pData_idx_8 += pm_idx_0 * dUdrSumM;
if ((pData_idx_0_p + pData_idx_4_e) + pData_idx_8 > 0.0) {
    pData_idx_0_k = muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 0.5;
    pData_idx_1_k = (pData_idx_5_e - pData_idx_7) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
    pData_idx_2_k = (pData_idx_6 - pData_idx_2_i) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
    pData_idx_3_e = (pData_idx_1_p - pData_idx_3_i) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
} else if ((pData_idx_4_e > pData_idx_0_p) && (pData_idx_4_e > pData_idx_8)) {
    betaNew = muDoubleScalarSqrt(((pData_idx_4_e - pData_idx_0_p) - pData_idx_8) + 1.0);
    pData_idx_2_k = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_k = (pData_idx_6 - pData_idx_2_i) * betaNew;
    pData_idx_1_k = (pData_idx_1_p + pData_idx_3_i) * betaNew;
    pData_idx_3_e = (pData_idx_5_e + pData_idx_7) * betaNew;
} else if (pData_idx_8 > pData_idx_0_p) {
    betaNew = muDoubleScalarSqrt(((pData_idx_8 - pData_idx_0_p) - pData_idx_4_e) + 1.0);
    pData_idx_3_e = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_k = (pData_idx_1_p - pData_idx_3_i) * betaNew;
    pData_idx_1_k = (pData_idx_2_i + pData_idx_6) * betaNew;
    pData_idx_2_k = (pData_idx_5_e + pData_idx_7) * betaNew;
} else {
    betaNew = muDoubleScalarSqrt(((pData_idx_0_p - pData_idx_4_e) - pData_idx_8) + 1.0);
    pData_idx_1_k = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_k = (pData_idx_5_e - pData_idx_7) * betaNew;
    pData_idx_2_k = (pData_idx_1_p + pData_idx_3_i) * betaNew;
    pData_idx_3_e = (pData_idx_2_i + pData_idx_6) * betaNew;
}
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = uTmp_idx_1 - 2.4000005E+6;
degreeP1 = 0;
if (B < 48622.0) {
    dUdrSumM = -0.1251659;
} else if (B >= 60337.0) {
    uTmp_idx_1 = (B - 51544.03) / 365.2422 + 2000.0;
    uTmp_idx_1 = ((muDoubleScalarSin(6.2831853071795862 * uTmp_idx_1) * 0.022 - muDoubleScalarCos(6.2831853071795862 * uTmp_idx_1) * 0.012) - muDoubleScalarSin(12.566370614359172 * uTmp_idx_1) * 0.006) + muDoubleScalarCos(12.566370614359172 * uTmp_idx_1) * 0.007;
    uTmp_idx_1 = (0.5382 - (B - 57801.0) * 0.00124) - uTmp_idx_1;
    if (uTmp_idx_1 < -0.9) {
        dUdrSumM = -0.9;
    } else {
        dUdrSumM = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    }
} else if ((B >= 60336.0) && (B < 60337.0)) {
    dUdrSumM = 0.0917493;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dUdrSumM = tmp_g[(uint32_T)degreeP1];
}
degreeP1 = 0;
if (B < 48622.0) {
    pm_idx_0 = 0.182987;
    pm_idx_1 = 0.168775;
} else if (B >= 60337.0) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else if ((B >= 60336.0) && (B < 60337.0)) {
    pm_idx_0 = 0.102773;
    pm_idx_1 = 0.250242;
} else {
    for (degreeP3 = 0; degreeP3 < 11715; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    pm_idx_0 = tmp_j[(uint32_T)degreeP1];
    pm_idx_1 = tmp_j[(uint32_T)degreeP1 + 11715U];
}
degreeP1 = 0;
if (B < 48622.0) {
    dCIP_idx_0 = -0.086;
    dCIP_idx_1 = 0.13;
} else if (B >= 60034.0) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else if ((B >= 60033.0) && (B < 60034.0)) {
    dCIP_idx_0 = 0.16;
    dCIP_idx_1 = 0.123;
} else {
    for (degreeP3 = 0; degreeP3 < 11412; degreeP3++) {
        if (((uint32_T)degreeP1 == 0U) && (B < ((real_T)degreeP3 + 48622.0) + 1.0)) {
            degreeP1 = degreeP3;
        }
    }
    dCIP_idx_0 = tmp_f[(uint32_T)degreeP1];
    dCIP_idx_1 = tmp_f[(uint32_T)degreeP1 + 11412U];
}
dCIP_idx_0 *= 4.8481368110953594E-9;
dCIP_idx_1 *= 4.8481368110953594E-9;
pm_idx_0 *= 4.84813681109536E-6;
pm_idx_1 *= 4.84813681109536E-6;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
if (uTmp_idx_1 >= 2.4577545E+6) {
    dUdlambdaSumM = 37.0;
} else if (uTmp_idx_1 >= 2.4572045E+6) {
    dUdlambdaSumM = 36.0;
} else if (uTmp_idx_1 >= 2.4561095E+6) {
    dUdlambdaSumM = 35.0;
} else if (uTmp_idx_1 >= 2.4548325E+6) {
    dUdlambdaSumM = 34.0;
} else if (uTmp_idx_1 >= 2.4537365E+6) {
    dUdlambdaSumM = 33.0;
} else if (uTmp_idx_1 >= 2.4511795E+6) {
    dUdlambdaSumM = 32.0;
} else if (uTmp_idx_1 >= 2.4506305E+6) {
    dUdlambdaSumM = 31.0;
} else if (uTmp_idx_1 >= 2.4500835E+6) {
    dUdlambdaSumM = 30.0;
} else if (uTmp_idx_1 >= 2.4495345E+6) {
    dUdlambdaSumM = 29.0;
} else if (uTmp_idx_1 >= 2.4491695E+6) {
    dUdlambdaSumM = 28.0;
} else if (uTmp_idx_1 >= 2.4488045E+6) {
    dUdlambdaSumM = 27.0;
} else if (uTmp_idx_1 >= 2.4482575E+6) {
    dUdlambdaSumM = 26.0;
} else if (uTmp_idx_1 >= 2.4478925E+6) {
    dUdlambdaSumM = 25.0;
} else if (uTmp_idx_1 >= 2.4471615E+6) {
    dUdlambdaSumM = 24.0;
} else if (uTmp_idx_1 >= 2.4462475E+6) {
    dUdlambdaSumM = 23.0;
} else if (uTmp_idx_1 >= 2.4455165E+6) {
    dUdlambdaSumM = 22.0;
} else if (uTmp_idx_1 >= 2.4451515E+6) {
    dUdlambdaSumM = 21.0;
} else if (uTmp_idx_1 >= 2.4447865E+6) {
    dUdlambdaSumM = 20.0;
} else if (uTmp_idx_1 >= 2.4442395E+6) {
    dUdlambdaSumM = 19.0;
} else if (uTmp_idx_1 >= 2.4438745E+6) {
    dUdlambdaSumM = 18.0;
} else if (uTmp_idx_1 >= 2.4435095E+6) {
    dUdlambdaSumM = 17.0;
} else if (uTmp_idx_1 >= 2.4431445E+6) {
    dUdlambdaSumM = 16.0;
} else if (uTmp_idx_1 >= 2.4427785E+6) {
    dUdlambdaSumM = 15.0;
} else if (uTmp_idx_1 >= 2.4424135E+6) {
    dUdlambdaSumM = 14.0;
} else if (uTmp_idx_1 >= 2.4420485E+6) {
    dUdlambdaSumM = 13.0;
} else if (uTmp_idx_1 >= 2.4416835E+6) {
    dUdlambdaSumM = 12.0;
} else if (uTmp_idx_1 >= 2.4414995E+6) {
    dUdlambdaSumM = 11.0;
} else if (uTmp_idx_1 >= 2.4413175E+6) {
    dUdlambdaSumM = 10.0;
} else if (uTmp_idx_1 >= 2.4398875E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.21317;
} else if (uTmp_idx_1 >= 2.4391265E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 39126.0) * 0.002592 + 4.31317;
} else if (uTmp_idx_1 >= 2.4390045E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.84013;
} else if (uTmp_idx_1 >= 2.4389425E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.74013;
} else if (uTmp_idx_1 >= 2.4388205E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.64013;
} else if (uTmp_idx_1 >= 2.4387615E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.54013;
} else if (uTmp_idx_1 >= 2.4386395E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.44013;
} else if (uTmp_idx_1 >= 2.4384865E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.34013;
} else if (uTmp_idx_1 >= 2.4383955E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 38761.0) * 0.001296 + 3.24013;
} else if (uTmp_idx_1 >= 2.4383345E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.945858;
} else if (uTmp_idx_1 >= 2.4376655E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37665.0) * 0.0011232 + 1.845858;
} else if (uTmp_idx_1 >= 2.4375125E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.372818;
} else if (uTmp_idx_1 >= 2.4373005E+6) {
    A = bessDate;
    beta = month;
    if (month <= 2.0) {
        A = bessDate - 1.0;
        beta = month + 12.0;
    }
    B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
    C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
    uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
    B = uTmp_idx_1 - 2.4000005E+6;
    dUdlambdaSumM = (B - 37300.0) * 0.001296 + 1.422818;
} else {
    dUdlambdaSumM = 0.0;
}
ssUT = sec + dUdrSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((((sec + dUdlambdaSumM) + 32.184) / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
uTmp_idx_1 -= 2.451545E+6;
rot_pm_idx_0 = uTmp_idx_1 / 36525.0 * -4.7E-5 / 3600.0 * 3.1415926535897931 / 180.0;
C = -pm_idx_0;
pm_idx_0 = -pm_idx_1;
B = muDoubleScalarCos(pm_idx_0);
pm_idx_1 = muDoubleScalarSin(pm_idx_0);
pData_idx_5 = -muDoubleScalarSin(pm_idx_0);
pm_idx_0 = muDoubleScalarCos(pm_idx_0);
pData_idx_0_j = muDoubleScalarCos(C);
pData_idx_6_p = -muDoubleScalarSin(C);
pData_idx_2_j = muDoubleScalarSin(C);
dUdrSumM = muDoubleScalarCos(C);
pData_idx_0_j += 0.0 * pData_idx_2_j;
pData_idx_1_j = pm_idx_1 * pData_idx_2_j;
B += pm_idx_1 * 0.0;
pm_idx_1 *= dUdrSumM;
pData_idx_2_j *= pm_idx_0;
A = pData_idx_6_p * 0.0;
A += 0.0 * pData_idx_5;
A += pm_idx_0 * dUdrSumM;
pData_idx_0_m = muDoubleScalarCos(rot_pm_idx_0);
C = muDoubleScalarSin(rot_pm_idx_0);
pData_idx_1_m = -muDoubleScalarSin(rot_pm_idx_0);
pData_idx_4 = muDoubleScalarCos(rot_pm_idx_0);
pData_idx_0_i = pData_idx_0_j * pData_idx_0_m;
pData_idx_0_i += 0.0 * pData_idx_1_m;
pData_idx_0_i += pData_idx_6_p * 0.0;
rot_pm_idx_0 = pData_idx_0_j * C;
rot_pm_idx_0 += 0.0 * pData_idx_4;
rot_pm_idx_0 += pData_idx_6_p * 0.0;
pData_idx_1_i = pData_idx_0_m * pData_idx_1_j;
pData_idx_1_i += pData_idx_1_m * B;
pData_idx_1_i += pm_idx_1 * 0.0;
pData_idx_4_p = C * pData_idx_1_j;
pData_idx_4_p += B * pData_idx_4;
pData_idx_4_p += pm_idx_1 * 0.0;
pData_idx_2_g = pData_idx_0_m * pData_idx_2_j;
pData_idx_2_g += pData_idx_1_m * pData_idx_5;
pData_idx_5_p = C * pData_idx_2_j;
pData_idx_5_p += pData_idx_4 * pData_idx_5;
pm_idx_0 = 0.0 * pData_idx_2_j;
pm_idx_0 += 0.0 * pData_idx_5;
pm_idx_0 += A;
fracSec = uTmp_idx_1 / 36525.0 * (uTmp_idx_1 / 36525.0);
dUdrSumM = uTmp_idx_1 / 36525.0 * fracSec;
dUdphiSumM = uTmp_idx_1 / 36525.0 * dUdrSumM;
dUdlambdaSumM = uTmp_idx_1 / 36525.0 * dUdphiSumM;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((ssUT / 60.0 + min) / 60.0 + hour) / 24.0;
A = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
B = A - 2.4000005E+6;
A = B - 51544.5;
pData_idx_0_j = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
C = muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
pData_idx_1_j = -muDoubleScalarSin(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
B = muDoubleScalarCos(muDoubleScalarMod(((muDoubleScalarMod(A, 1.0) + 0.779057273264) + 0.00273781191135448 * A) * 6.2831853071795862, 6.2831853071795862));
nutationV_j[0] = ((((uTmp_idx_1 / 36525.0 * 1.7179159232178E+9 + 485868.249036) + 31.8792 * fracSec) + 0.051635 * dUdrSumM) - 0.0002447 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_j[1] = ((((uTmp_idx_1 / 36525.0 * 1.295965810481E+8 + 1.287104793048E+6) - 0.5532 * fracSec) + 0.000136 * dUdrSumM) - 1.149E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_j[2] = ((((uTmp_idx_1 / 36525.0 * 1.7395272628478E+9 + 335779.526232) - 12.7512 * fracSec) - 0.001037 * dUdrSumM) + 4.17E-6 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_j[3] = ((((uTmp_idx_1 / 36525.0 * 1.602961601209E+9 + 1.072260703692E+6) - 6.3706 * fracSec) + 0.006593 * dUdrSumM) - 3.169E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_j[4] = ((((450160.398036 - uTmp_idx_1 / 36525.0 * 6.9628905431E+6) + 7.4722 * fracSec) + 0.007702 * dUdrSumM) - 5.939E-5 * dUdphiSumM) / 3600.0 * 3.1415926535897931 / 180.0;
nutationV_j[5] = uTmp_idx_1 / 36525.0 * 2608.7903141574 + 4.402608842;
nutationV_j[6] = uTmp_idx_1 / 36525.0 * 1021.3285546211 + 3.176146697;
nutationV_j[7] = uTmp_idx_1 / 36525.0 * 628.3075849991 + 1.753470314;
nutationV_j[8] = uTmp_idx_1 / 36525.0 * 334.06124267 + 6.203480913;
nutationV_j[9] = uTmp_idx_1 / 36525.0 * 52.9690962641 + 0.599546497;
nutationV_j[10] = uTmp_idx_1 / 36525.0 * 21.329910496 + 0.874016757;
nutationV_j[11] = uTmp_idx_1 / 36525.0 * 7.4781598567 + 5.481293872;
nutationV_j[12] = uTmp_idx_1 / 36525.0 * 3.8133035638 + 5.311886287;
nutationV_j[13] = uTmp_idx_1 / 36525.0 * 0.02438175 + 5.38691E-6 * fracSec;
nutationV_j[0] = muDoubleScalarMod(nutationV_j[0], 6.2831853071795862);
nutationV_j[1] = muDoubleScalarMod(nutationV_j[1], 6.2831853071795862);
nutationV_j[2] = muDoubleScalarMod(nutationV_j[2], 6.2831853071795862);
nutationV_j[3] = muDoubleScalarMod(nutationV_j[3], 6.2831853071795862);
nutationV_j[4] = muDoubleScalarMod(nutationV_j[4], 6.2831853071795862);
nutationV_j[5] = muDoubleScalarMod(nutationV_j[5], 6.2831853071795862);
nutationV_j[6] = muDoubleScalarMod(nutationV_j[6], 6.2831853071795862);
nutationV_j[7] = muDoubleScalarMod(nutationV_j[7], 6.2831853071795862);
nutationV_j[8] = muDoubleScalarMod(nutationV_j[8], 6.2831853071795862);
nutationV_j[9] = muDoubleScalarMod(nutationV_j[9], 6.2831853071795862);
nutationV_j[10] = muDoubleScalarMod(nutationV_j[10], 6.2831853071795862);
nutationV_j[11] = muDoubleScalarMod(nutationV_j[11], 6.2831853071795862);
nutationV_j[12] = muDoubleScalarMod(nutationV_j[12], 6.2831853071795862);
nutationV_j[13] = muDoubleScalarMod(nutationV_j[13], 6.2831853071795862);
A = ((((uTmp_idx_1 / 36525.0 * 2.004191898E+9 - 16617.0) - 429782.9 * fracSec) - 198618.34 * dUdrSumM) + 7.578 * dUdphiSumM) + 5.9285 * dUdlambdaSumM;
beta = ((((-6951.0 - uTmp_idx_1 / 36525.0 * 25896.0) - 2.24072747E+7 * fracSec) + 1900.59 * dUdrSumM) + 1112.526 * dUdphiSumM) + 0.1358 * dUdlambdaSumM;
betaNew = ((((uTmp_idx_1 / 36525.0 * 3808.65 + 94.0) - 122.68 * fracSec) - 72574.11 * dUdrSumM) + 27.98 * dUdphiSumM) + 15.62 * dUdlambdaSumM;
degreeP1 = 0;
for (count = 0; count < 1306; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = 1.0;
}
for (count = 0; count < 253; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 36; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP3] = dUdrSumM;
ktuiv5qnvo2.factor_dX_pbm3vprmfu[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 962; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_nz4o0shxby[degreeP3] = 1.0;
}
for (count = 0; count < 277; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_nz4o0shxby[degreeP3] = uTmp_idx_1 / 36525.0;
}
for (count = 0; count < 30; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_nz4o0shxby[degreeP3] = fracSec;
}
for (count = 0; count < 5; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    ktuiv5qnvo2.factor_dY_nz4o0shxby[degreeP3] = dUdrSumM;
}
ktuiv5qnvo2.factor_dY_nz4o0shxby[degreeP1] = dUdphiSumM;
degreeP1 = 0;
for (count = 0; count < 33; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_j[degreeP3] = 1.0;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = uTmp_idx_1 / 36525.0;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = uTmp_idx_1 / 36525.0;
for (count = 0; count < 25; count++) {
    degreeP3 = degreeP1;
    degreeP1++;
    factor_dS_j[degreeP3] = fracSec;
}
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = dUdrSumM;
degreeP3 = degreeP1;
degreeP1++;
factor_dS_j[degreeP3] = dUdrSumM;
factor_dS_j[degreeP1] = dUdphiSumM;
flat = 0.0;
lonNew = 0.0;
for (count = 0; count < 1600; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        lonNew += tmp_c[(degreeP1 + 3) * 1600 + count] * nutationV_j[degreeP1];
    }
    flat += (tmp_c[count + 1600] * muDoubleScalarSin(lonNew) + tmp_c[count + 3200] * muDoubleScalarCos(lonNew)) * ktuiv5qnvo2.factor_dX_pbm3vprmfu[count];
    lonNew = 0.0;
}
uTmp_idx_1 = 0.0;
for (count = 0; count < 1275; count++) {
    for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
        uTmp_idx_1 += tmp_k[(degreeP1 + 3) * 1275 + count] * nutationV_j[degreeP1];
    }
    lonNew += (tmp_k[count + 1275] * muDoubleScalarSin(uTmp_idx_1) + tmp_k[count + 2550] * muDoubleScalarCos(uTmp_idx_1)) * ktuiv5qnvo2.factor_dY_nz4o0shxby[count];
    uTmp_idx_1 = 0.0;
}
nutationV_s_j[0] = nutationV_j[0];
nutationV_s_j[1] = nutationV_j[1];
nutationV_s_j[2] = nutationV_j[2];
nutationV_s_j[3] = nutationV_j[3];
nutationV_s_j[4] = nutationV_j[4];
nutationV_s_j[5] = nutationV_j[6];
nutationV_s_j[6] = nutationV_j[7];
nutationV_s_j[7] = nutationV_j[13];
fracSec = 0.0;
for (count = 0; count < 66; count++) {
    for (degreeP1 = 0; degreeP1 < 8; degreeP1++) {
        fracSec += tmp_b[(degreeP1 + 3) * 66 + count] * nutationV_s_j[degreeP1];
    }
    uTmp_idx_1 += (tmp_b[count + 66] * muDoubleScalarSin(fracSec) + tmp_b[count + 132] * muDoubleScalarCos(fracSec)) * factor_dS_j[count];
    fracSec = 0.0;
}
A += flat;
beta += lonNew;
betaNew += uTmp_idx_1;
A = A * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_0;
beta = beta * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 + dCIP_idx_1;
betaNew = betaNew * 1.0E-6 / 3600.0 * 3.1415926535897931 / 180.0 - A * beta / 2.0;
flat = A * A;
lonNew = beta * beta;
dCIP_idx_1 = muDoubleScalarAtan2(beta, A);
dUdrSumM = muDoubleScalarAtan(muDoubleScalarSqrt((flat + lonNew) / ((1.0 - flat) - lonNew)));
A = -muDoubleScalarAtan2(beta, A) - betaNew;
pData_idx_0_m = muDoubleScalarCos(A);
uTmp_idx_1 = muDoubleScalarSin(A);
pData_idx_1_m = -muDoubleScalarSin(A);
pData_idx_4 = muDoubleScalarCos(A);
flat = muDoubleScalarCos(dUdrSumM);
beta = -muDoubleScalarSin(dUdrSumM);
pData_idx_2_j = muDoubleScalarSin(dUdrSumM);
dUdrSumM = muDoubleScalarCos(dUdrSumM);
pData_idx_0_e = pData_idx_0_m * flat;
pData_idx_0_e += uTmp_idx_1 * 0.0;
pData_idx_0_e += 0.0 * pData_idx_2_j;
pData_idx_3_p = pData_idx_0_m * 0.0;
pData_idx_3_p += uTmp_idx_1;
dCIP_idx_0 = pData_idx_0_m * beta;
dCIP_idx_0 += uTmp_idx_1 * 0.0;
dCIP_idx_0 += 0.0 * dUdrSumM;
pData_idx_1_e = flat * pData_idx_1_m;
pData_idx_1_e += 0.0 * pData_idx_4;
pData_idx_1_e += 0.0 * pData_idx_2_j;
lonNew = 0.0 * pData_idx_1_m;
lonNew += pData_idx_4;
betaNew = beta * pData_idx_1_m;
betaNew += pData_idx_4 * 0.0;
betaNew += 0.0 * dUdrSumM;
pData_idx_2_m = flat * 0.0;
pData_idx_2_m += pData_idx_2_j;
A = beta * 0.0;
A += dUdrSumM;
pData_idx_0_m = muDoubleScalarCos(dCIP_idx_1);
uTmp_idx_1 = muDoubleScalarSin(dCIP_idx_1);
pData_idx_1_m = -muDoubleScalarSin(dCIP_idx_1);
pData_idx_4 = muDoubleScalarCos(dCIP_idx_1);
flat = pData_idx_0_e * pData_idx_0_m;
flat += pData_idx_3_p * pData_idx_1_m;
flat += dCIP_idx_0 * 0.0;
dCIP_idx_1 = pData_idx_0_e * uTmp_idx_1;
dCIP_idx_1 += pData_idx_3_p * pData_idx_4;
dCIP_idx_1 += dCIP_idx_0 * 0.0;
beta = pData_idx_0_e * 0.0;
beta += pData_idx_3_p * 0.0;
beta += dCIP_idx_0;
ssUT = pData_idx_0_m * pData_idx_1_e;
ssUT += pData_idx_1_m * lonNew;
ssUT += betaNew * 0.0;
pData_idx_3_p = uTmp_idx_1 * pData_idx_1_e;
pData_idx_3_p += lonNew * pData_idx_4;
pData_idx_3_p += betaNew * 0.0;
pData_idx_1_e *= 0.0;
pData_idx_1_e += lonNew * 0.0;
pData_idx_1_e += betaNew;
pData_idx_2_j = pData_idx_0_m * pData_idx_2_m;
pData_idx_2_j += pData_idx_1_m * 0.0;
pData_idx_2_j += 0.0 * A;
pData_idx_5 = uTmp_idx_1 * pData_idx_2_m;
pData_idx_5 += pData_idx_4 * 0.0;
pData_idx_5 += 0.0 * A;
dUdrSumM = 0.0 * pData_idx_2_m;
dUdrSumM += A;
pData_idx_0_m = pData_idx_0_j * flat;
pData_idx_0_m += C * ssUT;
pData_idx_0_m += 0.0 * pData_idx_2_j;
uTmp_idx_1 = pData_idx_0_j * dCIP_idx_1;
uTmp_idx_1 += C * pData_idx_3_p;
uTmp_idx_1 += 0.0 * pData_idx_5;
dCIP_idx_0 = pData_idx_0_j * beta;
dCIP_idx_0 += C * pData_idx_1_e;
dCIP_idx_0 += 0.0 * dUdrSumM;
pData_idx_1_m = flat * pData_idx_1_j;
pData_idx_1_m += ssUT * B;
pData_idx_1_m += 0.0 * pData_idx_2_j;
pData_idx_4 = dCIP_idx_1 * pData_idx_1_j;
pData_idx_4 += B * pData_idx_3_p;
pData_idx_4 += 0.0 * pData_idx_5;
betaNew = beta * pData_idx_1_j;
betaNew += B * pData_idx_1_e;
betaNew += 0.0 * dUdrSumM;
pData_idx_2_m = flat * 0.0;
pData_idx_2_m += ssUT * 0.0;
pData_idx_2_m += pData_idx_2_j;
pData_idx_0_e = dCIP_idx_1 * 0.0;
pData_idx_0_e += pData_idx_3_p * 0.0;
pData_idx_0_e += pData_idx_5;
A = beta * 0.0;
A += pData_idx_1_e * 0.0;
A += dUdrSumM;
pData_idx_0_j = (pData_idx_0_m * uTmp_idx_0 + uTmp_idx_1 * dUT2UT1) + dCIP_idx_0 * pData_idx_2_p;
pData_idx_1_j = (uTmp_idx_0 * pData_idx_1_m + dUT2UT1 * pData_idx_4) + betaNew * pData_idx_2_p;
pData_idx_2_p = (uTmp_idx_0 * pData_idx_2_m + dUT2UT1 * pData_idx_0_e) + pData_idx_2_p * A;
uTmp_idx_0 = (pData_idx_0_i * pData_idx_0_j + rot_pm_idx_0 * pData_idx_1_j) + pData_idx_6_p * pData_idx_2_p;
dUT2UT1 = (pData_idx_0_j * pData_idx_1_i + pData_idx_1_j * pData_idx_4_p) + pm_idx_1 * pData_idx_2_p;
pData_idx_2_j = (pData_idx_0_j * pData_idx_2_g + pData_idx_1_j * pData_idx_5_p) + pData_idx_2_p * pm_idx_0;
pData_idx_0_m = (pData_idx_0_m * pData_idx_0 + uTmp_idx_1 * pData_idx_1) + dCIP_idx_0 * pData_idx_2;
pData_idx_1_m = (pData_idx_0 * pData_idx_1_m + pData_idx_1 * pData_idx_4) + betaNew * pData_idx_2;
pData_idx_2 = (pData_idx_0 * pData_idx_2_m + pData_idx_1 * pData_idx_0_e) + pData_idx_2 * A;
pData_idx_0 = 0.0 * pData_idx_2_p - pData_idx_1_j * 7.2921151467069791E-5;
pData_idx_1 = pData_idx_0_j * 7.2921151467069791E-5 - 0.0 * pData_idx_2_p;
pData_idx_2_p = 0.0 * pData_idx_1_j - pData_idx_0_j * 0.0;
pData_idx_0 = pData_idx_0_m - pData_idx_0;
pData_idx_1 = pData_idx_1_m - pData_idx_1;
pData_idx_2_p = pData_idx_2 - pData_idx_2_p;
pData_idx_0_j = (pData_idx_0_i * pData_idx_0 + rot_pm_idx_0 * pData_idx_1) + pData_idx_6_p * pData_idx_2_p;
pData_idx_1_j = (pData_idx_0 * pData_idx_1_i + pData_idx_1 * pData_idx_4_p) + pm_idx_1 * pData_idx_2_p;
pData_idx_2_p = (pData_idx_0 * pData_idx_2_g + pData_idx_1 * pData_idx_5_p) + pData_idx_2_p * pm_idx_0;
beta = muDoubleScalarAtan2(pData_idx_2_j, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) * 0.99664718683);
A = muDoubleScalarAtan2(42841.338876856695 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + pData_idx_2_j, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) - 42697.699871649937 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
betaNew = muDoubleScalarAtan2(0.99664718683 * muDoubleScalarSin(A), muDoubleScalarCos(A));
count = 0;
while ((beta != betaNew) && (count < 5)) {
    beta = betaNew;
    A = muDoubleScalarAtan2(42841.338876856695 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + pData_idx_2_j, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) - 42697.699871649937 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
    betaNew = muDoubleScalarAtan2(0.99664718683 * muDoubleScalarSin(A), muDoubleScalarCos(A));
    count++;
}
flat = muDoubleScalarAbs(A);
beta = A;
lonNew = muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0);
if (flat > 3.1415926535897931) {
    beta = muDoubleScalarMod(A + 3.1415926535897931, 6.2831853071795862) - 3.1415926535897931;
    flat = muDoubleScalarAbs(beta);
}
if (flat > 1.5707963267948966) {
    lonNew = muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0) + 3.1415926535897931;
    beta = (1.5707963267948966 - (flat - 1.5707963267948966)) * muDoubleScalarSign(beta);
}
if ((muDoubleScalarAbs(lonNew) > 3.1415926535897931) && (muDoubleScalarAbs(lonNew) > 3.1415926535897931)) {
    lonNew = muDoubleScalarRem(lonNew, 6.2831853071795862) - trunc(muDoubleScalarRem(lonNew, 6.2831853071795862) / 3.1415926535897931) * 6.2831853071795862;
}
pData_idx_0 = -muDoubleScalarCos(lonNew) * muDoubleScalarSin(beta);
C = -muDoubleScalarSin(lonNew) * muDoubleScalarSin(beta);
pData_idx_6_p = muDoubleScalarCos(beta);
pData_idx_1 = -muDoubleScalarSin(lonNew);
B = muDoubleScalarCos(lonNew);
pData_idx_2 = -muDoubleScalarCos(lonNew) * muDoubleScalarCos(beta);
pData_idx_5 = -muDoubleScalarSin(lonNew) * muDoubleScalarCos(beta);
pm_idx_0 = -muDoubleScalarSin(beta);
if ((pData_idx_0 + B) + pm_idx_0 > 0.0) {
    pData_idx_0_m = muDoubleScalarSqrt(((pData_idx_0 + B) + pm_idx_0) + 1.0) * 0.5;
    pData_idx_1_m = (0.0 - pData_idx_5) / (muDoubleScalarSqrt(((pData_idx_0 + B) + pm_idx_0) + 1.0) * 2.0);
    pData_idx_2_g = (pData_idx_2 - pData_idx_6_p) / (muDoubleScalarSqrt(((pData_idx_0 + B) + pm_idx_0) + 1.0) * 2.0);
    rot_pm_idx_0 = (C - pData_idx_1) / (muDoubleScalarSqrt(((pData_idx_0 + B) + pm_idx_0) + 1.0) * 2.0);
} else if ((B > pData_idx_0) && (B > pm_idx_0)) {
    betaNew = muDoubleScalarSqrt(((B - pData_idx_0) - pm_idx_0) + 1.0);
    pData_idx_2_g = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_m = (pData_idx_2 - pData_idx_6_p) * betaNew;
    pData_idx_1_m = (C + pData_idx_1) * betaNew;
    rot_pm_idx_0 = pData_idx_5 * betaNew;
} else if (pm_idx_0 > pData_idx_0) {
    betaNew = muDoubleScalarSqrt(((pm_idx_0 - pData_idx_0) - B) + 1.0);
    rot_pm_idx_0 = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_m = (C - pData_idx_1) * betaNew;
    pData_idx_1_m = (pData_idx_6_p + pData_idx_2) * betaNew;
    pData_idx_2_g = pData_idx_5 * betaNew;
} else {
    betaNew = muDoubleScalarSqrt(((pData_idx_0 - B) - pm_idx_0) + 1.0);
    pData_idx_1_m = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    pData_idx_0_m = (0.0 - pData_idx_5) * betaNew;
    pData_idx_2_g = (C + pData_idx_1) * betaNew;
    rot_pm_idx_0 = (pData_idx_6_p + pData_idx_2) * betaNew;
}
pData_idx_0 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_0_m;
pData_idx_1 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_1_m;
pData_idx_2 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * pData_idx_2_g;
C = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_1_m * pData_idx_1_m) + pData_idx_2_g * pData_idx_2_g) + rot_pm_idx_0 * rot_pm_idx_0) * rot_pm_idx_0;
pData_idx_1_m = -pData_idx_1;
pData_idx_2_g = -pData_idx_2;
rot_pm_idx_0 = -C;
pData_idx_0_m = pData_idx_1_k * pData_idx_0;
pData_idx_1_i = pData_idx_0 * pData_idx_2_k;
pData_idx_2_m = pData_idx_0 * pData_idx_3_e;
pData_idx_0_i = pData_idx_1_m * pData_idx_0_k;
pData_idx_1_e = pData_idx_0_k * pData_idx_2_g;
uTmp_idx_1 = pData_idx_0_k * rot_pm_idx_0;
pData_idx_0_m += pData_idx_0_i;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_i = pData_idx_2_g * pData_idx_3_e - pData_idx_2_k * rot_pm_idx_0;
pData_idx_1_e = pData_idx_1_k * rot_pm_idx_0 - pData_idx_1_m * pData_idx_3_e;
uTmp_idx_1 = pData_idx_1_m * pData_idx_2_k - pData_idx_1_k * pData_idx_2_g;
pData_idx_0_m += pData_idx_0_i;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_k = pData_idx_0 * pData_idx_0_k - ((pData_idx_1_m * pData_idx_1_k + pData_idx_2_g * pData_idx_2_k) + rot_pm_idx_0 * pData_idx_3_e);
pData_idx_0_i = pData_idx_1_c * pData_idx_0_k;
pData_idx_1_k = pData_idx_0_k * pData_idx_2_f;
pData_idx_2_k = pData_idx_0_k * pData_idx_3;
flat = pData_idx_0_m * pData_idx_0_c;
pData_idx_1_m = pData_idx_0_c * pData_idx_1_i;
pData_idx_2_g = pData_idx_0_c * pData_idx_2_m;
pData_idx_0_i += flat;
pData_idx_1_k += pData_idx_1_m;
pData_idx_2_k += pData_idx_2_g;
flat = pData_idx_1_i * pData_idx_3 - pData_idx_2_f * pData_idx_2_m;
pData_idx_1_m = pData_idx_1_c * pData_idx_2_m - pData_idx_0_m * pData_idx_3;
pData_idx_2_g = pData_idx_0_m * pData_idx_2_f - pData_idx_1_c * pData_idx_1_i;
pData_idx_0_i += flat;
pData_idx_1_k += pData_idx_1_m;
pData_idx_2_k += pData_idx_2_g;
pData_idx_0_c = pData_idx_0_k * pData_idx_0_c - ((pData_idx_0_m * pData_idx_1_c + pData_idx_1_i * pData_idx_2_f) + pData_idx_2_m * pData_idx_3);
pData_idx_1_c = pData_idx_0_i;
pData_idx_2_f = pData_idx_1_k;
pData_idx_3 = pData_idx_2_k;
pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_0_c;
pData_idx_1_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_1_c;
pData_idx_2_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_2_f;
pData_idx_3 *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_0_c = pData_idx_0_k;
pData_idx_1_c = pData_idx_1_k;
pData_idx_2_f = pData_idx_2_k;
pData_idx_0_k = pData_idx_1_c * pData_idx_0;
pData_idx_1_k = pData_idx_0 * pData_idx_2_f;
pData_idx_2_k = pData_idx_0 * pData_idx_3;
pData_idx_0_m = pData_idx_1 * pData_idx_0_c;
pData_idx_1_m = pData_idx_0_c * pData_idx_2;
pData_idx_2_g = pData_idx_0_c * C;
pData_idx_0_k += pData_idx_0_m;
pData_idx_1_k += pData_idx_1_m;
pData_idx_2_k += pData_idx_2_g;
pData_idx_0_m = pData_idx_2 * pData_idx_3 - pData_idx_2_f * C;
pData_idx_1_m = pData_idx_1_c * C - pData_idx_1 * pData_idx_3;
pData_idx_2_g = pData_idx_1 * pData_idx_2_f - pData_idx_1_c * pData_idx_2;
pData_idx_0_k += pData_idx_0_m;
pData_idx_1_k += pData_idx_1_m;
pData_idx_2_k += pData_idx_2_g;
pData_idx_0_m = pData_idx_0 * pData_idx_0_c - ((pData_idx_1 * pData_idx_1_c + pData_idx_2 * pData_idx_2_f) + C * pData_idx_3);
pData_idx_1_m = -pData_idx_1;
pData_idx_2_g = -pData_idx_2;
pData_idx_3_e = -C;
pData_idx_0_i = 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + C * C) * pData_idx_0;
pData_idx_1_m *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + C * C);
pData_idx_2_g *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + C * C);
pData_idx_3_e *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + C * C);
flat = pData_idx_0_j * pData_idx_0_i;
pData_idx_1_i = pData_idx_0_i * pData_idx_1_j;
pData_idx_2_m = pData_idx_0_i * pData_idx_2_p;
pData_idx_0_e = pData_idx_1_m * 0.0;
pData_idx_1_e = 0.0 * pData_idx_2_g;
uTmp_idx_1 = 0.0 * pData_idx_3_e;
flat += pData_idx_0_e;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_e = pData_idx_2_g * pData_idx_2_p - pData_idx_1_j * pData_idx_3_e;
pData_idx_1_e = pData_idx_0_j * pData_idx_3_e - pData_idx_1_m * pData_idx_2_p;
uTmp_idx_1 = pData_idx_1_m * pData_idx_1_j - pData_idx_0_j * pData_idx_2_g;
flat += pData_idx_0_e;
pData_idx_1_i += pData_idx_1_e;
pData_idx_2_m += uTmp_idx_1;
pData_idx_0_j = pData_idx_0_i * 0.0 - ((pData_idx_1_m * pData_idx_0_j + pData_idx_2_g * pData_idx_1_j) + pData_idx_3_e * pData_idx_2_p);
pData_idx_0_i = pData_idx_1 * pData_idx_0_j;
pData_idx_1_j = pData_idx_0_j * pData_idx_2;
pData_idx_0_j = flat * pData_idx_0;
pData_idx_1_m = pData_idx_0 * pData_idx_1_i;
pData_idx_0 = pData_idx_0_i + pData_idx_0_j;
pData_idx_1_j += pData_idx_1_m;
pData_idx_0_j = pData_idx_1_i * C - pData_idx_2 * pData_idx_2_m;
pData_idx_1 = pData_idx_1 * pData_idx_2_m - flat * C;
pData_idx_0 += pData_idx_0_j;
pData_idx_1 += pData_idx_1_j;
pData_idx_0_j = pData_idx_1 / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_j) * muDoubleScalarSin(A) + muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126));
pData_idx_1_j = -(pData_idx_0 / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_j) * muDoubleScalarSin(A) + muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.33543860012835E+6 / muDoubleScalarPower(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126, 1.5)));
pData_idx_2_p = -(pData_idx_1 / ((((6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744) * 0.0066943849838470744 * muDoubleScalarSin(A) + pData_idx_2_j) * muDoubleScalarSin(A) + muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) * muDoubleScalarCos(A)) - 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943849838470744)) + 6.3781363E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * 0.0066943849838471126)) * muDoubleScalarTan(beta));
dUT2UT1 = -pData_idx_1_c;
pData_idx_2 = -pData_idx_2_f;
pData_idx_3_e = -pData_idx_3;
uTmp_idx_0 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_0_c;
dUT2UT1 *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_2 *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_3_e *= 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3);
pData_idx_0 = pData_idx_0_j * uTmp_idx_0;
pData_idx_1 = uTmp_idx_0 * pData_idx_1_j;
pData_idx_2_j = uTmp_idx_0 * pData_idx_2_p;
pData_idx_0_i = dUT2UT1 * 0.0;
pData_idx_1_m = 0.0 * pData_idx_2;
pData_idx_2_g = 0.0 * pData_idx_3_e;
pData_idx_0 += pData_idx_0_i;
pData_idx_1 += pData_idx_1_m;
pData_idx_2_j += pData_idx_2_g;
pData_idx_0_i = pData_idx_2 * pData_idx_2_p - pData_idx_1_j * pData_idx_3_e;
pData_idx_1_m = pData_idx_0_j * pData_idx_3_e - dUT2UT1 * pData_idx_2_p;
pData_idx_2_g = dUT2UT1 * pData_idx_1_j - pData_idx_0_j * pData_idx_2;
pData_idx_0 += pData_idx_0_i;
pData_idx_1 += pData_idx_1_m;
pData_idx_2_j += pData_idx_2_g;
uTmp_idx_0 = uTmp_idx_0 * 0.0 - ((dUT2UT1 * pData_idx_0_j + pData_idx_2 * pData_idx_1_j) + pData_idx_3_e * pData_idx_2_p);
pData_idx_0_j = pData_idx_1_c * uTmp_idx_0;
dUT2UT1 = uTmp_idx_0 * pData_idx_2_f;
pData_idx_2_p = uTmp_idx_0 * pData_idx_3;
uTmp_idx_0 = pData_idx_0 * pData_idx_0_c;
pData_idx_1_j = pData_idx_0_c * pData_idx_1;
pData_idx_2 = pData_idx_0_c * pData_idx_2_j;
uTmp_idx_0 += pData_idx_0_j;
dUT2UT1 += pData_idx_1_j;
pData_idx_2_p += pData_idx_2;
pData_idx_0_j = pData_idx_1 * pData_idx_3 - pData_idx_2_f * pData_idx_2_j;
pData_idx_1_j = pData_idx_1_c * pData_idx_2_j - pData_idx_0 * pData_idx_3;
pData_idx_2 = pData_idx_0 * pData_idx_2_f - pData_idx_1_c * pData_idx_1;
uTmp_idx_0 += pData_idx_0_j;
dUT2UT1 += pData_idx_1_j;
pData_idx_2_p += pData_idx_2;
uTmp_idx_0 = pData_idx_0_g - uTmp_idx_0;
dUT2UT1 = pData_idx_1_g - dUT2UT1;
pData_idx_2_p = pData_idx_2_c - pData_idx_2_p;
pData_idx_0 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) * pData_idx_0_m;
pData_idx_1 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) * pData_idx_0_k;
pData_idx_2 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) * pData_idx_1_k;
pData_idx_3_e = 1.0 / muDoubleScalarSqrt(((pData_idx_0_m * pData_idx_0_m + pData_idx_0_k * pData_idx_0_k) + pData_idx_1_k * pData_idx_1_k) + pData_idx_2_k * pData_idx_2_k) * pData_idx_2_k;
pData_idx_1_k = -pData_idx_1;
pData_idx_2_k = -pData_idx_2;
C = -pData_idx_3_e;
pData_idx_0_k = 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + pData_idx_3_e * pData_idx_3_e) * pData_idx_0;
pData_idx_1_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + pData_idx_3_e * pData_idx_3_e);
pData_idx_2_k *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + pData_idx_3_e * pData_idx_3_e);
C *= 1.0 / muDoubleScalarSqrt(((pData_idx_0 * pData_idx_0 + pData_idx_1 * pData_idx_1) + pData_idx_2 * pData_idx_2) + pData_idx_3_e * pData_idx_3_e);
pData_idx_0_g = 0.0 * pData_idx_0_k;
pData_idx_1_g = pData_idx_0_k * 0.0;
pData_idx_2_c = pData_idx_0_k * 7.2921151467069791E-5;
pData_idx_0_j = pData_idx_1_k * 0.0;
pData_idx_1_j = 0.0 * pData_idx_2_k;
pData_idx_2_j = 0.0 * C;
pData_idx_0_g += pData_idx_0_j;
pData_idx_1_g += pData_idx_1_j;
pData_idx_2_c += pData_idx_2_j;
pData_idx_0_j = pData_idx_2_k * 7.2921151467069791E-5 - 0.0 * C;
pData_idx_1_j = 0.0 * C - pData_idx_1_k * 7.2921151467069791E-5;
pData_idx_2_j = pData_idx_1_k * 0.0 - 0.0 * pData_idx_2_k;
pData_idx_0_g += pData_idx_0_j;
pData_idx_1_g += pData_idx_1_j;
pData_idx_2_c += pData_idx_2_j;
pData_idx_0_k = pData_idx_0_k * 0.0 - ((pData_idx_1_k * 0.0 + pData_idx_2_k * 0.0) + C * 7.2921151467069791E-5);
pData_idx_0_j = pData_idx_1 * pData_idx_0_k;
pData_idx_1_k = pData_idx_0_k * pData_idx_2;
pData_idx_2_k = pData_idx_0_k * pData_idx_3_e;
pData_idx_0_k = pData_idx_0_g * pData_idx_0;
pData_idx_1_j = pData_idx_0 * pData_idx_1_g;
pData_idx_2_j = pData_idx_0 * pData_idx_2_c;
pData_idx_0 = pData_idx_0_j + pData_idx_0_k;
pData_idx_1_k += pData_idx_1_j;
pData_idx_2_k += pData_idx_2_j;
pData_idx_0_k = pData_idx_1_g * pData_idx_3_e - pData_idx_2 * pData_idx_2_c;
pData_idx_1_j = pData_idx_1 * pData_idx_2_c - pData_idx_0_g * pData_idx_3_e;
pData_idx_2 = pData_idx_0_g * pData_idx_2 - pData_idx_1 * pData_idx_1_g;
pData_idx_0 += pData_idx_0_k;
pData_idx_1 = pData_idx_1_k + pData_idx_1_j;
pData_idx_2 += pData_idx_2_k;
pData_idx_0_g = uTmp_idx_0 - pData_idx_0;
pData_idx_1_g = dUT2UT1 - pData_idx_1;
pData_idx_2_c = pData_idx_2_p - pData_idx_2;
uTmp_idx_0 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_0_c;
dUT2UT1 = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_1_c;
pData_idx_2_p = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_2_f;
pData_idx_3_e = 1.0 / muDoubleScalarSqrt(((pData_idx_0_c * pData_idx_0_c + pData_idx_1_c * pData_idx_1_c) + pData_idx_2_f * pData_idx_2_f) + pData_idx_3 * pData_idx_3) * pData_idx_3;
pData_idx_0 = ((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) - pData_idx_2_p * pData_idx_2_p) - pData_idx_3_e * pData_idx_3_e;
C = (dUT2UT1 * pData_idx_2_p + uTmp_idx_0 * pData_idx_3_e) * 2.0;
pData_idx_6_p = (dUT2UT1 * pData_idx_3_e - uTmp_idx_0 * pData_idx_2_p) * 2.0;
pData_idx_1 = (dUT2UT1 * pData_idx_2_p - uTmp_idx_0 * pData_idx_3_e) * 2.0;
B = ((uTmp_idx_0 * uTmp_idx_0 - dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) - pData_idx_3_e * pData_idx_3_e;
pm_idx_1 = (pData_idx_2_p * pData_idx_3_e + uTmp_idx_0 * dUT2UT1) * 2.0;
pData_idx_2 = (dUT2UT1 * pData_idx_3_e + uTmp_idx_0 * pData_idx_2_p) * 2.0;
pData_idx_5 = (pData_idx_2_p * pData_idx_3_e - uTmp_idx_0 * dUT2UT1) * 2.0;
pm_idx_0 = ((uTmp_idx_0 * uTmp_idx_0 - dUT2UT1 * dUT2UT1) - pData_idx_2_p * pData_idx_2_p) + pData_idx_3_e * pData_idx_3_e;
if (-pData_idx_6_p <= -1.0) {
    pData_idx_4 = -1.0;
} else if (-pData_idx_6_p >= 1.0) {
    pData_idx_4 = 1.0;
} else {
    pData_idx_4 = -pData_idx_6_p;
}
pData_idx_0_m = muDoubleScalarAsin(pData_idx_4);
if (muDoubleScalarAbs(pData_idx_4) == 1.0) {
    pData_idx_2_g = muDoubleScalarAtan2(-pData_idx_1, B);
    pData_idx_1_m = 0.0;
    pData_idx_2_j = 0.0;
} else {
    pData_idx_1_m = muDoubleScalarAtan2(C, pData_idx_0);
    pData_idx_2_j = muDoubleScalarAtan2(pm_idx_1, pm_idx_0);
    pData_idx_2_g = 0.0;
}
pData_idx_4 = muDoubleScalarCos(pData_idx_2_j);
betaNew = muDoubleScalarSin(pData_idx_2_j);
pData_idx_5_p = -muDoubleScalarSin(pData_idx_2_j);
dUdrSumM = muDoubleScalarCos(pData_idx_2_j);
uTmp_idx_0 = muDoubleScalarCos(pData_idx_0_m);
beta = -muDoubleScalarSin(pData_idx_0_m);
pData_idx_2_p = muDoubleScalarSin(pData_idx_0_m);
A = muDoubleScalarCos(pData_idx_0_m);
pData_idx_0_k = uTmp_idx_0;
pData_idx_0_k += 0.0 * pData_idx_2_p;
dCIP_idx_0 = beta;
dCIP_idx_0 += 0.0 * A;
dUT2UT1 = uTmp_idx_0 * 0.0;
dUT2UT1 += 0.0 * pData_idx_4;
dUT2UT1 += betaNew * pData_idx_2_p;
pData_idx_4_p = pData_idx_4;
pData_idx_4_p += betaNew * 0.0;
pData_idx_1_e = beta * 0.0;
pData_idx_1_e += pData_idx_4 * 0.0;
pData_idx_1_e += betaNew * A;
pData_idx_2_k = uTmp_idx_0 * 0.0;
pData_idx_2_k += 0.0 * pData_idx_5_p;
pData_idx_2_k += pData_idx_2_p * dUdrSumM;
pData_idx_0_e = pData_idx_5_p;
pData_idx_0_e += 0.0 * dUdrSumM;
pData_idx_3 = beta * 0.0;
pData_idx_3 += 0.0 * pData_idx_5_p;
pData_idx_3 += dUdrSumM * A;
uTmp_idx_0 = muDoubleScalarCos(pData_idx_1_m);
pData_idx_3_e = muDoubleScalarSin(pData_idx_1_m);
pData_idx_1_k = -muDoubleScalarSin(pData_idx_1_m);
pData_idx_4 = muDoubleScalarCos(pData_idx_1_m);
pData_idx_0_c = pData_idx_0_k * uTmp_idx_0;
pData_idx_0_c += 0.0 * pData_idx_1_k;
pData_idx_0_c += dCIP_idx_0 * 0.0;
rot_pm_idx_0 = pData_idx_0_k * pData_idx_3_e;
rot_pm_idx_0 += 0.0 * pData_idx_4;
rot_pm_idx_0 += dCIP_idx_0 * 0.0;
beta = pData_idx_0_k * 0.0;
beta += dCIP_idx_0;
pData_idx_1_c = uTmp_idx_0 * dUT2UT1;
pData_idx_1_c += pData_idx_1_k * pData_idx_4_p;
pData_idx_1_c += pData_idx_1_e * 0.0;
lonNew = pData_idx_3_e * dUT2UT1;
lonNew += pData_idx_4_p * pData_idx_4;
lonNew += pData_idx_1_e * 0.0;
betaNew = 0.0 * dUT2UT1;
betaNew += pData_idx_4_p * 0.0;
betaNew += pData_idx_1_e;
pData_idx_2_p = uTmp_idx_0 * pData_idx_2_k;
pData_idx_2_p += pData_idx_1_k * pData_idx_0_e;
pData_idx_2_p += 0.0 * pData_idx_3;
pData_idx_5_p = pData_idx_3_e * pData_idx_2_k;
pData_idx_5_p += pData_idx_4 * pData_idx_0_e;
pData_idx_5_p += 0.0 * pData_idx_3;
dUdrSumM = 0.0 * pData_idx_2_k;
dUdrSumM += 0.0 * pData_idx_0_e;
dUdrSumM += pData_idx_3;
uTmp_idx_0 = muDoubleScalarCos(pData_idx_0_m);
dCIP_idx_0 = -muDoubleScalarSin(pData_idx_0_m);
pData_idx_2_k = muDoubleScalarSin(pData_idx_0_m);
A = muDoubleScalarCos(pData_idx_0_m);
pData_idx_0_k = uTmp_idx_0;
pData_idx_0_k += 0.0 * pData_idx_2_k;
pData_idx_1_j = dCIP_idx_0;
pData_idx_1_j += 0.0 * A;
dUT2UT1 = uTmp_idx_0 * 0.0;
dUT2UT1 += 0.0 * pData_idx_2_k;
pData_idx_1_e = dCIP_idx_0 * 0.0;
pData_idx_1_e += 0.0 * A;
pData_idx_2_f = uTmp_idx_0 * 0.0;
pData_idx_2_f += pData_idx_2_k;
pData_idx_3 = dCIP_idx_0 * 0.0;
pData_idx_3 += A;
uTmp_idx_0 = muDoubleScalarCos(pData_idx_2_g);
pData_idx_3_e = muDoubleScalarSin(pData_idx_2_g);
pData_idx_1_k = -muDoubleScalarSin(pData_idx_2_g);
pData_idx_4 = muDoubleScalarCos(pData_idx_2_g);
pData_idx_0_j = pData_idx_0_k * uTmp_idx_0;
pData_idx_0_j += 0.0 * pData_idx_1_k;
pData_idx_0_j += pData_idx_1_j * 0.0;
uTmp_idx_1 = pData_idx_0_k * pData_idx_3_e;
uTmp_idx_1 += 0.0 * pData_idx_4;
uTmp_idx_1 += pData_idx_1_j * 0.0;
dCIP_idx_0 = pData_idx_0_k * 0.0;
dCIP_idx_0 += pData_idx_1_j;
pData_idx_1_j = uTmp_idx_0 * dUT2UT1;
pData_idx_1_j += pData_idx_1_k;
pData_idx_1_j += pData_idx_1_e * 0.0;
pData_idx_4_p = pData_idx_3_e * dUT2UT1;
pData_idx_4_p += pData_idx_4;
pData_idx_4_p += pData_idx_1_e * 0.0;
dUT2UT1 *= 0.0;
dUT2UT1 += pData_idx_1_e;
pData_idx_2_k = uTmp_idx_0 * pData_idx_2_f;
pData_idx_2_k += pData_idx_1_k * 0.0;
pData_idx_2_k += 0.0 * pData_idx_3;
pData_idx_0_e = pData_idx_3_e * pData_idx_2_f;
pData_idx_0_e += pData_idx_4 * 0.0;
pData_idx_0_e += 0.0 * pData_idx_3;
A = 0.0 * pData_idx_2_f;
A += pData_idx_3;
pData_idx_4 = muDoubleScalarAbs(pData_idx_0 - pData_idx_0_c);
pData_idx_3_e = muDoubleScalarAbs(pData_idx_0 - pData_idx_0_j);
pData_idx_4 += muDoubleScalarAbs(C - rot_pm_idx_0);
pData_idx_3_e += muDoubleScalarAbs(C - uTmp_idx_1);
pData_idx_4 += muDoubleScalarAbs(pData_idx_6_p - beta);
pData_idx_3_e += muDoubleScalarAbs(pData_idx_6_p - dCIP_idx_0);
pData_idx_4 += muDoubleScalarAbs(pData_idx_1 - pData_idx_1_c);
pData_idx_3_e += muDoubleScalarAbs(pData_idx_1 - pData_idx_1_j);
pData_idx_4 += muDoubleScalarAbs(B - lonNew);
pData_idx_3_e += muDoubleScalarAbs(B - pData_idx_4_p);
pData_idx_4 += muDoubleScalarAbs(pm_idx_1 - betaNew);
pData_idx_3_e += muDoubleScalarAbs(pm_idx_1 - dUT2UT1);
pData_idx_4 += muDoubleScalarAbs(pData_idx_2 - pData_idx_2_p);
pData_idx_3_e += muDoubleScalarAbs(pData_idx_2 - pData_idx_2_k);
pData_idx_4 += muDoubleScalarAbs(pData_idx_5 - pData_idx_5_p);
pData_idx_3_e += muDoubleScalarAbs(pData_idx_5 - pData_idx_0_e);
pData_idx_4 += muDoubleScalarAbs(pm_idx_0 - dUdrSumM);
pData_idx_3_e += muDoubleScalarAbs(pm_idx_0 - A);
if (pData_idx_3_e <= pData_idx_4) {
    pData_idx_1_m = pData_idx_2_g;
    pData_idx_2_j = 0.0;
}
ktuiv5qnvo2.pk5pkkw0ge[0] = pData_idx_1_m * 57.295779513082323;
ktuiv5qnvo2.pk5pkkw0ge[1] = pData_idx_0_m * 57.295779513082323;
ktuiv5qnvo2.pk5pkkw0ge[2] = pData_idx_2_j * 57.295779513082323;
ktuiv5qnvo2.hvyvygfz3h[0] = pData_idx_0_g * 57.295779513082323;
ktuiv5qnvo2.hvyvygfz3h[1] = pData_idx_1_g * 57.295779513082323;
ktuiv5qnvo2.hvyvygfz3h[2] = pData_idx_2_c * 57.295779513082323;
dzu2rlzxmw1.iqedkgi5kk[0] = pData_idx_0_f;
dzu2rlzxmw1.iqedkgi5kk[1] = pData_idx_1_f;
dzu2rlzxmw1.iqedkgi5kk[2] = pData_idx_2_e;
if ((pData_idx_0_p + pData_idx_4_e) + pData_idx_8 > 0.0) {
    uTmp_idx_0 = muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 0.5;
    dUT2UT1 = (pData_idx_7 - pData_idx_5_e) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
    pData_idx_2_p = (pData_idx_2_i - pData_idx_6) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
    pData_idx_3_e = (pData_idx_3_i - pData_idx_1_p) / (muDoubleScalarSqrt(((pData_idx_0_p + pData_idx_4_e) + pData_idx_8) + 1.0) * 2.0);
} else if ((pData_idx_4_e > pData_idx_0_p) && (pData_idx_4_e > pData_idx_8)) {
    betaNew = muDoubleScalarSqrt(((pData_idx_4_e - pData_idx_0_p) - pData_idx_8) + 1.0);
    pData_idx_2_p = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    uTmp_idx_0 = (pData_idx_2_i - pData_idx_6) * betaNew;
    dUT2UT1 = (pData_idx_3_i + pData_idx_1_p) * betaNew;
    pData_idx_3_e = (pData_idx_7 + pData_idx_5_e) * betaNew;
} else if (pData_idx_8 > pData_idx_0_p) {
    betaNew = muDoubleScalarSqrt(((pData_idx_8 - pData_idx_0_p) - pData_idx_4_e) + 1.0);
    pData_idx_3_e = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    uTmp_idx_0 = (pData_idx_3_i - pData_idx_1_p) * betaNew;
    dUT2UT1 = (pData_idx_6 + pData_idx_2_i) * betaNew;
    pData_idx_2_p = (pData_idx_7 + pData_idx_5_e) * betaNew;
} else {
    betaNew = muDoubleScalarSqrt(((pData_idx_0_p - pData_idx_4_e) - pData_idx_8) + 1.0);
    dUT2UT1 = 0.5 * betaNew;
    if (betaNew != 0.0) {
        betaNew = 0.5 / betaNew;
    }
    uTmp_idx_0 = (pData_idx_7 - pData_idx_5_e) * betaNew;
    pData_idx_2_p = (pData_idx_3_i + pData_idx_1_p) * betaNew;
    pData_idx_3_e = (pData_idx_6 + pData_idx_2_i) * betaNew;
}
ktuiv5qnvo2.n4ai4ankzt[0] = uTmp_idx_0;
ktuiv5qnvo2.n4ai4ankzt[1] = dUT2UT1;
ktuiv5qnvo2.n4ai4ankzt[2] = pData_idx_2_p;
ktuiv5qnvo2.n4ai4ankzt[3] = pData_idx_3_e;
A = bessDate;
beta = month;
if (month <= 2.0) {
    A = bessDate - 1.0;
    beta = month + 12.0;
}
B = (2.0 - muDoubleScalarFloor(A / 100.0)) + muDoubleScalarFloor(muDoubleScalarFloor(A / 100.0) / 4.0);
C = ((sec / 60.0 + min) / 60.0 + hour) / 24.0;
uTmp_idx_1 = ((((muDoubleScalarFloor((A + 4716.0) * 365.25) + muDoubleScalarFloor((beta + 1.0) * 30.6001)) + uTmp_idx_2) + B) - 1524.5) + C;
ktuiv5qnvo2.n2legnbe3a = uTmp_idx_1;
uTmp_idx_0 = ktuiv5qnvo2.guuurijbhk[0];
dUT2UT1 = ktuiv5qnvo2.guuurijbhk[1];
pData_idx_2_p = ktuiv5qnvo2.guuurijbhk[2];
smlambda_p[0] = 0.0;
cmlambda_p[0] = 1.0;
smlambda_p[1] = muDoubleScalarSin(muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0));
cmlambda_p[1] = muDoubleScalarCos(muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0));
for (degreeP3 = 2; degreeP3 < 21; degreeP3++) {
    smlambda_p[degreeP3] = 2.0 * muDoubleScalarCos(muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0)) * smlambda_p[degreeP3 - 1] - smlambda_p[degreeP3 - 2];
    cmlambda_p[degreeP3] = 2.0 * muDoubleScalarCos(muDoubleScalarAtan2(dUT2UT1, uTmp_idx_0)) * cmlambda_p[degreeP3 - 1] - cmlambda_p[degreeP3 - 2];
}
A = muDoubleScalarCos(1.5707963267948966 - muDoubleScalarAsin(pData_idx_2_p / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p)));
beta = muDoubleScalarSin(1.5707963267948966 - muDoubleScalarAsin(pData_idx_2_p / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p)));
if (muDoubleScalarAbs(A) <= 2.2204460492503131E-16) {
    A = 0.0;
}
if (muDoubleScalarAbs(beta) <= 2.2204460492503131E-16) {
    beta = 0.0;
}
ktuiv5qnvo2.P_ppxrqq0gsf[0] = 1.0;
ktuiv5qnvo2.P_ppxrqq0gsf[1] = 1.7320508075688772 * A;
ktuiv5qnvo2.P_ppxrqq0gsf[24] = 1.7320508075688772 * beta;
ktuiv5qnvo2.scaleFactor_llw0u2ae0v[0] = 0.0;
ktuiv5qnvo2.scaleFactor_llw0u2ae0v[1] = 1.0;
ktuiv5qnvo2.scaleFactor_llw0u2ae0v[24] = 0.0;
for (degreeP3 = 2; degreeP3 < 23; degreeP3++) {
    betaNew = degreeP3;
    flat = muDoubleScalarSqrt(2.0 * betaNew);
    lonNew = muDoubleScalarSqrt(2.0 * betaNew + 1.0);
    uTmp_idx_1 = muDoubleScalarSqrt(2.0 * betaNew - 1.0);
    fracSec = muDoubleScalarSqrt(2.0 * betaNew - 3.0);
    for (degreeP1 = 0; degreeP1 < degreeP3 + 1; degreeP1++) {
        if (degreeP3 == degreeP1) {
            ktuiv5qnvo2.P_ppxrqq0gsf[degreeP3 + 23 * degreeP1] = ktuiv5qnvo2.P_ppxrqq0gsf[((degreeP1 - 1) * 23 + degreeP3) - 1] * (lonNew / flat * beta);
            ktuiv5qnvo2.scaleFactor_llw0u2ae0v[degreeP3 + 23 * degreeP1] = 0.0;
        } else if (degreeP1 == 0) {
            ktuiv5qnvo2.P_ppxrqq0gsf[degreeP3] = (uTmp_idx_1 * A * ktuiv5qnvo2.P_ppxrqq0gsf[degreeP3 - 1] - (betaNew - 1.0) / fracSec * ktuiv5qnvo2.P_ppxrqq0gsf[degreeP3 - 2]) * (lonNew / betaNew);
            ktuiv5qnvo2.scaleFactor_llw0u2ae0v[degreeP3] = muDoubleScalarSqrt((betaNew + 1.0) * betaNew / 2.0);
        } else {
            pData_idx_3_e = degreeP1;
            ktuiv5qnvo2.P_ppxrqq0gsf[degreeP3 + 23 * degreeP1] = (ktuiv5qnvo2.P_ppxrqq0gsf[(23 * degreeP1 + degreeP3) - 1] * (uTmp_idx_1 * A) - muDoubleScalarSqrt((betaNew + pData_idx_3_e) - 1.0) * muDoubleScalarSqrt((betaNew - pData_idx_3_e) - 1.0) / fracSec * ktuiv5qnvo2.P_ppxrqq0gsf[(23 * degreeP1 + degreeP3) - 2]) * (lonNew / (muDoubleScalarSqrt(betaNew + pData_idx_3_e) * muDoubleScalarSqrt(betaNew - pData_idx_3_e)));
            ktuiv5qnvo2.scaleFactor_llw0u2ae0v[degreeP3 + 23 * degreeP1] = muDoubleScalarSqrt(((betaNew + pData_idx_3_e) + 1.0) * (betaNew - pData_idx_3_e));
        }
    }
}
uTmp_idx_1 = 6.378137E+6 / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p);
fracSec = uTmp_idx_1;
B = 1.0;
lonNew = 0.0;
flat = 0.0;
A = uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1;
beta = muDoubleScalarSqrt(A);
for (degreeP3 = 2; degreeP3 < 21; degreeP3++) {
    fracSec *= uTmp_idx_1;
    dUdrSumM = 0.0;
    dUdphiSumM = 0.0;
    dUdlambdaSumM = 0.0;
    for (degreeP1 = 0; degreeP1 < degreeP3 + 1; degreeP1++) {
        count = degreeP1 * 21 + degreeP3;
        pData_idx_3_e = degreeP1;
        betaNew = tmp_d[count] * cmlambda_p[degreeP1] + tmp_o[count] * smlambda_p[degreeP1];
        dUdrSumM += ktuiv5qnvo2.P_ppxrqq0gsf[23 * degreeP1 + degreeP3] * betaNew;
        dUdphiSumM += (ktuiv5qnvo2.P_ppxrqq0gsf[(degreeP1 + 1) * 23 + degreeP3] * ktuiv5qnvo2.scaleFactor_llw0u2ae0v[23 * degreeP1 + degreeP3] - pData_idx_2_p / beta * pData_idx_3_e * ktuiv5qnvo2.P_ppxrqq0gsf[23 * degreeP1 + degreeP3]) * betaNew;
        dUdlambdaSumM += ktuiv5qnvo2.P_ppxrqq0gsf[23 * degreeP1 + degreeP3] * pData_idx_3_e * (tmp_o[count] * cmlambda_p[degreeP1] - tmp_d[count] * smlambda_p[degreeP1]);
    }
    betaNew = degreeP3;
    B += dUdrSumM * fracSec * (betaNew + 1.0);
    lonNew += dUdphiSumM * fracSec;
    flat += dUdlambdaSumM * fracSec;
}
pData_idx_3_e = -3.986004418E+14 / (muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) * muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p)) * B;
betaNew = 3.986004418E+14 / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) * lonNew;
lonNew = 3.986004418E+14 / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) * flat;
uTmp_idx_1 = muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p) * muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p);
flat = 1.0 / muDoubleScalarSqrt((uTmp_idx_0 * uTmp_idx_0 + dUT2UT1 * dUT2UT1) + pData_idx_2_p * pData_idx_2_p);
pData_idx_0 = (flat * pData_idx_3_e - pData_idx_2_p / (uTmp_idx_1 * beta) * betaNew) * uTmp_idx_0 - lonNew / A * dUT2UT1;
dUT2UT1 = (flat * pData_idx_3_e - pData_idx_2_p / (uTmp_idx_1 * beta) * betaNew) * dUT2UT1 + lonNew / A * uTmp_idx_0;
pData_idx_2 = flat * pData_idx_3_e * pData_idx_2_p + beta / uTmp_idx_1 * betaNew;
A = muDoubleScalarAbs(muDoubleScalarAtan2(pData_idx_2_p, beta) - 1.5707963267948966);
if (A <= 2.2204460492503131E-16) {
    pData_idx_0 = 0.0;
    dUT2UT1 = 0.0;
    pData_idx_2 = flat * pData_idx_3_e * pData_idx_2_p;
}
ktuiv5qnvo2.k5pyx4h34r[0] = pData_idx_0;
ktuiv5qnvo2.k5pyx4h34r[1] = dUT2UT1;
ktuiv5qnvo2.k5pyx4h34r[2] = pData_idx_2;
if (mft3luzpor.Enablecustomgravitycalculation_CurrentSetting == 1) {
    ktuiv5qnvo2.eogfn30uhr[0] = mft3luzpor.Constant2_Value_ivjjl1g2hc[0];
    ktuiv5qnvo2.eogfn30uhr[1] = mft3luzpor.Constant2_Value_ivjjl1g2hc[1];
    ktuiv5qnvo2.eogfn30uhr[2] = mft3luzpor.Constant2_Value_ivjjl1g2hc[2];
} else {
    ktuiv5qnvo2.iflmhxihtj = ktuiv5qnvo2.iw0ifexhed[1] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.ppk3axevfl = ktuiv5qnvo2.iw0ifexhed[0] * mft3luzpor.Constant4_Value[1];
    ktuiv5qnvo2.phbnlihjtt = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.iw0ifexhed[2];
    ktuiv5qnvo2.mwkb1bzcoz = ktuiv5qnvo2.iw0ifexhed[0] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.mxcssvp11l = mft3luzpor.Constant4_Value[1] * ktuiv5qnvo2.iw0ifexhed[2];
    ktuiv5qnvo2.pctbxfhefd = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.iw0ifexhed[1];
    ktuiv5qnvo2.cgxi35wofk[0] = ktuiv5qnvo2.mxcssvp11l - ktuiv5qnvo2.iflmhxihtj;
    ktuiv5qnvo2.cgxi35wofk[1] = ktuiv5qnvo2.mwkb1bzcoz - ktuiv5qnvo2.phbnlihjtt;
    ktuiv5qnvo2.cgxi35wofk[2] = ktuiv5qnvo2.pctbxfhefd - ktuiv5qnvo2.ppk3axevfl;
    ktuiv5qnvo2.dosr5adono = ktuiv5qnvo2.guuurijbhk[1] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.dgfuaiwrj0 = ktuiv5qnvo2.guuurijbhk[0] * mft3luzpor.Constant4_Value[1];
    ktuiv5qnvo2.fvjnqoeq5i = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.guuurijbhk[2];
    ktuiv5qnvo2.grs2452co2 = ktuiv5qnvo2.guuurijbhk[0] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.j1uoheqohs = mft3luzpor.Constant4_Value[1] * ktuiv5qnvo2.guuurijbhk[2];
    ktuiv5qnvo2.lejvewwogv = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.guuurijbhk[1];
    ktuiv5qnvo2.h3dfililq4[0] = ktuiv5qnvo2.j1uoheqohs - ktuiv5qnvo2.dosr5adono;
    ktuiv5qnvo2.h3dfililq4[1] = ktuiv5qnvo2.grs2452co2 - ktuiv5qnvo2.fvjnqoeq5i;
    ktuiv5qnvo2.h3dfililq4[2] = ktuiv5qnvo2.lejvewwogv - ktuiv5qnvo2.dgfuaiwrj0;
    ktuiv5qnvo2.hri4unluzl = ktuiv5qnvo2.h3dfililq4[1] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.jml3fwaq4d = ktuiv5qnvo2.h3dfililq4[0] * mft3luzpor.Constant4_Value[1];
    ktuiv5qnvo2.majp0azwla = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.h3dfililq4[2];
    ktuiv5qnvo2.kdjio4xbjs = ktuiv5qnvo2.h3dfililq4[0] * mft3luzpor.Constant4_Value[2];
    ktuiv5qnvo2.ohgoypiays = mft3luzpor.Constant4_Value[1] * ktuiv5qnvo2.h3dfililq4[2];
    ktuiv5qnvo2.cite3hkote = mft3luzpor.Constant4_Value[0] * ktuiv5qnvo2.h3dfililq4[1];
    ktuiv5qnvo2.lsi2pw5qup[0] = ktuiv5qnvo2.ohgoypiays - ktuiv5qnvo2.hri4unluzl;
    ktuiv5qnvo2.lsi2pw5qup[1] = ktuiv5qnvo2.kdjio4xbjs - ktuiv5qnvo2.majp0azwla;
    ktuiv5qnvo2.lsi2pw5qup[2] = ktuiv5qnvo2.cite3hkote - ktuiv5qnvo2.jml3fwaq4d;
    uTmp_idx_0 = mft3luzpor.Gain_Gain * ktuiv5qnvo2.cgxi35wofk[0];
    ktuiv5qnvo2.mm5ncen4fe[0] = uTmp_idx_0;
    dUT2UT1 = mft3luzpor.Gain1_Gain * ktuiv5qnvo2.lsi2pw5qup[0];
    ktuiv5qnvo2.palvaexdep[0] = dUT2UT1;
    uTmp_idx_0 = (dUT2UT1 + uTmp_idx_0) + ktuiv5qnvo2.k5pyx4h34r[0];
    ktuiv5qnvo2.oahfmv23w2[0] = uTmp_idx_0;
    uTmp_idx_0 += mft3luzpor.Constant2_Value_ivjjl1g2hc[0];
    ktuiv5qnvo2.cvsz0qnfzh[0] = uTmp_idx_0;
    ktuiv5qnvo2.eogfn30uhr[0] = uTmp_idx_0;
    uTmp_idx_0 = mft3luzpor.Gain_Gain * ktuiv5qnvo2.cgxi35wofk[1];
    ktuiv5qnvo2.mm5ncen4fe[1] = uTmp_idx_0;
    dUT2UT1 = mft3luzpor.Gain1_Gain * ktuiv5qnvo2.lsi2pw5qup[1];
    ktuiv5qnvo2.palvaexdep[1] = dUT2UT1;
    uTmp_idx_0 = (dUT2UT1 + uTmp_idx_0) + ktuiv5qnvo2.k5pyx4h34r[1];
    ktuiv5qnvo2.oahfmv23w2[1] = uTmp_idx_0;
    uTmp_idx_0 += mft3luzpor.Constant2_Value_ivjjl1g2hc[1];
    ktuiv5qnvo2.cvsz0qnfzh[1] = uTmp_idx_0;
    ktuiv5qnvo2.eogfn30uhr[1] = uTmp_idx_0;
    uTmp_idx_0 = mft3luzpor.Gain_Gain * ktuiv5qnvo2.cgxi35wofk[2];
    ktuiv5qnvo2.mm5ncen4fe[2] = uTmp_idx_0;
    dUT2UT1 = mft3luzpor.Gain1_Gain * ktuiv5qnvo2.lsi2pw5qup[2];
    ktuiv5qnvo2.palvaexdep[2] = dUT2UT1;
    uTmp_idx_0 = (dUT2UT1 + uTmp_idx_0) + ktuiv5qnvo2.k5pyx4h34r[2];
    ktuiv5qnvo2.oahfmv23w2[2] = uTmp_idx_0;
    uTmp_idx_0 += mft3luzpor.Constant2_Value_ivjjl1g2hc[2];
    ktuiv5qnvo2.cvsz0qnfzh[2] = uTmp_idx_0;
    ktuiv5qnvo2.eogfn30uhr[2] = uTmp_idx_0;
}
if (%<(SLibCGIRIsSampleHit(2, 13))>) {
    ktuiv5qnvo2.oihj4tgj5b = %<(SLibCG_SE(LibGetTaskTime(2)))>;
    ktuiv5qnvo2.nzcogw5ypb = ktuiv5qnvo2.oihj4tgj5b / mft3luzpor.Constant_Value_h3m33ozfdb;
    ktuiv5qnvo2.bfzhqsof2q = ktuiv5qnvo2.nzcogw5ypb + rtP__initCond2f2asbCubeSatModelData_sldd_.simStartDate.JD;
    dUT2UT1 = ktuiv5qnvo2.bfzhqsof2q;
    uTmp_idx_0 = dUT2UT1 - 0.5;
    if (dUT2UT1 < 2.4149925E+6) {
        dUT2UT1 = 1.0;
        uTmp_idx_0 = 0.0;
    } else if (dUT2UT1 > 2.4698085E+6) {
        dUT2UT1 = 1713.0;
        uTmp_idx_0 = 1.0;
    } else {
        dUT2UT1 = muDoubleScalarFloor(((muDoubleScalarFloor(uTmp_idx_0) + 0.5) - 2.4149925E+6) / 32.0) + 1.0;
        if (muDoubleScalarFloor(uTmp_idx_0) + 0.5 == 2.4698085E+6) {
            dUT2UT1--;
        }
        uTmp_idx_0 = (((muDoubleScalarFloor(uTmp_idx_0) + 0.5) - ((dUT2UT1 - 1.0) * 32.0 + 2.4149925E+6)) + (uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0))) / 32.0;
    }
    if (muDoubleScalarIsNaN(dUT2UT1) || muDoubleScalarIsInf(dUT2UT1)) {
        pData_idx_0 = 0.0;
    } else {
        pData_idx_0 = muDoubleScalarRem(dUT2UT1, 4.294967296E+9);
    }
    degreeP1 = (pData_idx_0 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_0 : (int32_T)(uint32_T)pData_idx_0) - 1;
    memcpy(&factor_dS[0], &tmp[degreeP1 * 66], 66U * sizeof(real_T));
    posCoeff[0] = 1.0;
    posCoeff[1] = (muDoubleScalarMod(2.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0;
    for (degreeP3 = 0; degreeP3 < 9; degreeP3++) {
        posCoeff[degreeP3 + 2] = ((muDoubleScalarMod(2.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0) * 2.0 * posCoeff[degreeP3 + 1] - posCoeff[degreeP3];
    }
    uTmp_idx_2 = 0.0;
    month = 0.0;
    bessDate = 0.0;
    pData_idx_0 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_0) || muDoubleScalarIsInf(pData_idx_0)) {
        pData_idx_0 = 0.0;
    } else {
        pData_idx_0 = muDoubleScalarRem(pData_idx_0, 4.294967296E+9);
    }
    pData_idx_1 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_1) || muDoubleScalarIsInf(pData_idx_1)) {
        pData_idx_1 = 0.0;
    } else {
        pData_idx_1 = muDoubleScalarRem(pData_idx_1, 4.294967296E+9);
    }
    pData_idx_2 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_2) || muDoubleScalarIsInf(pData_idx_2)) {
        pData_idx_2 = 0.0;
    } else {
        pData_idx_2 = muDoubleScalarRem(pData_idx_2, 4.294967296E+9);
    }
    for (degreeP3 = 0; degreeP3 < 11; degreeP3++) {
        pData_idx_0_c = posCoeff[degreeP3];
        uTmp_idx_2 += factor_dS[(pData_idx_0 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_0 : (int32_T)(uint32_T)pData_idx_0) * 11 * 3 + degreeP3] * pData_idx_0_c;
        month += factor_dS[((pData_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_1 : (int32_T)(uint32_T)pData_idx_1) * 11 * 3 + degreeP3) + 11] * pData_idx_0_c;
        bessDate += factor_dS[((pData_idx_2 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_2 : (int32_T)(uint32_T)pData_idx_2) * 11 * 3 + degreeP3) + 22] * pData_idx_0_c;
    }
    cbuff1 = &tmp_p[degreeP1 * 78];
    cbuff2 = &tmp_e[degreeP1 * 312];
    posCoeff_p[0] = 1.0;
    posCoeff_p[1] = (muDoubleScalarMod(2.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0;
    for (degreeP3 = 0; degreeP3 < 11; degreeP3++) {
        posCoeff_p[degreeP3 + 2] = ((muDoubleScalarMod(2.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0) * 2.0 * posCoeff_p[degreeP3 + 1] - posCoeff_p[degreeP3];
    }
    hour = 0.0;
    min = 0.0;
    sec = 0.0;
    pData_idx_0 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_0) || muDoubleScalarIsInf(pData_idx_0)) {
        pData_idx_0 = 0.0;
    } else {
        pData_idx_0 = muDoubleScalarRem(pData_idx_0, 4.294967296E+9);
    }
    pData_idx_1 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_1) || muDoubleScalarIsInf(pData_idx_1)) {
        pData_idx_1 = 0.0;
    } else {
        pData_idx_1 = muDoubleScalarRem(pData_idx_1, 4.294967296E+9);
    }
    pData_idx_2 = muDoubleScalarFloor(2.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_2) || muDoubleScalarIsInf(pData_idx_2)) {
        pData_idx_2 = 0.0;
    } else {
        pData_idx_2 = muDoubleScalarRem(pData_idx_2, 4.294967296E+9);
    }
    for (degreeP3 = 0; degreeP3 < 13; degreeP3++) {
        pData_idx_0_c = posCoeff_p[degreeP3];
        hour += cbuff1[(pData_idx_0 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_0 : (int32_T)(uint32_T)pData_idx_0) * 13 * 3 + degreeP3] * pData_idx_0_c;
        min += cbuff1[((pData_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_1 : (int32_T)(uint32_T)pData_idx_1) * 13 * 3 + degreeP3) + 13] * pData_idx_0_c;
        sec += cbuff1[((pData_idx_2 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_2 : (int32_T)(uint32_T)pData_idx_2) * 13 * 3 + degreeP3) + 26] * pData_idx_0_c;
    }
    posCoeff_e[0] = 1.0;
    posCoeff_e[1] = (muDoubleScalarMod(8.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0;
    for (degreeP3 = 0; degreeP3 < 11; degreeP3++) {
        posCoeff_e[degreeP3 + 2] = ((muDoubleScalarMod(8.0 * uTmp_idx_0, 1.0) + muDoubleScalarFloor(uTmp_idx_0)) * 2.0 - 1.0) * 2.0 * posCoeff_e[degreeP3 + 1] - posCoeff_e[degreeP3];
    }
    pData_idx_1_c = 0.0;
    dUT2UT1 = 0.0;
    pData_idx_2_p = 0.0;
    pData_idx_0 = muDoubleScalarFloor(8.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_0) || muDoubleScalarIsInf(pData_idx_0)) {
        pData_idx_0 = 0.0;
    } else {
        pData_idx_0 = muDoubleScalarRem(pData_idx_0, 4.294967296E+9);
    }
    pData_idx_1 = muDoubleScalarFloor(8.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_1) || muDoubleScalarIsInf(pData_idx_1)) {
        pData_idx_1 = 0.0;
    } else {
        pData_idx_1 = muDoubleScalarRem(pData_idx_1, 4.294967296E+9);
    }
    pData_idx_2 = muDoubleScalarFloor(8.0 * uTmp_idx_0 - muDoubleScalarFloor(uTmp_idx_0));
    if (muDoubleScalarIsNaN(pData_idx_2) || muDoubleScalarIsInf(pData_idx_2)) {
        pData_idx_2 = 0.0;
    } else {
        pData_idx_2 = muDoubleScalarRem(pData_idx_2, 4.294967296E+9);
    }
    for (degreeP3 = 0; degreeP3 < 13; degreeP3++) {
        pData_idx_0_c = posCoeff_e[degreeP3];
        pData_idx_1_c += cbuff2[(pData_idx_0 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_0 : (int32_T)(uint32_T)pData_idx_0) * 13 * 3 + degreeP3] * pData_idx_0_c;
        dUT2UT1 += cbuff2[((pData_idx_1 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_1 : (int32_T)(uint32_T)pData_idx_1) * 13 * 3 + degreeP3) + 13] * pData_idx_0_c;
        pData_idx_2_p += cbuff2[((pData_idx_2 < 0.0 ? -(int32_T)(uint32_T)-pData_idx_2 : (int32_T)(uint32_T)pData_idx_2) * 13 * 3 + degreeP3) + 26] * pData_idx_0_c;
    }
    uTmp_idx_0 = pData_idx_1_c * 0.012150584270571547;
    dUT2UT1 *= 0.012150584270571547;
    pData_idx_2_p *= 0.012150584270571547;
    uTmp_idx_0 = hour - uTmp_idx_0;
    dUT2UT1 = min - dUT2UT1;
    pData_idx_2_p = sec - pData_idx_2_p;
    uTmp_idx_0 = uTmp_idx_2 - uTmp_idx_0;
    dUT2UT1 = month - dUT2UT1;
    pData_idx_2_p = bessDate - pData_idx_2_p;
    ktuiv5qnvo2.cjqdelmxrd[0] = uTmp_idx_0;
    ktuiv5qnvo2.cjqdelmxrd[1] = dUT2UT1;
    ktuiv5qnvo2.cjqdelmxrd[2] = pData_idx_2_p;
    /* Unit Conversion - from: km to: m
 Expression: output = (1000*input) + (0) */
    ktuiv5qnvo2.mnpqjp0stq[0] = 1000.0 * ktuiv5qnvo2.cjqdelmxrd[0];
    ktuiv5qnvo2.mnpqjp0stq[1] = 1000.0 * ktuiv5qnvo2.cjqdelmxrd[1];
    ktuiv5qnvo2.mnpqjp0stq[2] = 1000.0 * ktuiv5qnvo2.cjqdelmxrd[2];
}
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    ktuiv5qnvo2.p4lna1nfxn = mft3luzpor.Mode_Value;
}
%<tlcOutputsFcnOfS13B1>\
if ((int32_T)ktuiv5qnvo2.p4lna1nfxn == 3) {
    uTmp_idx_0 = ktuiv5qnvo2.hpgqjxggx1;
} else {
    uTmp_idx_0 = ktuiv5qnvo2.p4lna1nfxn;
}
ktuiv5qnvo2.cfirve12h4 = uTmp_idx_0;
if (%<(SLibCGIRIsSampleHit(2, 13))>) {
    ktuiv5qnvo2.olejvz5ms3 = dzu2rlzxmw1.f4rmvpbdz3;
    ktuiv5qnvo2.lofowbcjhw[0] = dzu2rlzxmw1.fh5ftphg0m[0];
    ktuiv5qnvo2.mmczvyrqoa[0] = dzu2rlzxmw1.kbhqicyk4l[0];
    ktuiv5qnvo2.ofjqai2vtj[0] = dzu2rlzxmw1.b4smxiotvi[0];
    ktuiv5qnvo2.avccdpjuuu[0] = dzu2rlzxmw1.ogqy5tyygw[0];
    ktuiv5qnvo2.lofowbcjhw[1] = dzu2rlzxmw1.fh5ftphg0m[1];
    ktuiv5qnvo2.mmczvyrqoa[1] = dzu2rlzxmw1.kbhqicyk4l[1];
    ktuiv5qnvo2.ofjqai2vtj[1] = dzu2rlzxmw1.b4smxiotvi[1];
    ktuiv5qnvo2.avccdpjuuu[1] = dzu2rlzxmw1.ogqy5tyygw[1];
    ktuiv5qnvo2.lofowbcjhw[2] = dzu2rlzxmw1.fh5ftphg0m[2];
    ktuiv5qnvo2.mmczvyrqoa[2] = dzu2rlzxmw1.kbhqicyk4l[2];
    ktuiv5qnvo2.ofjqai2vtj[2] = dzu2rlzxmw1.b4smxiotvi[2];
    ktuiv5qnvo2.avccdpjuuu[2] = dzu2rlzxmw1.ogqy5tyygw[2];
    ktuiv5qnvo2.isdgbq2qbi[0] = dzu2rlzxmw1.j14yp52ocn[0];
    ktuiv5qnvo2.k5v3ywgyeu[0] = dzu2rlzxmw1.c0bj1oc2wt[0];
    ktuiv5qnvo2.isdgbq2qbi[1] = dzu2rlzxmw1.j14yp52ocn[1];
    ktuiv5qnvo2.k5v3ywgyeu[1] = dzu2rlzxmw1.c0bj1oc2wt[1];
    ktuiv5qnvo2.isdgbq2qbi[2] = dzu2rlzxmw1.j14yp52ocn[2];
    ktuiv5qnvo2.k5v3ywgyeu[2] = dzu2rlzxmw1.c0bj1oc2wt[2];
    ktuiv5qnvo2.isdgbq2qbi[3] = dzu2rlzxmw1.j14yp52ocn[3];
    ktuiv5qnvo2.k5v3ywgyeu[3] = dzu2rlzxmw1.c0bj1oc2wt[3];
    ktuiv5qnvo2.o0phskaect[0] = dzu2rlzxmw1.ew4njikxui[0];
    ktuiv5qnvo2.ltgv1sncma[0] = dzu2rlzxmw1.mi2xldk4lh[0];
    ktuiv5qnvo2.o0phskaect[1] = dzu2rlzxmw1.ew4njikxui[1];
    ktuiv5qnvo2.ltgv1sncma[1] = dzu2rlzxmw1.mi2xldk4lh[1];
    ktuiv5qnvo2.o0phskaect[2] = dzu2rlzxmw1.ew4njikxui[2];
    ktuiv5qnvo2.ltgv1sncma[2] = dzu2rlzxmw1.mi2xldk4lh[2];
    ktuiv5qnvo2.nuw0jilmjc = dzu2rlzxmw1.ke5boprrrr;
    ktuiv5qnvo2.fyddslrz1v = dzu2rlzxmw1.fzzym3qtt1;
%<tlcOutputsFcnOfS13B2>\
    ktuiv5qnvo2.gwsz2xugqx.ACSOut = ktuiv5qnvo2.f1hmp1ahzx;
    ktuiv5qnvo2.keljnw1iuf[0] = mft3luzpor.Gain_Gain_at23p32wum * ktuiv5qnvo2.gwsz2xugqx.ACSOut.TorqueCmds[0];
    ktuiv5qnvo2.keljnw1iuf[1] = mft3luzpor.Gain_Gain_at23p32wum * ktuiv5qnvo2.gwsz2xugqx.ACSOut.TorqueCmds[1];
    ktuiv5qnvo2.keljnw1iuf[2] = mft3luzpor.Gain_Gain_at23p32wum * ktuiv5qnvo2.gwsz2xugqx.ACSOut.TorqueCmds[2];
}
ktuiv5qnvo2.arexm4bnfq = ktuiv5qnvo2.n2legnbe3a + mft3luzpor.JDtoMJD_Bias;
ktuiv5qnvo2.g3xiaqp4s0 = ktuiv5qnvo2.mcbegoyojd + ktuiv5qnvo2.arexm4bnfq;
ktuiv5qnvo2.jvrvzi5ckh = ktuiv5qnvo2.g3xiaqp4s0 + mft3luzpor.Bias1_Bias_n4pesdjpoq;
ktuiv5qnvo2.pxw02tdykw = ktuiv5qnvo2.jvrvzi5ckh / mft3luzpor.const5_Value;
ktuiv5qnvo2.mmocesmebd = mft3luzpor.Gain_Gain_e1lml00aw5 * ktuiv5qnvo2.pxw02tdykw;
ktuiv5qnvo2.immh3g3gem = ktuiv5qnvo2.mmocesmebd / mft3luzpor.const1_Value;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.aoli5ykwre = 0.017453292519943295 * ktuiv5qnvo2.immh3g3gem;
for (degreeP1 = 0; degreeP1 < 11715; degreeP1++) {
    ktuiv5qnvo2.mjdData[degreeP1] = (uint16_T)(degreeP1 + 48622);
    ktuiv5qnvo2.ut1utcData[degreeP1] = tmp_g[degreeP1];
}
pmData = &tmp_j[0];
dxyData = &tmp_f[0];
uTmp_idx_0 = ktuiv5qnvo2.arexm4bnfq;
if (uTmp_idx_0 >= (real_T)ktuiv5qnvo2.mjdData[11714] + 1.0) {
    bessDate = (uTmp_idx_0 - 51544.03) / 365.2422 + 2000.0;
    dUT2UT1 = 6.2831853071795862 * bessDate;
    dUT2UT1 = muDoubleScalarSin(dUT2UT1);
    uTmp_idx_2 = 6.2831853071795862 * bessDate;
    uTmp_idx_2 = muDoubleScalarCos(uTmp_idx_2);
    month = 12.566370614359172 * bessDate;
    month = muDoubleScalarSin(month);
    bessDate *= 12.566370614359172;
    bessDate = muDoubleScalarCos(bessDate);
    dUT2UT1 = ((0.022 * dUT2UT1 - 0.012 * uTmp_idx_2) - 0.006 * month) + 0.007 * bessDate;
    ktuiv5qnvo2.nvdtttd1ax = (0.5382 - (uTmp_idx_0 - 57801.0) * 0.00124) - dUT2UT1;
    dUT2UT1 = ktuiv5qnvo2.nvdtttd1ax;
    uTmp_idx_0 = muDoubleScalarAbs(dUT2UT1);
    if (uTmp_idx_0 > 0.9) {
        dUT2UT1 = ktuiv5qnvo2.nvdtttd1ax;
        dUT2UT1 = muDoubleScalarSign(dUT2UT1);
        ktuiv5qnvo2.nvdtttd1ax = dUT2UT1 * 0.9;
    }
} else if (uTmp_idx_0 < ktuiv5qnvo2.mjdData[0]) {
    ktuiv5qnvo2.nvdtttd1ax = ktuiv5qnvo2.ut1utcData[0];
} else if ((uTmp_idx_0 < (real_T)ktuiv5qnvo2.mjdData[11714] + 1.0) && (uTmp_idx_0 >= ktuiv5qnvo2.mjdData[11714])) {
    ktuiv5qnvo2.nvdtttd1ax = ktuiv5qnvo2.ut1utcData[11714];
} else {
    for (degreeP1 = 0; degreeP1 < 11715; degreeP1++) {
        ktuiv5qnvo2.x[degreeP1] = (uTmp_idx_0 < ktuiv5qnvo2.mjdData[degreeP1]);
    }
    count = 0;
    degreeP3 = 1;
    guard1 = false;
    while ((!guard1) && (degreeP3 - 1 < 11715)) {
        if (ktuiv5qnvo2.x[degreeP3 - 1]) {
            count++;
            ktuiv5qnvo2.ii_data[count - 1] = degreeP3;
            if (count >= 11715) {
                guard1 = true;
            } else {
                degreeP3++;
            }
        } else {
            degreeP3++;
        }
    }
    guard1 = (count < 1);
    if (guard1) {
        count = 0;
    }
    degreeP1 = count;
    if (degreeP1 - 1 >= 0) {
        memcpy(&ktuiv5qnvo2.idx_data[0], &ktuiv5qnvo2.ii_data[0], (uint32_T)degreeP1 * sizeof(int32_T));
    }
    ktuiv5qnvo2.nvdtttd1ax = ktuiv5qnvo2.ut1utcData[ktuiv5qnvo2.idx_data[0] - 2];
}
uTmp_idx_0 = ktuiv5qnvo2.arexm4bnfq;
if (uTmp_idx_0 >= (real_T)ktuiv5qnvo2.mjdData[11714] + 1.0) {
    ktuiv5qnvo2.ne5zkzytxo[0] = pmData[11714];
    ktuiv5qnvo2.ne5zkzytxo[1] = pmData[23429];
} else if (uTmp_idx_0 < ktuiv5qnvo2.mjdData[0]) {
    ktuiv5qnvo2.ne5zkzytxo[0] = pmData[0];
    ktuiv5qnvo2.ne5zkzytxo[1] = pmData[11715];
} else if ((uTmp_idx_0 < (real_T)ktuiv5qnvo2.mjdData[11714] + 1.0) && (uTmp_idx_0 >= ktuiv5qnvo2.mjdData[11714])) {
    ktuiv5qnvo2.ne5zkzytxo[0] = pmData[11714];
    ktuiv5qnvo2.ne5zkzytxo[1] = pmData[23429];
} else {
    for (degreeP1 = 0; degreeP1 < 11715; degreeP1++) {
        ktuiv5qnvo2.x[degreeP1] = (uTmp_idx_0 < ktuiv5qnvo2.mjdData[degreeP1]);
    }
    count = 0;
    degreeP3 = 1;
    guard1 = false;
    while ((!guard1) && (degreeP3 - 1 < 11715)) {
        if (ktuiv5qnvo2.x[degreeP3 - 1]) {
            count++;
            ktuiv5qnvo2.ii_data[count - 1] = degreeP3;
            if (count >= 11715) {
                guard1 = true;
            } else {
                degreeP3++;
            }
        } else {
            degreeP3++;
        }
    }
    guard1 = (count < 1);
    if (guard1) {
        count = 0;
    }
    degreeP1 = count;
    if (degreeP1 - 1 >= 0) {
        memcpy(&ktuiv5qnvo2.idx_data[0], &ktuiv5qnvo2.ii_data[0], (uint32_T)degreeP1 * sizeof(int32_T));
    }
    ktuiv5qnvo2.ne5zkzytxo[0] = pmData[ktuiv5qnvo2.idx_data[0] - 2];
    ktuiv5qnvo2.ne5zkzytxo[1] = pmData[(int32_T)(((real_T)ktuiv5qnvo2.idx_data[0] + 11715.0) - 1.0) - 1];
}
uTmp_idx_0 = ktuiv5qnvo2.ne5zkzytxo[0];
ktuiv5qnvo2.ne5zkzytxo[0] = uTmp_idx_0 * 4.84813681109536E-6;
uTmp_idx_0 = ktuiv5qnvo2.ne5zkzytxo[1];
ktuiv5qnvo2.ne5zkzytxo[1] = uTmp_idx_0 * 4.84813681109536E-6;
uTmp_idx_0 = ktuiv5qnvo2.arexm4bnfq;
if (uTmp_idx_0 >= (real_T)ktuiv5qnvo2.mjdData[11411] + 1.0) {
    ktuiv5qnvo2.mdl4epmwtp[0] = dxyData[11411];
    ktuiv5qnvo2.mdl4epmwtp[1] = dxyData[22823];
} else if (uTmp_idx_0 < ktuiv5qnvo2.mjdData[0]) {
    ktuiv5qnvo2.mdl4epmwtp[0] = dxyData[0];
    ktuiv5qnvo2.mdl4epmwtp[1] = dxyData[11412];
} else if ((uTmp_idx_0 < (real_T)ktuiv5qnvo2.mjdData[11411] + 1.0) && (uTmp_idx_0 >= ktuiv5qnvo2.mjdData[11411])) {
    ktuiv5qnvo2.mdl4epmwtp[0] = dxyData[11411];
    ktuiv5qnvo2.mdl4epmwtp[1] = dxyData[22823];
} else {
    for (degreeP1 = 0; degreeP1 < 11715; degreeP1++) {
        ktuiv5qnvo2.x[degreeP1] = (uTmp_idx_0 < ktuiv5qnvo2.mjdData[degreeP1]);
    }
    count = 0;
    degreeP3 = 1;
    guard1 = false;
    while ((!guard1) && (degreeP3 - 1 < 11715)) {
        if (ktuiv5qnvo2.x[degreeP3 - 1]) {
            count++;
            ktuiv5qnvo2.ii_data[count - 1] = degreeP3;
            if (count >= 11715) {
                guard1 = true;
            } else {
                degreeP3++;
            }
        } else {
            degreeP3++;
        }
    }
    guard1 = (count < 1);
    if (guard1) {
        count = 0;
    }
    degreeP1 = count;
    if (degreeP1 - 1 >= 0) {
        memcpy(&ktuiv5qnvo2.idx_data[0], &ktuiv5qnvo2.ii_data[0], (uint32_T)degreeP1 * sizeof(int32_T));
    }
    ktuiv5qnvo2.mdl4epmwtp[0] = dxyData[ktuiv5qnvo2.idx_data[0] - 2];
    ktuiv5qnvo2.mdl4epmwtp[1] = dxyData[(int32_T)(((real_T)ktuiv5qnvo2.idx_data[0] + 11412.0) - 1.0) - 1];
}
ktuiv5qnvo2.hmkcj2scq1[0] = ktuiv5qnvo2.aoli5ykwre;
uTmp_idx_0 = ktuiv5qnvo2.mdl4epmwtp[0];
ktuiv5qnvo2.mdl4epmwtp[0] = uTmp_idx_0 * 4.8481368110953594E-9;
uTmp_idx_0 = mft3luzpor.Gain1_Gain_p1otunaeie * ktuiv5qnvo2.ne5zkzytxo[0];
ktuiv5qnvo2.kz1e5xt1mi[0] = uTmp_idx_0;
ktuiv5qnvo2.hmkcj2scq1[1] = uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.mdl4epmwtp[1];
ktuiv5qnvo2.mdl4epmwtp[1] = uTmp_idx_0 * 4.8481368110953594E-9;
uTmp_idx_0 = mft3luzpor.Gain1_Gain_p1otunaeie * ktuiv5qnvo2.ne5zkzytxo[1];
ktuiv5qnvo2.kz1e5xt1mi[1] = uTmp_idx_0;
ktuiv5qnvo2.hmkcj2scq1[2] = uTmp_idx_0;
muDoubleScalarSinCos(ktuiv5qnvo2.hmkcj2scq1[0], &ktuiv5qnvo2.dohvz5kjpb[0], &ktuiv5qnvo2.kgkakkzugv[0]);
muDoubleScalarSinCos(ktuiv5qnvo2.hmkcj2scq1[1], &ktuiv5qnvo2.dohvz5kjpb[1], &ktuiv5qnvo2.kgkakkzugv[1]);
muDoubleScalarSinCos(ktuiv5qnvo2.hmkcj2scq1[2], &ktuiv5qnvo2.dohvz5kjpb[2], &ktuiv5qnvo2.kgkakkzugv[2]);
ktuiv5qnvo2.pq31ryxzkt[0] = ktuiv5qnvo2.kgkakkzugv[0] * ktuiv5qnvo2.kgkakkzugv[1];
ktuiv5qnvo2.pq31ryxzkt[1] = ktuiv5qnvo2.dohvz5kjpb[1] * ktuiv5qnvo2.dohvz5kjpb[2] * ktuiv5qnvo2.kgkakkzugv[0] - ktuiv5qnvo2.dohvz5kjpb[0] * ktuiv5qnvo2.kgkakkzugv[2];
ktuiv5qnvo2.pq31ryxzkt[2] = ktuiv5qnvo2.dohvz5kjpb[1] * ktuiv5qnvo2.kgkakkzugv[2] * ktuiv5qnvo2.kgkakkzugv[0] + ktuiv5qnvo2.dohvz5kjpb[0] * ktuiv5qnvo2.dohvz5kjpb[2];
ktuiv5qnvo2.pq31ryxzkt[3] = ktuiv5qnvo2.dohvz5kjpb[0] * ktuiv5qnvo2.kgkakkzugv[1];
ktuiv5qnvo2.pq31ryxzkt[4] = ktuiv5qnvo2.dohvz5kjpb[1] * ktuiv5qnvo2.dohvz5kjpb[2] * ktuiv5qnvo2.dohvz5kjpb[0] + ktuiv5qnvo2.kgkakkzugv[0] * ktuiv5qnvo2.kgkakkzugv[2];
ktuiv5qnvo2.pq31ryxzkt[5] = ktuiv5qnvo2.dohvz5kjpb[1] * ktuiv5qnvo2.kgkakkzugv[2] * ktuiv5qnvo2.dohvz5kjpb[0] - ktuiv5qnvo2.kgkakkzugv[0] * ktuiv5qnvo2.dohvz5kjpb[2];
ktuiv5qnvo2.pq31ryxzkt[6] = -ktuiv5qnvo2.dohvz5kjpb[1];
ktuiv5qnvo2.pq31ryxzkt[7] = ktuiv5qnvo2.kgkakkzugv[1] * ktuiv5qnvo2.dohvz5kjpb[2];
ktuiv5qnvo2.pq31ryxzkt[8] = ktuiv5qnvo2.kgkakkzugv[1] * ktuiv5qnvo2.kgkakkzugv[2];
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    ktuiv5qnvo2.d23dwgusi3[3 * degreeP3] = ktuiv5qnvo2.pq31ryxzkt[degreeP3];
    ktuiv5qnvo2.d23dwgusi3[3 * degreeP3 + 1] = ktuiv5qnvo2.pq31ryxzkt[degreeP3 + 3];
    ktuiv5qnvo2.d23dwgusi3[3 * degreeP3 + 2] = ktuiv5qnvo2.pq31ryxzkt[degreeP3 + 6];
}
memcpy(&pData_p[0], &ktuiv5qnvo2.d23dwgusi3[0], 9U * sizeof(real_T));
uTmp_idx_2 = ktuiv5qnvo2.guuurijbhk[0];
month = ktuiv5qnvo2.guuurijbhk[1];
bessDate = ktuiv5qnvo2.guuurijbhk[2];
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    hour = pData_p[degreeP3] * uTmp_idx_2;
    hour += pData_p[degreeP3 + 3] * month;
    hour += pData_p[degreeP3 + 6] * bessDate;
    ktuiv5qnvo2.knslt5kuoa[degreeP3] = hour;
}
ktuiv5qnvo2.d22qrn1hnr = mft3luzpor.omega_Value[0] * ktuiv5qnvo2.knslt5kuoa[1];
ktuiv5qnvo2.a11lf4vi4u = mft3luzpor.omega_Value[1] * ktuiv5qnvo2.knslt5kuoa[2];
ktuiv5qnvo2.gflxpbnpun = ktuiv5qnvo2.knslt5kuoa[0] * mft3luzpor.omega_Value[2];
ktuiv5qnvo2.ap5rxew0o5 = mft3luzpor.omega_Value[0] * ktuiv5qnvo2.knslt5kuoa[2];
ktuiv5qnvo2.nlyrlvmuza = ktuiv5qnvo2.knslt5kuoa[0] * mft3luzpor.omega_Value[1];
ktuiv5qnvo2.e3kqda23m4 = ktuiv5qnvo2.knslt5kuoa[1] * mft3luzpor.omega_Value[2];
ktuiv5qnvo2.ies4pk2yfw[0] = ktuiv5qnvo2.a11lf4vi4u - ktuiv5qnvo2.e3kqda23m4;
ktuiv5qnvo2.ies4pk2yfw[1] = ktuiv5qnvo2.gflxpbnpun - ktuiv5qnvo2.ap5rxew0o5;
ktuiv5qnvo2.ies4pk2yfw[2] = ktuiv5qnvo2.d22qrn1hnr - ktuiv5qnvo2.nlyrlvmuza;
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        dzu2rlzxmw1.cklzsbe4ur = (ktuiv5qnvo2.arexm4bnfq < mft3luzpor.CheckdeltaT_minmax[0]);
        dzu2rlzxmw1.ehgalwj0ga = (ktuiv5qnvo2.arexm4bnfq > mft3luzpor.CheckdeltaT_minmax[1]);
    }
    ktuiv5qnvo2.a45gkht3ip = dzu2rlzxmw1.cklzsbe4ur;
    ktuiv5qnvo2.cyyo2qtv2q = dzu2rlzxmw1.ehgalwj0ga;
    rtPrevAction = dzu2rlzxmw1.np350cmfgt;
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        rtAction = (int8_T)!(mft3luzpor.JulianDateConversion_month <= 2.0);
        dzu2rlzxmw1.np350cmfgt = rtAction;
    } else {
        rtAction = dzu2rlzxmw1.np350cmfgt;
    }
    if (rtPrevAction != rtAction) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        switch (rtPrevAction) {
          case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("p0jh2umvpc",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("p0jh2umvpc", ["%<_modelSS>"], 1, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
            break;
          case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("coytytvmiv",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("coytytvmiv", ["%<_modelSS>"], 2, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
            break;
        }
    }
    if (rtAction == 0) {
        if (rtPrevAction != 0) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("l152oexjzd",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("l152oexjzd", ["%<_modelSS>"], 1, 0, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        }
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Output",0)
%if SLibCG_SystemFcnArgAccessed("atygzznv2x",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("atygzznv2x", ["%<_modelSS>", "mft3luzpor.R_woPM_year", "mft3luzpor.JulianDateConversion_month", "&ktuiv5qnvo2.pvxhwu0umn", "&ktuiv5qnvo2.isfjpv1njr", "&mft3luzpor.atygzznv2xe"], 1, 0, 6, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.atygzznv2xe.hu5jjqenrx);
        }
    } else {
        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("drjcdi2dvf",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("drjcdi2dvf", ["%<_modelSS>"], 2, 0, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        }
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",0)
%if SLibCG_SystemFcnArgAccessed("enr11s3r13",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("enr11s3r13", ["%<_modelSS>", "mft3luzpor.R_woPM_year", "mft3luzpor.JulianDateConversion_month", "&ktuiv5qnvo2.pvxhwu0umn", "&ktuiv5qnvo2.isfjpv1njr"], 2, 0, 6, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.enr11s3r13x.bvo4sqc1xt);
        }
    }
    ktuiv5qnvo2.n43tinwxb0 = ktuiv5qnvo2.pvxhwu0umn + mft3luzpor.BiasYear_Bias;
    ktuiv5qnvo2.ateb3o4u3o = mft3luzpor.Gain_Gain_axnikwuifz * ktuiv5qnvo2.n43tinwxb0;
    ktuiv5qnvo2.injhyqql3b = muDoubleScalarFloor(ktuiv5qnvo2.ateb3o4u3o);
    ktuiv5qnvo2.aabsnhj2kd = ktuiv5qnvo2.isfjpv1njr + mft3luzpor.Bias1_Bias_hy5y5oev5q;
    ktuiv5qnvo2.ckzly5qc25 = mft3luzpor.Gain1_Gain_glxd1bjwm2 * ktuiv5qnvo2.aabsnhj2kd;
    ktuiv5qnvo2.oeljweklyi = muDoubleScalarFloor(ktuiv5qnvo2.ckzly5qc25);
    ktuiv5qnvo2.mndkwluuum = ktuiv5qnvo2.injhyqql3b + ktuiv5qnvo2.oeljweklyi;
    ktuiv5qnvo2.jar5eedtpz = ktuiv5qnvo2.mndkwluuum + mft3luzpor.Bias2_Bias;
    ktuiv5qnvo2.hdywpwyat1 = mft3luzpor.Gain2_Gain_pbmlqtpwak * ktuiv5qnvo2.pvxhwu0umn;
    ktuiv5qnvo2.aanx350f2q = muDoubleScalarFloor(ktuiv5qnvo2.hdywpwyat1);
    ktuiv5qnvo2.d30ygafl5i = ktuiv5qnvo2.jar5eedtpz - ktuiv5qnvo2.aanx350f2q;
    ktuiv5qnvo2.ndm1yr2ohb = mft3luzpor.Gain3_Gain_ghaygwk02d * ktuiv5qnvo2.aanx350f2q;
    ktuiv5qnvo2.hg513vryww = muDoubleScalarFloor(ktuiv5qnvo2.ndm1yr2ohb);
    ktuiv5qnvo2.du2jbzkyit = ktuiv5qnvo2.d30ygafl5i + ktuiv5qnvo2.hg513vryww;
}
ktuiv5qnvo2.ixxvmodmwy[0] = mft3luzpor.sec2_Value[0];
ktuiv5qnvo2.ixxvmodmwy[1] = mft3luzpor.sec2_Value[1];
ktuiv5qnvo2.ixxvmodmwy[2] = mft3luzpor.sec2_Value[2];
ktuiv5qnvo2.ixxvmodmwy[3] = mft3luzpor.sec2_Value[3];
ktuiv5qnvo2.ixxvmodmwy[(int32_T)mft3luzpor.Index_Value - 1] = ktuiv5qnvo2.arexm4bnfq;
ktuiv5qnvo2.a1ypqmp2wu[0] = mft3luzpor.JulianDateConversion_day + ktuiv5qnvo2.ixxvmodmwy[0];
ktuiv5qnvo2.a1ypqmp2wu[1] = mft3luzpor.R_woPM_hour + ktuiv5qnvo2.ixxvmodmwy[1];
ktuiv5qnvo2.a1ypqmp2wu[2] = mft3luzpor.R_woPM_min + ktuiv5qnvo2.ixxvmodmwy[2];
ktuiv5qnvo2.a1ypqmp2wu[3] = mft3luzpor.JulianDateConversion_sec + ktuiv5qnvo2.ixxvmodmwy[3];
ktuiv5qnvo2.dli03zz0kf = ktuiv5qnvo2.du2jbzkyit + ktuiv5qnvo2.a1ypqmp2wu[0];
ktuiv5qnvo2.fqiqsnkhxo = ktuiv5qnvo2.dli03zz0kf + mft3luzpor.BiasDay_Bias;
ktuiv5qnvo2.b53wt3rpmh = mft3luzpor.Gain5_Gain * ktuiv5qnvo2.a1ypqmp2wu[2];
ktuiv5qnvo2.gds5tz5hph = mft3luzpor.Gain6_Gain * ktuiv5qnvo2.a1ypqmp2wu[3];
ktuiv5qnvo2.iqoxfz51na = (ktuiv5qnvo2.a1ypqmp2wu[1] + ktuiv5qnvo2.b53wt3rpmh) + ktuiv5qnvo2.gds5tz5hph;
ktuiv5qnvo2.oys1hwbynr = mft3luzpor.Gain4_Gain_h0bwisgwxs * ktuiv5qnvo2.iqoxfz51na;
ktuiv5qnvo2.dyolame53c = ktuiv5qnvo2.fqiqsnkhxo + ktuiv5qnvo2.oys1hwbynr;
ktuiv5qnvo2.n3z0fhzszq = ktuiv5qnvo2.dyolame53c + ktuiv5qnvo2.h3ma3ezsd2;
ktuiv5qnvo2.ebnkj40kc0 = ktuiv5qnvo2.n3z0fhzszq + mft3luzpor.Bias1_Bias_ouqlaypeza;
ktuiv5qnvo2.g2wnwmqohu = mft3luzpor.Gain_Gain_chvwhbhhfb * ktuiv5qnvo2.ebnkj40kc0;
ktuiv5qnvo2.jvpxa45rtv = mft3luzpor.R_woPM_sec + ktuiv5qnvo2.nvdtttd1ax;
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        dzu2rlzxmw1.p1hrhogcsi = (ktuiv5qnvo2.arexm4bnfq < mft3luzpor.CheckdeltaT_minmax_g0fnktg5hy[0]);
        dzu2rlzxmw1.jh5c3dhyui = (ktuiv5qnvo2.arexm4bnfq > mft3luzpor.CheckdeltaT_minmax_g0fnktg5hy[1]);
    }
    ktuiv5qnvo2.af0lwj33ym = dzu2rlzxmw1.p1hrhogcsi;
    ktuiv5qnvo2.ejhhbtmhu4 = dzu2rlzxmw1.jh5c3dhyui;
    rtPrevAction = dzu2rlzxmw1.pq1kuxnyvo;
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        rtAction = (int8_T)!(mft3luzpor.JulianDateConversion_month_apao5pt3qs <= 2.0);
        dzu2rlzxmw1.pq1kuxnyvo = rtAction;
    } else {
        rtAction = dzu2rlzxmw1.pq1kuxnyvo;
    }
    if (rtPrevAction != rtAction) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        switch (rtPrevAction) {
          case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("p0jh2umvpc",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("p0jh2umvpc", ["%<_modelSS>"], 1, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
            break;
          case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("coytytvmiv",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("coytytvmiv", ["%<_modelSS>"], 2, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
            break;
        }
    }
    if (rtAction == 0) {
        if (rtPrevAction != 0) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("l152oexjzd",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("l152oexjzd", ["%<_modelSS>"], 1, 1, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        }
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[1], "Output",0)
%if SLibCG_SystemFcnArgAccessed("atygzznv2x",1,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("atygzznv2x", ["%<_modelSS>", "mft3luzpor.R_woPM_year", "mft3luzpor.JulianDateConversion_month_apao5pt3qs", "&ktuiv5qnvo2.a42svilqaa", "&ktuiv5qnvo2.o0lomudnwk", "&mft3luzpor.k1md1brudn"], 1, 1, 6, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[1]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.k1md1brudn.hu5jjqenrx);
        }
    } else {
        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("drjcdi2dvf",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("drjcdi2dvf", ["%<_modelSS>"], 2, 1, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        }
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[2], "Output",0)
%if SLibCG_SystemFcnArgAccessed("enr11s3r13",2,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("enr11s3r13", ["%<_modelSS>", "mft3luzpor.R_woPM_year", "mft3luzpor.JulianDateConversion_month_apao5pt3qs", "&ktuiv5qnvo2.a42svilqaa", "&ktuiv5qnvo2.o0lomudnwk"], 2, 1, 6, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[2]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.lanzmspcia.bvo4sqc1xt);
        }
    }
    ktuiv5qnvo2.pg5rsevnri = ktuiv5qnvo2.a42svilqaa + mft3luzpor.BiasYear_Bias_ghpkwahlsd;
    ktuiv5qnvo2.jmfzldcsac = mft3luzpor.Gain_Gain_oejzcz04jv * ktuiv5qnvo2.pg5rsevnri;
    ktuiv5qnvo2.muwfyxa4lb = muDoubleScalarFloor(ktuiv5qnvo2.jmfzldcsac);
    ktuiv5qnvo2.g4srhdnxm2 = ktuiv5qnvo2.o0lomudnwk + mft3luzpor.Bias1_Bias_duf30x5aqp;
    ktuiv5qnvo2.as5avcknou = mft3luzpor.Gain1_Gain_e2kkyoyee3 * ktuiv5qnvo2.g4srhdnxm2;
    ktuiv5qnvo2.luisq3j2si = muDoubleScalarFloor(ktuiv5qnvo2.as5avcknou);
    ktuiv5qnvo2.ekrmx3x14w = ktuiv5qnvo2.muwfyxa4lb + ktuiv5qnvo2.luisq3j2si;
    ktuiv5qnvo2.ah4yqzis13 = ktuiv5qnvo2.ekrmx3x14w + mft3luzpor.Bias2_Bias_g3uaetf0tk;
    ktuiv5qnvo2.dp53v5vqvc = mft3luzpor.Gain2_Gain_knsbj52ux0 * ktuiv5qnvo2.a42svilqaa;
    ktuiv5qnvo2.pnpnlaosgu = muDoubleScalarFloor(ktuiv5qnvo2.dp53v5vqvc);
    ktuiv5qnvo2.eq5cbnbfn5 = ktuiv5qnvo2.ah4yqzis13 - ktuiv5qnvo2.pnpnlaosgu;
    ktuiv5qnvo2.diz2cu3xvr = mft3luzpor.Gain3_Gain_ci5kwcqg3o * ktuiv5qnvo2.pnpnlaosgu;
    ktuiv5qnvo2.axgf5whju1 = muDoubleScalarFloor(ktuiv5qnvo2.diz2cu3xvr);
    ktuiv5qnvo2.dd1f5v0pfb = ktuiv5qnvo2.eq5cbnbfn5 + ktuiv5qnvo2.axgf5whju1;
}
ktuiv5qnvo2.haemxf10vm[0] = mft3luzpor.sec2_Value_oqaeuutie2[0];
ktuiv5qnvo2.haemxf10vm[1] = mft3luzpor.sec2_Value_oqaeuutie2[1];
ktuiv5qnvo2.haemxf10vm[2] = mft3luzpor.sec2_Value_oqaeuutie2[2];
ktuiv5qnvo2.haemxf10vm[3] = mft3luzpor.sec2_Value_oqaeuutie2[3];
ktuiv5qnvo2.haemxf10vm[(int32_T)mft3luzpor.Index_Value_flbipmhhsx - 1] = ktuiv5qnvo2.arexm4bnfq;
ktuiv5qnvo2.lyhi5gapnt[0] = mft3luzpor.JulianDateConversion_day_jfiplnwspy + ktuiv5qnvo2.haemxf10vm[0];
ktuiv5qnvo2.lyhi5gapnt[1] = mft3luzpor.R_woPM_hour + ktuiv5qnvo2.haemxf10vm[1];
ktuiv5qnvo2.lyhi5gapnt[2] = mft3luzpor.R_woPM_min + ktuiv5qnvo2.haemxf10vm[2];
ktuiv5qnvo2.lyhi5gapnt[3] = mft3luzpor.JulianDateConversion_sec_c3x0bnrbfj + ktuiv5qnvo2.haemxf10vm[3];
ktuiv5qnvo2.mpyd1hnuzl = ktuiv5qnvo2.dd1f5v0pfb + ktuiv5qnvo2.lyhi5gapnt[0];
ktuiv5qnvo2.f41bu0m2oq = ktuiv5qnvo2.mpyd1hnuzl + mft3luzpor.BiasDay_Bias_nvtsg4axzf;
ktuiv5qnvo2.gkzlhndvve = mft3luzpor.Gain5_Gain_dtm3ugqzx3 * ktuiv5qnvo2.lyhi5gapnt[2];
ktuiv5qnvo2.lhjx0yl1li = mft3luzpor.Gain6_Gain_gt43g54iiv * ktuiv5qnvo2.lyhi5gapnt[3];
ktuiv5qnvo2.b0x351o12f = (ktuiv5qnvo2.lyhi5gapnt[1] + ktuiv5qnvo2.gkzlhndvve) + ktuiv5qnvo2.lhjx0yl1li;
ktuiv5qnvo2.p2ww5n3hvf = mft3luzpor.Gain4_Gain_afda5l01ro * ktuiv5qnvo2.b0x351o12f;
ktuiv5qnvo2.l5dvzw5lgj = ktuiv5qnvo2.f41bu0m2oq + ktuiv5qnvo2.p2ww5n3hvf;
ktuiv5qnvo2.g5g2cujog2 = mft3luzpor.gainVal_Gain * ktuiv5qnvo2.jvpxa45rtv;
ktuiv5qnvo2.p54t25i5cc = ktuiv5qnvo2.l5dvzw5lgj + ktuiv5qnvo2.g5g2cujog2;
ktuiv5qnvo2.lbelsssv0l = ktuiv5qnvo2.p54t25i5cc + mft3luzpor.Bias_Bias_ht3nqo3215;
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        dzu2rlzxmw1.p1bzomtpcv = (ktuiv5qnvo2.arexm4bnfq < mft3luzpor.CheckdeltaT_minmax_kymaumun3y[0]);
        dzu2rlzxmw1.db3flg0lbt = (ktuiv5qnvo2.arexm4bnfq > mft3luzpor.CheckdeltaT_minmax_kymaumun3y[1]);
    }
    ktuiv5qnvo2.gcm4xk3lvn = dzu2rlzxmw1.p1bzomtpcv;
    ktuiv5qnvo2.cqhzk1dyri = dzu2rlzxmw1.db3flg0lbt;
}
ktuiv5qnvo2.jgpm4tz1vs = muDoubleScalarMod(ktuiv5qnvo2.lbelsssv0l, mft3luzpor.Constant_Value_mecuslcgq2);
ktuiv5qnvo2.gble2pognr = mft3luzpor.mMoon_Coefs[0];
ktuiv5qnvo2.h15kicorrm = mft3luzpor.mSun_Coefs[0];
ktuiv5qnvo2.grw2wbkr35 = mft3luzpor.umMoon_Coefs[0];
ktuiv5qnvo2.pkeh4asimq = mft3luzpor.dSun_Coefs[0];
ktuiv5qnvo2.esdvrfmq34 = mft3luzpor.omegaMoon_Coefs[0];
ktuiv5qnvo2.gble2pognr = ktuiv5qnvo2.gble2pognr * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mMoon_Coefs[1];
ktuiv5qnvo2.h15kicorrm = ktuiv5qnvo2.h15kicorrm * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mSun_Coefs[1];
ktuiv5qnvo2.grw2wbkr35 = ktuiv5qnvo2.grw2wbkr35 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.umMoon_Coefs[1];
ktuiv5qnvo2.pkeh4asimq = ktuiv5qnvo2.pkeh4asimq * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.dSun_Coefs[1];
ktuiv5qnvo2.esdvrfmq34 = ktuiv5qnvo2.esdvrfmq34 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.omegaMoon_Coefs[1];
ktuiv5qnvo2.gble2pognr = ktuiv5qnvo2.gble2pognr * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mMoon_Coefs[2];
ktuiv5qnvo2.h15kicorrm = ktuiv5qnvo2.h15kicorrm * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mSun_Coefs[2];
ktuiv5qnvo2.grw2wbkr35 = ktuiv5qnvo2.grw2wbkr35 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.umMoon_Coefs[2];
ktuiv5qnvo2.pkeh4asimq = ktuiv5qnvo2.pkeh4asimq * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.dSun_Coefs[2];
ktuiv5qnvo2.esdvrfmq34 = ktuiv5qnvo2.esdvrfmq34 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.omegaMoon_Coefs[2];
ktuiv5qnvo2.gble2pognr = ktuiv5qnvo2.gble2pognr * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mMoon_Coefs[3];
ktuiv5qnvo2.h15kicorrm = ktuiv5qnvo2.h15kicorrm * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mSun_Coefs[3];
ktuiv5qnvo2.grw2wbkr35 = ktuiv5qnvo2.grw2wbkr35 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.umMoon_Coefs[3];
ktuiv5qnvo2.pkeh4asimq = ktuiv5qnvo2.pkeh4asimq * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.dSun_Coefs[3];
ktuiv5qnvo2.esdvrfmq34 = ktuiv5qnvo2.esdvrfmq34 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.omegaMoon_Coefs[3];
ktuiv5qnvo2.gble2pognr = ktuiv5qnvo2.gble2pognr * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mMoon_Coefs[4];
ktuiv5qnvo2.h15kicorrm = ktuiv5qnvo2.h15kicorrm * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.mSun_Coefs[4];
ktuiv5qnvo2.grw2wbkr35 = ktuiv5qnvo2.grw2wbkr35 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.umMoon_Coefs[4];
ktuiv5qnvo2.pkeh4asimq = ktuiv5qnvo2.pkeh4asimq * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.dSun_Coefs[4];
ktuiv5qnvo2.esdvrfmq34 = ktuiv5qnvo2.esdvrfmq34 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.omegaMoon_Coefs[4];
ktuiv5qnvo2.gye3zdzzsu[0] = mft3luzpor.Gain_Gain_cpeyq2kt4r * ktuiv5qnvo2.gble2pognr;
ktuiv5qnvo2.gye3zdzzsu[1] = mft3luzpor.Gain_Gain_cpeyq2kt4r * ktuiv5qnvo2.h15kicorrm;
ktuiv5qnvo2.gye3zdzzsu[2] = mft3luzpor.Gain_Gain_cpeyq2kt4r * ktuiv5qnvo2.grw2wbkr35;
ktuiv5qnvo2.gye3zdzzsu[3] = mft3luzpor.Gain_Gain_cpeyq2kt4r * ktuiv5qnvo2.pkeh4asimq;
ktuiv5qnvo2.gye3zdzzsu[4] = mft3luzpor.Gain_Gain_cpeyq2kt4r * ktuiv5qnvo2.esdvrfmq34;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.c4gs33l0bz = mft3luzpor.lMercury_Coefs[0];
ktuiv5qnvo2.c4gs33l0bz = ktuiv5qnvo2.c4gs33l0bz * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lMercury_Coefs[1];
ktuiv5qnvo2.lfk1tgewfe = mft3luzpor.lVenus_Coefs[0];
ktuiv5qnvo2.lfk1tgewfe = ktuiv5qnvo2.lfk1tgewfe * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lVenus_Coefs[1];
ktuiv5qnvo2.hx5yffvmat = mft3luzpor.lEarth_Coefs[0];
ktuiv5qnvo2.hx5yffvmat = ktuiv5qnvo2.hx5yffvmat * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lEarth_Coefs[1];
ktuiv5qnvo2.awnvltps30 = mft3luzpor.lMars_Coefs[0];
ktuiv5qnvo2.awnvltps30 = ktuiv5qnvo2.awnvltps30 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lMars_Coefs[1];
ktuiv5qnvo2.klz40gzlgp = mft3luzpor.lJupiter_Coefs[0];
ktuiv5qnvo2.klz40gzlgp = ktuiv5qnvo2.klz40gzlgp * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lJupiter_Coefs[1];
ktuiv5qnvo2.chemccfpzw = mft3luzpor.lSaturn_Coefs[0];
ktuiv5qnvo2.chemccfpzw = ktuiv5qnvo2.chemccfpzw * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lSaturn_Coefs[1];
ktuiv5qnvo2.cijeab3mw0 = mft3luzpor.lUranus_Coefs[0];
ktuiv5qnvo2.cijeab3mw0 = ktuiv5qnvo2.cijeab3mw0 * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lUranus_Coefs[1];
ktuiv5qnvo2.iric5v3rnp = mft3luzpor.lNeptune_Coefs[0];
ktuiv5qnvo2.iric5v3rnp = ktuiv5qnvo2.iric5v3rnp * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.lNeptune_Coefs[1];
ktuiv5qnvo2.de2lgrp2su = mft3luzpor.pa_Coefs[0];
ktuiv5qnvo2.de2lgrp2su = ktuiv5qnvo2.de2lgrp2su * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.pa_Coefs[1];
ktuiv5qnvo2.de2lgrp2su = ktuiv5qnvo2.de2lgrp2su * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.pa_Coefs[2];
for (degreeP1 = 0; degreeP1 < 5; degreeP1++) {
    uTmp_idx_2 = 0.017453292519943295 * ktuiv5qnvo2.gye3zdzzsu[degreeP1];
    ktuiv5qnvo2.inbwuleyhj[degreeP1] = uTmp_idx_2;
    ktuiv5qnvo2.k0pntt5pgt[degreeP1] = uTmp_idx_2;
}
ktuiv5qnvo2.k0pntt5pgt[5] = ktuiv5qnvo2.c4gs33l0bz;
ktuiv5qnvo2.k0pntt5pgt[6] = ktuiv5qnvo2.lfk1tgewfe;
ktuiv5qnvo2.k0pntt5pgt[7] = ktuiv5qnvo2.hx5yffvmat;
ktuiv5qnvo2.k0pntt5pgt[8] = ktuiv5qnvo2.awnvltps30;
ktuiv5qnvo2.k0pntt5pgt[9] = ktuiv5qnvo2.klz40gzlgp;
ktuiv5qnvo2.k0pntt5pgt[10] = ktuiv5qnvo2.chemccfpzw;
ktuiv5qnvo2.k0pntt5pgt[11] = ktuiv5qnvo2.cijeab3mw0;
ktuiv5qnvo2.k0pntt5pgt[12] = ktuiv5qnvo2.iric5v3rnp;
ktuiv5qnvo2.k0pntt5pgt[13] = ktuiv5qnvo2.de2lgrp2su;
for (degreeP1 = 0; degreeP1 < 14; degreeP1++) {
    ktuiv5qnvo2.mu3afvwcb4[degreeP1] = muDoubleScalarMod(ktuiv5qnvo2.k0pntt5pgt[degreeP1], mft3luzpor.Constant_Value_ks2rtaqm2w);
}
ktuiv5qnvo2.kgnza0c5un = mft3luzpor.S0_Coefs[0];
for (count = 0; count < 5; count++) {
    ktuiv5qnvo2.kgnza0c5un = ktuiv5qnvo2.kgnza0c5un * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.S0_Coefs[count + 1];
}
ktuiv5qnvo2.cbvffsu30w[0] = ktuiv5qnvo2.g2wnwmqohu;
ktuiv5qnvo2.cbvffsu30w[1] = ktuiv5qnvo2.g2wnwmqohu;
ktuiv5qnvo2.cbvffsu30w[2] = ktuiv5qnvo2.g2wnwmqohu;
ktuiv5qnvo2.hp21yfyq2j = ktuiv5qnvo2.g2wnwmqohu * ktuiv5qnvo2.g2wnwmqohu;
for (degreeP1 = 0; degreeP1 < 25; degreeP1++) {
    ktuiv5qnvo2.hut4f1akqa[degreeP1] = ktuiv5qnvo2.hp21yfyq2j;
}
ktuiv5qnvo2.ifgcvd4kzb = ktuiv5qnvo2.hp21yfyq2j * ktuiv5qnvo2.g2wnwmqohu;
ktuiv5qnvo2.cxhnicelj1[0] = ktuiv5qnvo2.ifgcvd4kzb;
ktuiv5qnvo2.cxhnicelj1[1] = ktuiv5qnvo2.ifgcvd4kzb;
ktuiv5qnvo2.cxhnicelj1[2] = ktuiv5qnvo2.ifgcvd4kzb;
ktuiv5qnvo2.cxhnicelj1[3] = ktuiv5qnvo2.ifgcvd4kzb;
ktuiv5qnvo2.lgd2xwsrbp = ktuiv5qnvo2.ifgcvd4kzb * ktuiv5qnvo2.g2wnwmqohu;
for (degreeP1 = 0; degreeP1 < 5; degreeP1++) {
    ktuiv5qnvo2.c34upcggqx[degreeP1] = ktuiv5qnvo2.mu3afvwcb4[degreeP1];
}
ktuiv5qnvo2.c34upcggqx[5] = ktuiv5qnvo2.mu3afvwcb4[6];
ktuiv5qnvo2.c34upcggqx[6] = ktuiv5qnvo2.mu3afvwcb4[7];
ktuiv5qnvo2.c34upcggqx[7] = ktuiv5qnvo2.mu3afvwcb4[13];
TRANS = 'N';
M = 66LL;
N = 8LL;
uTmp_idx_0 = 1.0;
LDA = 66LL;
INCX = 1LL;
dUT2UT1 = 0.0;
INCY = 1LL;
dgemv(&TRANS, &M, &N, &uTmp_idx_0, &ktuiv5qnvo2.a3xsdbwusr[0], &LDA, &ktuiv5qnvo2.c34upcggqx[0], &INCX, &dUT2UT1, &ktuiv5qnvo2.bwey3kb1kg[0], &INCY);
for (degreeP1 = 0; degreeP1 < 66; degreeP1++) {
    ktuiv5qnvo2.dwwehfjmtf[degreeP1] = muDoubleScalarSin(ktuiv5qnvo2.bwey3kb1kg[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 30; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&mft3luzpor.Constant1_Value_irkdi15zer[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.ewxmxolsjd[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.dwwehfjmtf[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.pnnfavymrs[degreeP1], tmp_i);
}
for (degreeP1 = 32; degreeP1 < 33; degreeP1++) {
    ktuiv5qnvo2.pnnfavymrs[degreeP1] = mft3luzpor.Constant1_Value_irkdi15zer[degreeP1] * ktuiv5qnvo2.ewxmxolsjd[degreeP1] * ktuiv5qnvo2.dwwehfjmtf[degreeP1];
}
ktuiv5qnvo2.pnnfavymrs[33] = ktuiv5qnvo2.cbvffsu30w[0] * ktuiv5qnvo2.ewxmxolsjd[33] * ktuiv5qnvo2.dwwehfjmtf[33];
ktuiv5qnvo2.pnnfavymrs[34] = ktuiv5qnvo2.cbvffsu30w[1] * ktuiv5qnvo2.ewxmxolsjd[34] * ktuiv5qnvo2.dwwehfjmtf[34];
ktuiv5qnvo2.pnnfavymrs[35] = ktuiv5qnvo2.cbvffsu30w[2] * ktuiv5qnvo2.ewxmxolsjd[35] * ktuiv5qnvo2.dwwehfjmtf[35];
for (degreeP1 = 0; degreeP1 < 25; degreeP1++) {
    ktuiv5qnvo2.pnnfavymrs[degreeP1 + 36] = ktuiv5qnvo2.ewxmxolsjd[degreeP1 + 36] * ktuiv5qnvo2.hut4f1akqa[degreeP1] * ktuiv5qnvo2.dwwehfjmtf[degreeP1 + 36];
}
ktuiv5qnvo2.pnnfavymrs[61] = ktuiv5qnvo2.cxhnicelj1[0] * ktuiv5qnvo2.ewxmxolsjd[61] * ktuiv5qnvo2.dwwehfjmtf[61];
ktuiv5qnvo2.pnnfavymrs[62] = ktuiv5qnvo2.cxhnicelj1[1] * ktuiv5qnvo2.ewxmxolsjd[62] * ktuiv5qnvo2.dwwehfjmtf[62];
ktuiv5qnvo2.pnnfavymrs[63] = ktuiv5qnvo2.cxhnicelj1[2] * ktuiv5qnvo2.ewxmxolsjd[63] * ktuiv5qnvo2.dwwehfjmtf[63];
ktuiv5qnvo2.pnnfavymrs[64] = ktuiv5qnvo2.cxhnicelj1[3] * ktuiv5qnvo2.ewxmxolsjd[64] * ktuiv5qnvo2.dwwehfjmtf[64];
ktuiv5qnvo2.pnnfavymrs[65] = ktuiv5qnvo2.lgd2xwsrbp * ktuiv5qnvo2.ewxmxolsjd[65] * ktuiv5qnvo2.dwwehfjmtf[65];
for (degreeP1 = 0; degreeP1 < 66; degreeP1++) {
    ktuiv5qnvo2.ht523alpob[degreeP1] = muDoubleScalarCos(ktuiv5qnvo2.bwey3kb1kg[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 30; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.ht523alpob[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.khxt0zslsh[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&mft3luzpor.Constant1_Value_irkdi15zer[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.iwxrcpdt2p[degreeP1], tmp_i);
}
for (degreeP1 = 32; degreeP1 < 33; degreeP1++) {
    ktuiv5qnvo2.iwxrcpdt2p[degreeP1] = ktuiv5qnvo2.ht523alpob[degreeP1] * ktuiv5qnvo2.khxt0zslsh[degreeP1] * mft3luzpor.Constant1_Value_irkdi15zer[degreeP1];
}
ktuiv5qnvo2.iwxrcpdt2p[33] = ktuiv5qnvo2.ht523alpob[33] * ktuiv5qnvo2.khxt0zslsh[33] * ktuiv5qnvo2.cbvffsu30w[0];
ktuiv5qnvo2.iwxrcpdt2p[34] = ktuiv5qnvo2.ht523alpob[34] * ktuiv5qnvo2.khxt0zslsh[34] * ktuiv5qnvo2.cbvffsu30w[1];
ktuiv5qnvo2.iwxrcpdt2p[35] = ktuiv5qnvo2.ht523alpob[35] * ktuiv5qnvo2.khxt0zslsh[35] * ktuiv5qnvo2.cbvffsu30w[2];
for (degreeP1 = 0; degreeP1 < 25; degreeP1++) {
    ktuiv5qnvo2.iwxrcpdt2p[degreeP1 + 36] = ktuiv5qnvo2.ht523alpob[degreeP1 + 36] * ktuiv5qnvo2.khxt0zslsh[degreeP1 + 36] * ktuiv5qnvo2.hut4f1akqa[degreeP1];
}
ktuiv5qnvo2.iwxrcpdt2p[61] = ktuiv5qnvo2.ht523alpob[61] * ktuiv5qnvo2.khxt0zslsh[61] * ktuiv5qnvo2.cxhnicelj1[0];
ktuiv5qnvo2.iwxrcpdt2p[62] = ktuiv5qnvo2.ht523alpob[62] * ktuiv5qnvo2.khxt0zslsh[62] * ktuiv5qnvo2.cxhnicelj1[1];
ktuiv5qnvo2.iwxrcpdt2p[63] = ktuiv5qnvo2.ht523alpob[63] * ktuiv5qnvo2.khxt0zslsh[63] * ktuiv5qnvo2.cxhnicelj1[2];
ktuiv5qnvo2.iwxrcpdt2p[64] = ktuiv5qnvo2.ht523alpob[64] * ktuiv5qnvo2.khxt0zslsh[64] * ktuiv5qnvo2.cxhnicelj1[3];
ktuiv5qnvo2.iwxrcpdt2p[65] = ktuiv5qnvo2.ht523alpob[65] * ktuiv5qnvo2.khxt0zslsh[65] * ktuiv5qnvo2.lgd2xwsrbp;
uTmp_idx_0 = -0.0;
for (degreeP1 = 0; degreeP1 < 66; degreeP1++) {
    uTmp_idx_2 = ktuiv5qnvo2.pnnfavymrs[degreeP1] + ktuiv5qnvo2.iwxrcpdt2p[degreeP1];
    ktuiv5qnvo2.asfoggplk4[degreeP1] = uTmp_idx_2;
    uTmp_idx_0 += uTmp_idx_2;
}
ktuiv5qnvo2.aody5bgqpu = uTmp_idx_0;
ktuiv5qnvo2.ljvvh5awvq = ktuiv5qnvo2.kgnza0c5un + ktuiv5qnvo2.aody5bgqpu;
ktuiv5qnvo2.gewhm55nlp = mft3luzpor.Gain2_Gain_n5g25zmhpr * ktuiv5qnvo2.ljvvh5awvq;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.ite3qzvp3a = 0.017453292519943295 * ktuiv5qnvo2.gewhm55nlp;
ktuiv5qnvo2.frwm532a3n = mft3luzpor.X0_Coefs[0];
for (count = 0; count < 5; count++) {
    ktuiv5qnvo2.frwm532a3n = ktuiv5qnvo2.frwm532a3n * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.X0_Coefs[count + 1];
}
for (degreeP1 = 0; degreeP1 < 253; degreeP1++) {
    ktuiv5qnvo2.mdqamsmzry[degreeP1] = ktuiv5qnvo2.g2wnwmqohu;
}
ktuiv5qnvo2.nqaue0bnvh = ktuiv5qnvo2.g2wnwmqohu * ktuiv5qnvo2.g2wnwmqohu;
for (degreeP1 = 0; degreeP1 < 36; degreeP1++) {
    ktuiv5qnvo2.lg0gz0rm3f[degreeP1] = ktuiv5qnvo2.nqaue0bnvh;
}
ktuiv5qnvo2.dik3mkp3hm = ktuiv5qnvo2.nqaue0bnvh * ktuiv5qnvo2.g2wnwmqohu;
ktuiv5qnvo2.dg2ek1ol0k[0] = ktuiv5qnvo2.dik3mkp3hm;
ktuiv5qnvo2.dg2ek1ol0k[1] = ktuiv5qnvo2.dik3mkp3hm;
ktuiv5qnvo2.dg2ek1ol0k[2] = ktuiv5qnvo2.dik3mkp3hm;
ktuiv5qnvo2.dg2ek1ol0k[3] = ktuiv5qnvo2.dik3mkp3hm;
ktuiv5qnvo2.ehagrzqqgc = ktuiv5qnvo2.dik3mkp3hm * ktuiv5qnvo2.g2wnwmqohu;
TRANS = 'N';
M = 1600LL;
N = 14LL;
uTmp_idx_0 = 1.0;
LDA = 1600LL;
INCX = 1LL;
dUT2UT1 = 0.0;
INCY = 1LL;
dgemv(&TRANS, &M, &N, &uTmp_idx_0, &ktuiv5qnvo2.j25fvdirci[0], &LDA, &ktuiv5qnvo2.mu3afvwcb4[0], &INCX, &dUT2UT1, &ktuiv5qnvo2.eilcjfbk45[0], &INCY);
for (degreeP1 = 0; degreeP1 < 1600; degreeP1++) {
    ktuiv5qnvo2.dgz3gxz05z[degreeP1] = muDoubleScalarSin(ktuiv5qnvo2.eilcjfbk45[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 1304; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&mft3luzpor.Constant1_Value_bwchvceojl[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.fxt4d3dyo3[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.dgz3gxz05z[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.fdlt3xdnwg[degreeP1], tmp_i);
}
for (degreeP1 = 0; degreeP1 <= 250; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.fxt4d3dyo3[degreeP1 + 1306]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.mdqamsmzry[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.dgz3gxz05z[degreeP1 + 1306]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.fdlt3xdnwg[degreeP1 + 1306], tmp_i);
}
for (degreeP1 = 252; degreeP1 < 253; degreeP1++) {
    ktuiv5qnvo2.fdlt3xdnwg[degreeP1 + 1306] = ktuiv5qnvo2.fxt4d3dyo3[degreeP1 + 1306] * ktuiv5qnvo2.mdqamsmzry[degreeP1] * ktuiv5qnvo2.dgz3gxz05z[degreeP1 + 1306];
}
for (degreeP1 = 0; degreeP1 <= 34; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.fxt4d3dyo3[degreeP1 + 1559]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.lg0gz0rm3f[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.dgz3gxz05z[degreeP1 + 1559]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.fdlt3xdnwg[degreeP1 + 1559], tmp_i);
}
ktuiv5qnvo2.fdlt3xdnwg[1595] = ktuiv5qnvo2.dg2ek1ol0k[0] * ktuiv5qnvo2.fxt4d3dyo3[1595] * ktuiv5qnvo2.dgz3gxz05z[1595];
ktuiv5qnvo2.fdlt3xdnwg[1596] = ktuiv5qnvo2.dg2ek1ol0k[1] * ktuiv5qnvo2.fxt4d3dyo3[1596] * ktuiv5qnvo2.dgz3gxz05z[1596];
ktuiv5qnvo2.fdlt3xdnwg[1597] = ktuiv5qnvo2.dg2ek1ol0k[2] * ktuiv5qnvo2.fxt4d3dyo3[1597] * ktuiv5qnvo2.dgz3gxz05z[1597];
ktuiv5qnvo2.fdlt3xdnwg[1598] = ktuiv5qnvo2.dg2ek1ol0k[3] * ktuiv5qnvo2.fxt4d3dyo3[1598] * ktuiv5qnvo2.dgz3gxz05z[1598];
ktuiv5qnvo2.fdlt3xdnwg[1599] = ktuiv5qnvo2.ehagrzqqgc * ktuiv5qnvo2.fxt4d3dyo3[1599] * ktuiv5qnvo2.dgz3gxz05z[1599];
for (degreeP1 = 0; degreeP1 < 1600; degreeP1++) {
    ktuiv5qnvo2.myjcwege0k[degreeP1] = muDoubleScalarCos(ktuiv5qnvo2.eilcjfbk45[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 1304; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.myjcwege0k[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.egtxigpxs2[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&mft3luzpor.Constant1_Value_bwchvceojl[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.jwbpxx3f4u[degreeP1], tmp_i);
}
for (degreeP1 = 0; degreeP1 <= 250; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.myjcwege0k[degreeP1 + 1306]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.egtxigpxs2[degreeP1 + 1306]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.mdqamsmzry[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.jwbpxx3f4u[degreeP1 + 1306], tmp_i);
}
for (degreeP1 = 252; degreeP1 < 253; degreeP1++) {
    ktuiv5qnvo2.jwbpxx3f4u[degreeP1 + 1306] = ktuiv5qnvo2.myjcwege0k[degreeP1 + 1306] * ktuiv5qnvo2.egtxigpxs2[degreeP1 + 1306] * ktuiv5qnvo2.mdqamsmzry[degreeP1];
}
for (degreeP1 = 0; degreeP1 <= 34; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.myjcwege0k[degreeP1 + 1559]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.egtxigpxs2[degreeP1 + 1559]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.lg0gz0rm3f[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.jwbpxx3f4u[degreeP1 + 1559], tmp_i);
}
ktuiv5qnvo2.jwbpxx3f4u[1595] = ktuiv5qnvo2.myjcwege0k[1595] * ktuiv5qnvo2.egtxigpxs2[1595] * ktuiv5qnvo2.dg2ek1ol0k[0];
ktuiv5qnvo2.jwbpxx3f4u[1596] = ktuiv5qnvo2.myjcwege0k[1596] * ktuiv5qnvo2.egtxigpxs2[1596] * ktuiv5qnvo2.dg2ek1ol0k[1];
ktuiv5qnvo2.jwbpxx3f4u[1597] = ktuiv5qnvo2.myjcwege0k[1597] * ktuiv5qnvo2.egtxigpxs2[1597] * ktuiv5qnvo2.dg2ek1ol0k[2];
ktuiv5qnvo2.jwbpxx3f4u[1598] = ktuiv5qnvo2.myjcwege0k[1598] * ktuiv5qnvo2.egtxigpxs2[1598] * ktuiv5qnvo2.dg2ek1ol0k[3];
ktuiv5qnvo2.jwbpxx3f4u[1599] = ktuiv5qnvo2.myjcwege0k[1599] * ktuiv5qnvo2.egtxigpxs2[1599] * ktuiv5qnvo2.ehagrzqqgc;
uTmp_idx_0 = -0.0;
for (degreeP1 = 0; degreeP1 < 1600; degreeP1++) {
    uTmp_idx_2 = ktuiv5qnvo2.fdlt3xdnwg[degreeP1] + ktuiv5qnvo2.jwbpxx3f4u[degreeP1];
    ktuiv5qnvo2.ot2bqmwuyx[degreeP1] = uTmp_idx_2;
    uTmp_idx_0 += uTmp_idx_2;
}
ktuiv5qnvo2.hostrd2e0i = uTmp_idx_0;
ktuiv5qnvo2.hbw2jfawaw = ktuiv5qnvo2.frwm532a3n + ktuiv5qnvo2.hostrd2e0i;
ktuiv5qnvo2.gx0r33wsso = mft3luzpor.Gain3_Gain_gr5zfo0fso * ktuiv5qnvo2.hbw2jfawaw;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.nvtz2zfpvr = 0.017453292519943295 * ktuiv5qnvo2.gx0r33wsso;
ktuiv5qnvo2.gipt4cbgbq = mft3luzpor.Y0_Coefs[0];
for (count = 0; count < 5; count++) {
    ktuiv5qnvo2.gipt4cbgbq = ktuiv5qnvo2.gipt4cbgbq * ktuiv5qnvo2.g2wnwmqohu + mft3luzpor.Y0_Coefs[count + 1];
}
for (degreeP1 = 0; degreeP1 < 277; degreeP1++) {
    ktuiv5qnvo2.gkss0ptds3[degreeP1] = ktuiv5qnvo2.g2wnwmqohu;
}
ktuiv5qnvo2.bn2pou2bl0 = ktuiv5qnvo2.g2wnwmqohu * ktuiv5qnvo2.g2wnwmqohu;
for (degreeP1 = 0; degreeP1 < 30; degreeP1++) {
    ktuiv5qnvo2.nn1ie5jzbi[degreeP1] = ktuiv5qnvo2.bn2pou2bl0;
}
ktuiv5qnvo2.lvgpbiskyx = ktuiv5qnvo2.bn2pou2bl0 * ktuiv5qnvo2.g2wnwmqohu;
for (degreeP1 = 0; degreeP1 < 5; degreeP1++) {
    ktuiv5qnvo2.nd3llek0ox[degreeP1] = ktuiv5qnvo2.lvgpbiskyx;
}
ktuiv5qnvo2.noess5iroi = ktuiv5qnvo2.lvgpbiskyx * ktuiv5qnvo2.g2wnwmqohu;
TRANS = 'N';
M = 1275LL;
N = 14LL;
uTmp_idx_0 = 1.0;
LDA = 1275LL;
INCX = 1LL;
dUT2UT1 = 0.0;
INCY = 1LL;
dgemv(&TRANS, &M, &N, &uTmp_idx_0, &ktuiv5qnvo2.g0lkbwhl0q[0], &LDA, &ktuiv5qnvo2.mu3afvwcb4[0], &INCX, &dUT2UT1, &ktuiv5qnvo2.nrz2gwljsv[0], &INCY);
for (degreeP1 = 0; degreeP1 < 1275; degreeP1++) {
    ktuiv5qnvo2.niub2neuf4[degreeP1] = muDoubleScalarSin(ktuiv5qnvo2.nrz2gwljsv[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 960; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&mft3luzpor.Constant1_Value_koj4fsl1yw[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.pft4zg43cd[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.niub2neuf4[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.oysjl0kttm[degreeP1], tmp_i);
}
for (degreeP1 = 0; degreeP1 <= 274; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.pft4zg43cd[degreeP1 + 962]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.gkss0ptds3[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.niub2neuf4[degreeP1 + 962]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.oysjl0kttm[degreeP1 + 962], tmp_i);
}
for (degreeP1 = 276; degreeP1 < 277; degreeP1++) {
    ktuiv5qnvo2.oysjl0kttm[degreeP1 + 962] = ktuiv5qnvo2.pft4zg43cd[degreeP1 + 962] * ktuiv5qnvo2.gkss0ptds3[degreeP1] * ktuiv5qnvo2.niub2neuf4[degreeP1 + 962];
}
for (degreeP1 = 0; degreeP1 <= 28; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.pft4zg43cd[degreeP1 + 1239]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.nn1ie5jzbi[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.niub2neuf4[degreeP1 + 1239]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.oysjl0kttm[degreeP1 + 1239], tmp_i);
}
for (degreeP1 = 0; degreeP1 < 5; degreeP1++) {
    ktuiv5qnvo2.oysjl0kttm[degreeP1 + 1269] = ktuiv5qnvo2.pft4zg43cd[degreeP1 + 1269] * ktuiv5qnvo2.nd3llek0ox[degreeP1] * ktuiv5qnvo2.niub2neuf4[degreeP1 + 1269];
}
ktuiv5qnvo2.oysjl0kttm[1274] = ktuiv5qnvo2.noess5iroi * ktuiv5qnvo2.pft4zg43cd[1274] * ktuiv5qnvo2.niub2neuf4[1274];
for (degreeP1 = 0; degreeP1 < 1275; degreeP1++) {
    ktuiv5qnvo2.pdh5gegjty[degreeP1] = muDoubleScalarCos(ktuiv5qnvo2.nrz2gwljsv[degreeP1]);
}
for (degreeP1 = 0; degreeP1 <= 960; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.pdh5gegjty[degreeP1]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.bwfvokrayn[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&mft3luzpor.Constant1_Value_koj4fsl1yw[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.mmbjzckezy[degreeP1], tmp_i);
}
for (degreeP1 = 0; degreeP1 <= 274; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.pdh5gegjty[degreeP1 + 962]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.bwfvokrayn[degreeP1 + 962]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.gkss0ptds3[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.mmbjzckezy[degreeP1 + 962], tmp_i);
}
for (degreeP1 = 276; degreeP1 < 277; degreeP1++) {
    ktuiv5qnvo2.mmbjzckezy[degreeP1 + 962] = ktuiv5qnvo2.pdh5gegjty[degreeP1 + 962] * ktuiv5qnvo2.bwfvokrayn[degreeP1 + 962] * ktuiv5qnvo2.gkss0ptds3[degreeP1];
}
for (degreeP1 = 0; degreeP1 <= 28; degreeP1 += 2) {
    tmp_i = _mm_loadu_pd(&ktuiv5qnvo2.pdh5gegjty[degreeP1 + 1239]);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.bwfvokrayn[degreeP1 + 1239]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    tmp_m = _mm_loadu_pd(&ktuiv5qnvo2.nn1ie5jzbi[degreeP1]);
    tmp_i = _mm_mul_pd(tmp_i, tmp_m);
    _mm_storeu_pd(&ktuiv5qnvo2.mmbjzckezy[degreeP1 + 1239], tmp_i);
}
for (degreeP1 = 0; degreeP1 < 5; degreeP1++) {
    ktuiv5qnvo2.mmbjzckezy[degreeP1 + 1269] = ktuiv5qnvo2.pdh5gegjty[degreeP1 + 1269] * ktuiv5qnvo2.bwfvokrayn[degreeP1 + 1269] * ktuiv5qnvo2.nd3llek0ox[degreeP1];
}
ktuiv5qnvo2.mmbjzckezy[1274] = ktuiv5qnvo2.pdh5gegjty[1274] * ktuiv5qnvo2.bwfvokrayn[1274] * ktuiv5qnvo2.noess5iroi;
uTmp_idx_0 = -0.0;
for (degreeP1 = 0; degreeP1 < 1275; degreeP1++) {
    uTmp_idx_2 = ktuiv5qnvo2.oysjl0kttm[degreeP1] + ktuiv5qnvo2.mmbjzckezy[degreeP1];
    ktuiv5qnvo2.m0ms3ljo3u[degreeP1] = uTmp_idx_2;
    uTmp_idx_0 += uTmp_idx_2;
}
ktuiv5qnvo2.fj5yi3ykxy = uTmp_idx_0;
ktuiv5qnvo2.da5f2ylq4n = ktuiv5qnvo2.gipt4cbgbq + ktuiv5qnvo2.fj5yi3ykxy;
ktuiv5qnvo2.kx2c0u3u5n = mft3luzpor.Gain4_Gain_lam1ry24pn * ktuiv5qnvo2.da5f2ylq4n;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.oeyk1akhkr = 0.017453292519943295 * ktuiv5qnvo2.kx2c0u3u5n;
ktuiv5qnvo2.aer0w543iw = ktuiv5qnvo2.nvtz2zfpvr + ktuiv5qnvo2.mdl4epmwtp[0];
uTmp_idx_0 = ktuiv5qnvo2.aer0w543iw;
ktuiv5qnvo2.mujdahqjlj = uTmp_idx_0 * uTmp_idx_0;
ktuiv5qnvo2.avz20b2egn = ktuiv5qnvo2.mdl4epmwtp[1] + ktuiv5qnvo2.oeyk1akhkr;
uTmp_idx_0 = ktuiv5qnvo2.avz20b2egn;
ktuiv5qnvo2.egw3tu4xp3 = uTmp_idx_0 * uTmp_idx_0;
ktuiv5qnvo2.mteampxllo = ktuiv5qnvo2.mujdahqjlj + ktuiv5qnvo2.egw3tu4xp3;
ktuiv5qnvo2.gzinpvw3xt = mft3luzpor.Constant_Value_ngx3b40ddb - ktuiv5qnvo2.mteampxllo;
ktuiv5qnvo2.gstbhhqdxh = ktuiv5qnvo2.mteampxllo / ktuiv5qnvo2.gzinpvw3xt;
ktuiv5qnvo2.alhpwogw2p = ktuiv5qnvo2.avz20b2egn * ktuiv5qnvo2.aer0w543iw;
ktuiv5qnvo2.drevvy0hct = mft3luzpor.Gain5_Gain_blke3ewpwn * ktuiv5qnvo2.alhpwogw2p;
ktuiv5qnvo2.ktintt0f0x = ktuiv5qnvo2.ite3qzvp3a - ktuiv5qnvo2.drevvy0hct;
ktuiv5qnvo2.nb3gksrzpz = muDoubleScalarAtan2(ktuiv5qnvo2.avz20b2egn, ktuiv5qnvo2.aer0w543iw);
ktuiv5qnvo2.nnv3evx02h = ktuiv5qnvo2.ktintt0f0x + ktuiv5qnvo2.nb3gksrzpz;
ktuiv5qnvo2.ectnbtmdkd = mft3luzpor.Gain1_Gain_nsj0bxjlmo * ktuiv5qnvo2.nnv3evx02h;
uTmp_idx_0 = ktuiv5qnvo2.gstbhhqdxh;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.oep1m0ng2h != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.oep1m0ng2h = 0;
    }
    ktuiv5qnvo2.dmjyiarwph = muDoubleScalarSqrt(ktuiv5qnvo2.gstbhhqdxh);
} else {
    dUT2UT1 = ktuiv5qnvo2.gstbhhqdxh;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.dmjyiarwph = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.dmjyiarwph = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.oep1m0ng2h = 1;
    }
}
ktuiv5qnvo2.lql0rbltn5 = muDoubleScalarAtan(ktuiv5qnvo2.dmjyiarwph);
ktuiv5qnvo2.evj3vswqvm[0] = ktuiv5qnvo2.nb3gksrzpz;
ktuiv5qnvo2.evj3vswqvm[1] = ktuiv5qnvo2.lql0rbltn5;
ktuiv5qnvo2.evj3vswqvm[2] = ktuiv5qnvo2.ectnbtmdkd;
muDoubleScalarSinCos(ktuiv5qnvo2.evj3vswqvm[0], &ktuiv5qnvo2.dg12adjixq[0], &ktuiv5qnvo2.bn0dfuohf1[0]);
muDoubleScalarSinCos(ktuiv5qnvo2.evj3vswqvm[1], &ktuiv5qnvo2.dg12adjixq[1], &ktuiv5qnvo2.bn0dfuohf1[1]);
muDoubleScalarSinCos(ktuiv5qnvo2.evj3vswqvm[2], &ktuiv5qnvo2.dg12adjixq[2], &ktuiv5qnvo2.bn0dfuohf1[2]);
ktuiv5qnvo2.lfjfbysi2q[0] = ktuiv5qnvo2.bn0dfuohf1[0] * ktuiv5qnvo2.bn0dfuohf1[2] * ktuiv5qnvo2.bn0dfuohf1[1] - ktuiv5qnvo2.dg12adjixq[0] * ktuiv5qnvo2.dg12adjixq[2];
ktuiv5qnvo2.lfjfbysi2q[1] = -ktuiv5qnvo2.bn0dfuohf1[0] * ktuiv5qnvo2.bn0dfuohf1[1] * ktuiv5qnvo2.dg12adjixq[2] - ktuiv5qnvo2.dg12adjixq[0] * ktuiv5qnvo2.bn0dfuohf1[2];
ktuiv5qnvo2.lfjfbysi2q[2] = ktuiv5qnvo2.bn0dfuohf1[0] * ktuiv5qnvo2.dg12adjixq[1];
ktuiv5qnvo2.lfjfbysi2q[3] = ktuiv5qnvo2.dg12adjixq[0] * ktuiv5qnvo2.bn0dfuohf1[2] * ktuiv5qnvo2.bn0dfuohf1[1] + ktuiv5qnvo2.bn0dfuohf1[0] * ktuiv5qnvo2.dg12adjixq[2];
ktuiv5qnvo2.lfjfbysi2q[4] = -ktuiv5qnvo2.dg12adjixq[0] * ktuiv5qnvo2.bn0dfuohf1[1] * ktuiv5qnvo2.dg12adjixq[2] + ktuiv5qnvo2.bn0dfuohf1[0] * ktuiv5qnvo2.bn0dfuohf1[2];
ktuiv5qnvo2.lfjfbysi2q[5] = ktuiv5qnvo2.dg12adjixq[0] * ktuiv5qnvo2.dg12adjixq[1];
ktuiv5qnvo2.lfjfbysi2q[6] = -ktuiv5qnvo2.dg12adjixq[1] * ktuiv5qnvo2.bn0dfuohf1[2];
ktuiv5qnvo2.lfjfbysi2q[7] = ktuiv5qnvo2.dg12adjixq[1] * ktuiv5qnvo2.dg12adjixq[2];
ktuiv5qnvo2.lfjfbysi2q[8] = ktuiv5qnvo2.bn0dfuohf1[1];
ktuiv5qnvo2.hf2yvik2vz = ktuiv5qnvo2.jgpm4tz1vs + mft3luzpor.Bias1_Bias_mg5rk1exfd;
ktuiv5qnvo2.ajsu0ao51n = mft3luzpor.Gain_Gain_aidnlesuhh * ktuiv5qnvo2.lbelsssv0l;
ktuiv5qnvo2.n4bunn5aez = ktuiv5qnvo2.hf2yvik2vz + ktuiv5qnvo2.ajsu0ao51n;
ktuiv5qnvo2.jpy1v4n0ss = mft3luzpor.Gain1_Gain_c3rulevhri * ktuiv5qnvo2.n4bunn5aez;
ktuiv5qnvo2.hg4ica1ipm = muDoubleScalarMod(ktuiv5qnvo2.jpy1v4n0ss, mft3luzpor.Constant_Value_axzjsxmzbr);
ktuiv5qnvo2.p00wdzmb30[0] = ktuiv5qnvo2.hg4ica1ipm;
ktuiv5qnvo2.p00wdzmb30[1] = mft3luzpor.Constant1_Value_pr5ujgrsn1[0];
ktuiv5qnvo2.p00wdzmb30[2] = mft3luzpor.Constant1_Value_pr5ujgrsn1[1];
muDoubleScalarSinCos(ktuiv5qnvo2.p00wdzmb30[0], &ktuiv5qnvo2.l43axsmmhk[0], &ktuiv5qnvo2.efnxscvqak[0]);
muDoubleScalarSinCos(ktuiv5qnvo2.p00wdzmb30[1], &ktuiv5qnvo2.l43axsmmhk[1], &ktuiv5qnvo2.efnxscvqak[1]);
muDoubleScalarSinCos(ktuiv5qnvo2.p00wdzmb30[2], &ktuiv5qnvo2.l43axsmmhk[2], &ktuiv5qnvo2.efnxscvqak[2]);
ktuiv5qnvo2.f5tlon0xoe[0] = ktuiv5qnvo2.efnxscvqak[0] * ktuiv5qnvo2.efnxscvqak[1];
ktuiv5qnvo2.f5tlon0xoe[1] = ktuiv5qnvo2.l43axsmmhk[1] * ktuiv5qnvo2.l43axsmmhk[2] * ktuiv5qnvo2.efnxscvqak[0] - ktuiv5qnvo2.l43axsmmhk[0] * ktuiv5qnvo2.efnxscvqak[2];
ktuiv5qnvo2.f5tlon0xoe[2] = ktuiv5qnvo2.l43axsmmhk[1] * ktuiv5qnvo2.efnxscvqak[2] * ktuiv5qnvo2.efnxscvqak[0] + ktuiv5qnvo2.l43axsmmhk[0] * ktuiv5qnvo2.l43axsmmhk[2];
ktuiv5qnvo2.f5tlon0xoe[3] = ktuiv5qnvo2.l43axsmmhk[0] * ktuiv5qnvo2.efnxscvqak[1];
ktuiv5qnvo2.f5tlon0xoe[4] = ktuiv5qnvo2.l43axsmmhk[1] * ktuiv5qnvo2.l43axsmmhk[2] * ktuiv5qnvo2.l43axsmmhk[0] + ktuiv5qnvo2.efnxscvqak[0] * ktuiv5qnvo2.efnxscvqak[2];
ktuiv5qnvo2.f5tlon0xoe[5] = ktuiv5qnvo2.l43axsmmhk[1] * ktuiv5qnvo2.efnxscvqak[2] * ktuiv5qnvo2.l43axsmmhk[0] - ktuiv5qnvo2.efnxscvqak[0] * ktuiv5qnvo2.l43axsmmhk[2];
ktuiv5qnvo2.f5tlon0xoe[6] = -ktuiv5qnvo2.l43axsmmhk[1];
ktuiv5qnvo2.f5tlon0xoe[7] = ktuiv5qnvo2.efnxscvqak[1] * ktuiv5qnvo2.l43axsmmhk[2];
ktuiv5qnvo2.f5tlon0xoe[8] = ktuiv5qnvo2.efnxscvqak[1] * ktuiv5qnvo2.efnxscvqak[2];
ktuiv5qnvo2.lgwwge3abs = mft3luzpor.Gain_Gain_df5argzxes * ktuiv5qnvo2.g2wnwmqohu;
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.apgcf2rwum = 0.017453292519943295 * ktuiv5qnvo2.lgwwge3abs;
ktuiv5qnvo2.ct0bps315h[0] = ktuiv5qnvo2.apgcf2rwum;
ktuiv5qnvo2.ct0bps315h[1] = ktuiv5qnvo2.dnp3mvdsnk[0];
ktuiv5qnvo2.ct0bps315h[2] = ktuiv5qnvo2.dnp3mvdsnk[1];
muDoubleScalarSinCos(ktuiv5qnvo2.ct0bps315h[0], &ktuiv5qnvo2.ha0zi0ujfq[0], &ktuiv5qnvo2.kv2f1twl2r[0]);
muDoubleScalarSinCos(ktuiv5qnvo2.ct0bps315h[1], &ktuiv5qnvo2.ha0zi0ujfq[1], &ktuiv5qnvo2.kv2f1twl2r[1]);
muDoubleScalarSinCos(ktuiv5qnvo2.ct0bps315h[2], &ktuiv5qnvo2.ha0zi0ujfq[2], &ktuiv5qnvo2.kv2f1twl2r[2]);
ktuiv5qnvo2.erzxlkf332[0] = ktuiv5qnvo2.kv2f1twl2r[0] * ktuiv5qnvo2.kv2f1twl2r[1];
ktuiv5qnvo2.erzxlkf332[1] = ktuiv5qnvo2.ha0zi0ujfq[1] * ktuiv5qnvo2.ha0zi0ujfq[2] * ktuiv5qnvo2.kv2f1twl2r[0] - ktuiv5qnvo2.ha0zi0ujfq[0] * ktuiv5qnvo2.kv2f1twl2r[2];
ktuiv5qnvo2.erzxlkf332[2] = ktuiv5qnvo2.ha0zi0ujfq[1] * ktuiv5qnvo2.kv2f1twl2r[2] * ktuiv5qnvo2.kv2f1twl2r[0] + ktuiv5qnvo2.ha0zi0ujfq[0] * ktuiv5qnvo2.ha0zi0ujfq[2];
ktuiv5qnvo2.erzxlkf332[3] = ktuiv5qnvo2.ha0zi0ujfq[0] * ktuiv5qnvo2.kv2f1twl2r[1];
ktuiv5qnvo2.erzxlkf332[4] = ktuiv5qnvo2.ha0zi0ujfq[1] * ktuiv5qnvo2.ha0zi0ujfq[2] * ktuiv5qnvo2.ha0zi0ujfq[0] + ktuiv5qnvo2.kv2f1twl2r[0] * ktuiv5qnvo2.kv2f1twl2r[2];
ktuiv5qnvo2.erzxlkf332[5] = ktuiv5qnvo2.ha0zi0ujfq[1] * ktuiv5qnvo2.kv2f1twl2r[2] * ktuiv5qnvo2.ha0zi0ujfq[0] - ktuiv5qnvo2.kv2f1twl2r[0] * ktuiv5qnvo2.ha0zi0ujfq[2];
ktuiv5qnvo2.erzxlkf332[6] = -ktuiv5qnvo2.ha0zi0ujfq[1];
ktuiv5qnvo2.erzxlkf332[7] = ktuiv5qnvo2.kv2f1twl2r[1] * ktuiv5qnvo2.ha0zi0ujfq[2];
ktuiv5qnvo2.erzxlkf332[8] = ktuiv5qnvo2.kv2f1twl2r[1] * ktuiv5qnvo2.kv2f1twl2r[2];
memcpy(&pData_p[0], &ktuiv5qnvo2.f5tlon0xoe[0], 9U * sizeof(real_T));
memcpy(&pData[0], &ktuiv5qnvo2.lfjfbysi2q[0], 9U * sizeof(real_T));
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    uTmp_idx_2 = pData[3 * degreeP3];
    month = pData[3 * degreeP3 + 1];
    bessDate = pData[3 * degreeP3 + 2];
    for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
        uTmp_idx_1 = uTmp_idx_2 * pData_p[degreeP1];
        uTmp_idx_1 += pData_p[degreeP1 + 3] * month;
        uTmp_idx_1 += pData_p[degreeP1 + 6] * bessDate;
        v1[degreeP1 + 3 * degreeP3] = uTmp_idx_1;
    }
}
memcpy(&pData_p[0], &ktuiv5qnvo2.erzxlkf332[0], 9U * sizeof(real_T));
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    uTmp_idx_1 = v1[3 * degreeP3];
    uTmp_idx_2 = v1[3 * degreeP3 + 1];
    uTmp_idx_0 = v1[3 * degreeP3 + 2];
    for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
        A = uTmp_idx_1 * pData_p[degreeP1];
        A += pData_p[degreeP1 + 3] * uTmp_idx_2;
        A += pData_p[degreeP1 + 6] * uTmp_idx_0;
        ktuiv5qnvo2.nwbsxiuy3l[degreeP1 + 3 * degreeP3] = A;
    }
}
memcpy(&pData_p[0], &ktuiv5qnvo2.d23dwgusi3[0], 9U * sizeof(real_T));
uTmp_idx_2 = ktuiv5qnvo2.iw0ifexhed[0];
month = ktuiv5qnvo2.iw0ifexhed[1];
bessDate = ktuiv5qnvo2.iw0ifexhed[2];
for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
    hour = pData_p[degreeP1] * uTmp_idx_2;
    ktuiv5qnvo2.pf1ffof0jp[3 * degreeP1] = ktuiv5qnvo2.nwbsxiuy3l[degreeP1];
    hour += pData_p[degreeP1 + 3] * month;
    ktuiv5qnvo2.pf1ffof0jp[3 * degreeP1 + 1] = ktuiv5qnvo2.nwbsxiuy3l[degreeP1 + 3];
    hour += pData_p[degreeP1 + 6] * bessDate;
    ktuiv5qnvo2.pf1ffof0jp[3 * degreeP1 + 2] = ktuiv5qnvo2.nwbsxiuy3l[degreeP1 + 6];
    ktuiv5qnvo2.c3v44lmtvv[degreeP1] = hour;
    ktuiv5qnvo2.o51202kguj[degreeP1] = ktuiv5qnvo2.ies4pk2yfw[degreeP1] + hour;
}
memcpy(&pData_p[0], &ktuiv5qnvo2.pf1ffof0jp[0], 9U * sizeof(real_T));
uTmp_idx_2 = ktuiv5qnvo2.knslt5kuoa[0];
month = ktuiv5qnvo2.knslt5kuoa[1];
bessDate = ktuiv5qnvo2.knslt5kuoa[2];
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    hour = pData_p[degreeP3] * uTmp_idx_2;
    hour += pData_p[degreeP3 + 3] * month;
    hour += pData_p[degreeP3 + 6] * bessDate;
    ktuiv5qnvo2.mbegyyvbpy[degreeP3] = hour;
}
memcpy(&pData_p[0], &ktuiv5qnvo2.pf1ffof0jp[0], 9U * sizeof(real_T));
uTmp_idx_2 = ktuiv5qnvo2.o51202kguj[0];
month = ktuiv5qnvo2.o51202kguj[1];
bessDate = ktuiv5qnvo2.o51202kguj[2];
for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
    hour = pData_p[degreeP1] * uTmp_idx_2;
    hour += pData_p[degreeP1 + 3] * month;
    hour += pData_p[degreeP1 + 6] * bessDate;
    ktuiv5qnvo2.opqiir1dtt[degreeP1] = hour;
    ktuiv5qnvo2.nvup532gka[degreeP1] = mft3luzpor.Gain1_Gain_orieqgtt02 * ktuiv5qnvo2.pk5pkkw0ge[degreeP1];
}
uTmp_idx_0 = ktuiv5qnvo2.guuurijbhk[0];
uTmp_idx_1 = ktuiv5qnvo2.guuurijbhk[1];
uTmp_idx_2 = ktuiv5qnvo2.guuurijbhk[2];
beta = muDoubleScalarAtan2(uTmp_idx_2, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + uTmp_idx_1 * uTmp_idx_1) * 0.99664718933525254);
A = muDoubleScalarAtan2(42841.311513313573 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + uTmp_idx_2, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + uTmp_idx_1 * uTmp_idx_1) - 42697.672707179969 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
betaNew = muDoubleScalarAtan2(0.99664718933525254 * muDoubleScalarSin(A), muDoubleScalarCos(A));
count = 0;
while ((beta != betaNew) && (count < 5)) {
    beta = betaNew;
    A = muDoubleScalarAtan2(42841.311513313573 * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) * muDoubleScalarSin(beta) + uTmp_idx_2, muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + uTmp_idx_1 * uTmp_idx_1) - 42697.672707179969 * muDoubleScalarCos(beta) * muDoubleScalarCos(beta) * muDoubleScalarCos(beta));
    betaNew = muDoubleScalarAtan2(0.99664718933525254 * muDoubleScalarSin(A), muDoubleScalarCos(A));
    count++;
}
flat = muDoubleScalarAbs(A);
beta = A;
lonNew = muDoubleScalarAtan2(uTmp_idx_1, uTmp_idx_0);
if (flat > 3.1415926535897931) {
    beta = muDoubleScalarMod(A + 3.1415926535897931, 6.2831853071795862) - 3.1415926535897931;
    flat = muDoubleScalarAbs(beta);
}
if (flat > 1.5707963267948966) {
    lonNew = muDoubleScalarAtan2(uTmp_idx_1, uTmp_idx_0) + 3.1415926535897931;
    beta = (1.5707963267948966 - (flat - 1.5707963267948966)) * muDoubleScalarSign(beta);
}
if ((muDoubleScalarAbs(lonNew) > 3.1415926535897931) && (muDoubleScalarAbs(lonNew) > 3.1415926535897931)) {
    lonNew = muDoubleScalarRem(lonNew, 6.2831853071795862) - trunc(muDoubleScalarRem(lonNew, 6.2831853071795862) / 3.1415926535897931) * 6.2831853071795862;
}
ktuiv5qnvo2.euuuevzxu5[0] = beta * 180.0 / 3.1415926535897931;
ktuiv5qnvo2.euuuevzxu5[1] = lonNew * 180.0 / 3.1415926535897931;
ktuiv5qnvo2.extyfnt5r4 = ((6.378137E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943799901413165) * 0.0066943799901413165 * muDoubleScalarSin(A) + uTmp_idx_2) * muDoubleScalarSin(A) + muDoubleScalarSqrt(uTmp_idx_0 * uTmp_idx_0 + uTmp_idx_1 * uTmp_idx_1) * muDoubleScalarCos(A)) - 6.378137E+6 / muDoubleScalarSqrt(1.0 - muDoubleScalarSin(A) * muDoubleScalarSin(A) * 0.0066943799901413165);
/* Unit Conversion - from: deg to: rad
 Expression: output = (0.0174533*input) + (0) */
ktuiv5qnvo2.lcgibqnh5g[0] = 0.017453292519943295 * ktuiv5qnvo2.euuuevzxu5[0];
muDoubleScalarSinCos(ktuiv5qnvo2.lcgibqnh5g[0], &ktuiv5qnvo2.j3x2kcuvfg[0], &ktuiv5qnvo2.lc1qx0elmn[0]);
ktuiv5qnvo2.lcgibqnh5g[1] = 0.017453292519943295 * ktuiv5qnvo2.euuuevzxu5[1];
muDoubleScalarSinCos(ktuiv5qnvo2.lcgibqnh5g[1], &ktuiv5qnvo2.j3x2kcuvfg[1], &ktuiv5qnvo2.lc1qx0elmn[1]);
ktuiv5qnvo2.gtwk3uafg1 = ktuiv5qnvo2.j3x2kcuvfg[0] * ktuiv5qnvo2.lc1qx0elmn[1];
ktuiv5qnvo2.cmhjoy30bk[0] = -ktuiv5qnvo2.gtwk3uafg1;
ktuiv5qnvo2.mgqrjcv3gu = ktuiv5qnvo2.j3x2kcuvfg[0] * ktuiv5qnvo2.j3x2kcuvfg[1];
ktuiv5qnvo2.cmhjoy30bk[3] = -ktuiv5qnvo2.mgqrjcv3gu;
ktuiv5qnvo2.cmhjoy30bk[1] = -ktuiv5qnvo2.j3x2kcuvfg[1];
ktuiv5qnvo2.c11sdyy513 = ktuiv5qnvo2.lc1qx0elmn[0] * ktuiv5qnvo2.lc1qx0elmn[1];
ktuiv5qnvo2.cmhjoy30bk[2] = -ktuiv5qnvo2.c11sdyy513;
ktuiv5qnvo2.pofk10xeiv = ktuiv5qnvo2.lc1qx0elmn[0] * ktuiv5qnvo2.j3x2kcuvfg[1];
ktuiv5qnvo2.cmhjoy30bk[5] = -ktuiv5qnvo2.pofk10xeiv;
ktuiv5qnvo2.cmhjoy30bk[8] = -ktuiv5qnvo2.j3x2kcuvfg[0];
ktuiv5qnvo2.cmhjoy30bk[4] = ktuiv5qnvo2.lc1qx0elmn[1];
ktuiv5qnvo2.cmhjoy30bk[6] = ktuiv5qnvo2.lc1qx0elmn[0];
ktuiv5qnvo2.cmhjoy30bk[7] = mft3luzpor.Constant_Value_ma0t3mpr24;
muDoubleScalarSinCos(ktuiv5qnvo2.nvup532gka[0], &ktuiv5qnvo2.gxxp0akd1l[0], &ktuiv5qnvo2.mioxsex0pl[0]);
muDoubleScalarSinCos(ktuiv5qnvo2.nvup532gka[1], &ktuiv5qnvo2.gxxp0akd1l[1], &ktuiv5qnvo2.mioxsex0pl[1]);
muDoubleScalarSinCos(ktuiv5qnvo2.nvup532gka[2], &ktuiv5qnvo2.gxxp0akd1l[2], &ktuiv5qnvo2.mioxsex0pl[2]);
ktuiv5qnvo2.nhhs1xeelz[0] = ktuiv5qnvo2.mioxsex0pl[0] * ktuiv5qnvo2.mioxsex0pl[1];
ktuiv5qnvo2.nhhs1xeelz[1] = ktuiv5qnvo2.gxxp0akd1l[1] * ktuiv5qnvo2.gxxp0akd1l[2] * ktuiv5qnvo2.mioxsex0pl[0] - ktuiv5qnvo2.gxxp0akd1l[0] * ktuiv5qnvo2.mioxsex0pl[2];
ktuiv5qnvo2.nhhs1xeelz[2] = ktuiv5qnvo2.gxxp0akd1l[1] * ktuiv5qnvo2.mioxsex0pl[2] * ktuiv5qnvo2.mioxsex0pl[0] + ktuiv5qnvo2.gxxp0akd1l[0] * ktuiv5qnvo2.gxxp0akd1l[2];
ktuiv5qnvo2.nhhs1xeelz[3] = ktuiv5qnvo2.gxxp0akd1l[0] * ktuiv5qnvo2.mioxsex0pl[1];
ktuiv5qnvo2.nhhs1xeelz[4] = ktuiv5qnvo2.gxxp0akd1l[1] * ktuiv5qnvo2.gxxp0akd1l[2] * ktuiv5qnvo2.gxxp0akd1l[0] + ktuiv5qnvo2.mioxsex0pl[0] * ktuiv5qnvo2.mioxsex0pl[2];
ktuiv5qnvo2.nhhs1xeelz[5] = ktuiv5qnvo2.gxxp0akd1l[1] * ktuiv5qnvo2.mioxsex0pl[2] * ktuiv5qnvo2.gxxp0akd1l[0] - ktuiv5qnvo2.mioxsex0pl[0] * ktuiv5qnvo2.gxxp0akd1l[2];
ktuiv5qnvo2.nhhs1xeelz[6] = -ktuiv5qnvo2.gxxp0akd1l[1];
ktuiv5qnvo2.nhhs1xeelz[7] = ktuiv5qnvo2.mioxsex0pl[1] * ktuiv5qnvo2.gxxp0akd1l[2];
ktuiv5qnvo2.nhhs1xeelz[8] = ktuiv5qnvo2.mioxsex0pl[1] * ktuiv5qnvo2.mioxsex0pl[2];
memcpy(&pData_p[0], &ktuiv5qnvo2.nhhs1xeelz[0], 9U * sizeof(real_T));
memcpy(&pData[0], &ktuiv5qnvo2.cmhjoy30bk[0], 9U * sizeof(real_T));
for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
    uTmp_idx_2 = pData[3 * degreeP3];
    month = pData[3 * degreeP3 + 1];
    bessDate = pData[3 * degreeP3 + 2];
    for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
        uTmp_idx_0 = uTmp_idx_2 * pData_p[degreeP1];
        uTmp_idx_0 += pData_p[degreeP1 + 3] * month;
        uTmp_idx_0 += pData_p[degreeP1 + 6] * bessDate;
        ktuiv5qnvo2.gdkoorrli3[degreeP1 + 3 * degreeP3] = uTmp_idx_0;
    }
}
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    rtPrevAction = dzu2rlzxmw1.lfr0buot3d;
    rtAction = -1;
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        if (mft3luzpor.DirectionCosineMatrixtoQuaternions_action != 1.0) {
            rtAction = 0;
        }
        dzu2rlzxmw1.lfr0buot3d = rtAction;
    } else {
        rtAction = dzu2rlzxmw1.lfr0buot3d;
    }
    if (rtPrevAction != rtAction) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        if (rtPrevAction == 0) {
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 7, 1)>\
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            switch (dzu2rlzxmw1.o2jni4uypc) {
              case 0:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 0, 1)>\
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                switch (dzu2rlzxmw1.nhnftpzwqv) {
                  case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                    break;
                  case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                    break;
                }
                dzu2rlzxmw1.nhnftpzwqv = -1;
                break;
              case 1:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 1, 1)>\
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                switch (dzu2rlzxmw1.c3ovqbbxtp) {
                  case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                    break;
                  case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                    break;
                }
                dzu2rlzxmw1.c3ovqbbxtp = -1;
                break;
            }
            dzu2rlzxmw1.o2jni4uypc = -1;
        }
    }
    if (rtAction == 0) {
        if (rtPrevAction != 0) {
            uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
            if (%<(SLibCG_SE(LibGetTaskTime(1)))> != uTmp_idx_0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 7, 0)>\
        }
        if (%<(SLibCGIRIsSampleHit(1, 12))>) {
            memcpy(&ktuiv5qnvo2.hcq55v0ypr[0], &ktuiv5qnvo2.gdkoorrli3[0], 9U * sizeof(real_T));
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[0];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[4];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[8];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.hld5r4mpcx = uTmp_idx_0;
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[0];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[5];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[7];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.lfe4kp3d0k = uTmp_idx_0;
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[1];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[3];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[8];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.lwdhbbp10z = uTmp_idx_0;
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[2];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[3];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[7];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.i4slsncpux = uTmp_idx_0;
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[1];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[5];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[6];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.dscvoea02i = uTmp_idx_0;
            uTmp_idx_0 = ktuiv5qnvo2.hcq55v0ypr[2];
            uTmp_idx_1 = ktuiv5qnvo2.hcq55v0ypr[4];
            uTmp_idx_2 = ktuiv5qnvo2.hcq55v0ypr[6];
            uTmp_idx_0 *= uTmp_idx_1;
            uTmp_idx_0 *= uTmp_idx_2;
            ktuiv5qnvo2.mjxvb543yv = uTmp_idx_0;
            ktuiv5qnvo2.b0k23yli23 = ((((ktuiv5qnvo2.hld5r4mpcx - ktuiv5qnvo2.lfe4kp3d0k) - ktuiv5qnvo2.lwdhbbp10z) + ktuiv5qnvo2.i4slsncpux) + ktuiv5qnvo2.dscvoea02i) - ktuiv5qnvo2.mjxvb543yv;
            ktuiv5qnvo2.ia4km4unew = ktuiv5qnvo2.b0k23yli23 + mft3luzpor.Bias_Bias;
            ktuiv5qnvo2.bri4rma4s3 = muDoubleScalarAbs(ktuiv5qnvo2.ia4km4unew);
            ktuiv5qnvo2.e2i0xale0b = (ktuiv5qnvo2.bri4rma4s3 > mft3luzpor.DirectionCosineMatrixtoQuaternions_tolerance);
            for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
                ktuiv5qnvo2.g5deafji42[3 * degreeP3] = ktuiv5qnvo2.gdkoorrli3[degreeP3];
                ktuiv5qnvo2.g5deafji42[3 * degreeP3 + 1] = ktuiv5qnvo2.gdkoorrli3[degreeP3 + 3];
                ktuiv5qnvo2.g5deafji42[3 * degreeP3 + 2] = ktuiv5qnvo2.gdkoorrli3[degreeP3 + 6];
            }
            memcpy(&pData_p[0], &ktuiv5qnvo2.g5deafji42[0], 9U * sizeof(real_T));
            memcpy(&pData[0], &ktuiv5qnvo2.gdkoorrli3[0], 9U * sizeof(real_T));
            for (degreeP3 = 0; degreeP3 < 3; degreeP3++) {
                uTmp_idx_2 = pData[3 * degreeP3];
                month = pData[3 * degreeP3 + 1];
                bessDate = pData[3 * degreeP3 + 2];
                for (degreeP1 = 0; degreeP1 < 3; degreeP1++) {
                    uTmp_idx_0 = uTmp_idx_2 * pData_p[degreeP1];
                    uTmp_idx_0 += pData_p[degreeP1 + 3] * month;
                    uTmp_idx_0 += pData_p[degreeP1 + 6] * bessDate;
                    ktuiv5qnvo2.bf2gkvzvhk[degreeP1 + 3 * degreeP3] = uTmp_idx_0;
                }
            }
            for (degreeP1 = 0; degreeP1 < 9; degreeP1++) {
                ktuiv5qnvo2.hlgtmfsum4[degreeP1] = ktuiv5qnvo2.bf2gkvzvhk[degreeP1] + mft3luzpor.Bias1_Bias[degreeP1];
                uTmp_idx_0 = muDoubleScalarAbs(ktuiv5qnvo2.hlgtmfsum4[degreeP1]);
                ktuiv5qnvo2.n1ulhizcn4[degreeP1] = uTmp_idx_0;
                ktuiv5qnvo2.i5yf34r0pc[degreeP1] = (uTmp_idx_0 > mft3luzpor.DirectionCosineMatrixtoQuaternions_tolerance);
            }
            guard1 = ktuiv5qnvo2.i5yf34r0pc[0];
            for (degreeP3 = 0; degreeP3 < 8; degreeP3++) {
                guard1 = (guard1 || ktuiv5qnvo2.i5yf34r0pc[degreeP3 + 1]);
            }
            ktuiv5qnvo2.cbjg4akslo = guard1;
            rtPrevAction = dzu2rlzxmw1.o2jni4uypc;
            rtAction = -1;
            if (ktuiv5qnvo2.e2i0xale0b) {
                rtAction = 0;
            } else if (ktuiv5qnvo2.cbjg4akslo) {
                rtAction = 1;
            }
            dzu2rlzxmw1.o2jni4uypc = rtAction;
            if (rtPrevAction != rtAction) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                switch (rtPrevAction) {
                  case 0:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 0, 1)>\
                    %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                    switch (dzu2rlzxmw1.nhnftpzwqv) {
                      case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        break;
                      case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        break;
                    }
                    dzu2rlzxmw1.nhnftpzwqv = -1;
                    break;
                  case 1:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 1, 1)>\
                    %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                    switch (dzu2rlzxmw1.c3ovqbbxtp) {
                      case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        break;
                      case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        break;
                    }
                    dzu2rlzxmw1.c3ovqbbxtp = -1;
                    break;
                }
            }
            switch (rtAction) {
              case 0:
                if (rtAction != rtPrevAction) {
                    uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
                    if (%<(SLibCG_SE(LibGetTaskTime(1)))> != uTmp_idx_0) {
                        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                    }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 0, 0)>\
                }
                if (%<(SLibCGIRIsSampleHit(1, 9))>) {
                    rtPrevAction = dzu2rlzxmw1.nhnftpzwqv;
                    rtAction = -1;
                    if (mft3luzpor.DirectionCosineMatrixtoQuaternions_action == 2.0) {
                        rtAction = 0;
                    } else if (mft3luzpor.DirectionCosineMatrixtoQuaternions_action == 3.0) {
                        rtAction = 1;
                    }
                    dzu2rlzxmw1.nhnftpzwqv = rtAction;
                    if (rtPrevAction != rtAction) {
                        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                        switch (rtPrevAction) {
                          case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                            break;
                          case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("cqvdyxqb5g",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("cqvdyxqb5g", ["%<_modelSS>"], 8, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                            break;
                        }
                    }
                    switch (rtAction) {
                      case 0:
                        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("olzoabygng",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("olzoabygng", ["%<_modelSS>"], 8, 0, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        }
                        break;
                      case 1:
                        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[8], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("olzoabygng",8,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("olzoabygng", ["%<_modelSS>"], 8, 1, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[8]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        }
                        break;
                    }
                }
                srUpdateBC(dzu2rlzxmw1.n4rxz4dznf);
                break;
              case 1:
                if (rtAction != rtPrevAction) {
                    uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
                    if (%<(SLibCG_SE(LibGetTaskTime(1)))> != uTmp_idx_0) {
                        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                    }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(12, 1, 0)>\
                }
                if (%<(SLibCGIRIsSampleHit(1, 11))>) {
                    rtPrevAction = dzu2rlzxmw1.c3ovqbbxtp;
                    rtAction = -1;
                    if (mft3luzpor.DirectionCosineMatrixtoQuaternions_action == 2.0) {
                        rtAction = 0;
                    } else if (mft3luzpor.DirectionCosineMatrixtoQuaternions_action == 3.0) {
                        rtAction = 1;
                    }
                    dzu2rlzxmw1.c3ovqbbxtp = rtAction;
                    if (rtPrevAction != rtAction) {
                        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                        switch (rtPrevAction) {
                          case 0:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 0, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                            break;
                          case 1:
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Disable",0)
%if SLibCG_SystemFcnArgAccessed("nvjygc22lj",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("nvjygc22lj", ["%<_modelSS>"], 10, 1, 14, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                            break;
                        }
                    }
                    switch (rtAction) {
                      case 0:
                        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("ddjc5j5g3h",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("ddjc5j5g3h", ["%<_modelSS>"], 10, 0, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        }
                        break;
                      case 1:
                        if (rtAction != rtPrevAction) {
%if !SLibCGSysFcnIsEmptyForTid(CompiledModel.System[10], "Enable",0)
%if SLibCG_SystemFcnArgAccessed("ddjc5j5g3h",10,0)
%assign _modelSS = RTMGetModelSSFromIR()
%endif

%<SLibCGIRGenReusableSysCall("ddjc5j5g3h", ["%<_modelSS>"], 10, 1, 13, 0, 6, 13)>\
%assign ss = ::CompiledModel.System[10]
%if !LibSystemIsInlined(ss)
;
%else
\
%endif
%endif
                        }
                        break;
                    }
                }
                srUpdateBC(dzu2rlzxmw1.a3qoyxgbtd);
                break;
            }
        }
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.j4vy4l4h0i);
        }
    }
}
uTmp_idx_0 = ktuiv5qnvo2.gdkoorrli3[0];
uTmp_idx_1 = ktuiv5qnvo2.gdkoorrli3[4];
uTmp_idx_2 = ktuiv5qnvo2.gdkoorrli3[8];
uTmp_idx_0 += uTmp_idx_1;
uTmp_idx_0 += uTmp_idx_2;
ktuiv5qnvo2.infjo0hum0 = uTmp_idx_0;
rtPrevAction = dzu2rlzxmw1.gzwsybef1l;
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    rtAction = (int8_T)!(ktuiv5qnvo2.infjo0hum0 > 0.0);
    dzu2rlzxmw1.gzwsybef1l = rtAction;
} else {
    rtAction = dzu2rlzxmw1.gzwsybef1l;
}
if (rtPrevAction != rtAction) {
    %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
    switch (rtPrevAction) {
      case 0:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 8, 1)>\
        break;
      case 1:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 9, 1)>\
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        switch (dzu2rlzxmw1.jwmfebhkdp) {
          case 0:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 0, 1)>\
            break;
          case 1:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 1, 1)>\
            break;
          case 2:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 2, 1)>\
            break;
        }
        dzu2rlzxmw1.jwmfebhkdp = -1;
        break;
    }
}
if (rtAction == 0) {
    if (rtPrevAction != 0) {
        uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
        if (%<(SLibCG_SE(LibGetTaskTime(0)))> != uTmp_idx_0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 8, 0)>\
    }
    ktuiv5qnvo2.e2fhpl4uaz = ktuiv5qnvo2.infjo0hum0 + mft3luzpor.Constant_Value;
    uTmp_idx_0 = ktuiv5qnvo2.e2fhpl4uaz;
    if (%<(LibIsMajorTimeStep())>) {
        if (dzu2rlzxmw1.hehcr1ojvh != 0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
            dzu2rlzxmw1.hehcr1ojvh = 0;
        }
        ktuiv5qnvo2.kj5xpjkk2m = muDoubleScalarSqrt(ktuiv5qnvo2.e2fhpl4uaz);
    } else {
        dUT2UT1 = ktuiv5qnvo2.e2fhpl4uaz;
        if (dUT2UT1 < 0.0) {
            ktuiv5qnvo2.kj5xpjkk2m = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
        } else {
            ktuiv5qnvo2.kj5xpjkk2m = muDoubleScalarSqrt(dUT2UT1);
        }
        if (uTmp_idx_0 < 0.0) {
            dzu2rlzxmw1.hehcr1ojvh = 1;
        }
    }
    ktuiv5qnvo2.a00doxjmna[0] = mft3luzpor.Gain_Gain_kivbr5qcsu * ktuiv5qnvo2.kj5xpjkk2m;
    ktuiv5qnvo2.plsuigbxqp = mft3luzpor.Gain1_Gain_moqth4txth * ktuiv5qnvo2.kj5xpjkk2m;
    ktuiv5qnvo2.n1kynseu14 = ktuiv5qnvo2.gdkoorrli3[7] - ktuiv5qnvo2.gdkoorrli3[5];
    ktuiv5qnvo2.g2paygi1ez = ktuiv5qnvo2.gdkoorrli3[2] - ktuiv5qnvo2.gdkoorrli3[6];
    ktuiv5qnvo2.hyndz00i1k = ktuiv5qnvo2.gdkoorrli3[3] - ktuiv5qnvo2.gdkoorrli3[1];
    ktuiv5qnvo2.a00doxjmna[1] = ktuiv5qnvo2.n1kynseu14 / ktuiv5qnvo2.plsuigbxqp;
    ktuiv5qnvo2.a00doxjmna[2] = ktuiv5qnvo2.g2paygi1ez / ktuiv5qnvo2.plsuigbxqp;
    ktuiv5qnvo2.a00doxjmna[3] = ktuiv5qnvo2.hyndz00i1k / ktuiv5qnvo2.plsuigbxqp;
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        srUpdateBC(dzu2rlzxmw1.gv5etq1ziu);
    }
} else {
    if (rtAction != rtPrevAction) {
        uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
        if (%<(SLibCG_SE(LibGetTaskTime(0)))> != uTmp_idx_0) {
            %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(13, 9, 0)>\
    }
    rtPrevAction = dzu2rlzxmw1.jwmfebhkdp;
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        if ((ktuiv5qnvo2.gdkoorrli3[4] > ktuiv5qnvo2.gdkoorrli3[0]) && (ktuiv5qnvo2.gdkoorrli3[4] > ktuiv5qnvo2.gdkoorrli3[8])) {
            rtAction = 0;
        } else if (ktuiv5qnvo2.gdkoorrli3[8] > ktuiv5qnvo2.gdkoorrli3[0]) {
            rtAction = 1;
        } else {
            rtAction = 2;
        }
        dzu2rlzxmw1.jwmfebhkdp = rtAction;
    } else {
        rtAction = dzu2rlzxmw1.jwmfebhkdp;
    }
    if (rtPrevAction != rtAction) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        switch (rtPrevAction) {
          case 0:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 0, 1)>\
            break;
          case 1:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 1, 1)>\
            break;
          case 2:
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 2, 1)>\
            break;
        }
    }
    switch (rtAction) {
      case 0:
        if (rtAction != rtPrevAction) {
            uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
            if (%<(SLibCG_SE(LibGetTaskTime(0)))> != uTmp_idx_0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 0, 0)>\
        }
        ktuiv5qnvo2.jkubctpv3f = ((ktuiv5qnvo2.gdkoorrli3[4] - ktuiv5qnvo2.gdkoorrli3[0]) - ktuiv5qnvo2.gdkoorrli3[8]) + mft3luzpor.Constant_Value_ow0d0ucmo4;
        uTmp_idx_0 = ktuiv5qnvo2.jkubctpv3f;
        if (%<(LibIsMajorTimeStep())>) {
            if (dzu2rlzxmw1.jnmhg3kfyb != 0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
                dzu2rlzxmw1.jnmhg3kfyb = 0;
            }
            ktuiv5qnvo2.bl1ublhpfw = muDoubleScalarSqrt(ktuiv5qnvo2.jkubctpv3f);
        } else {
            dUT2UT1 = ktuiv5qnvo2.jkubctpv3f;
            if (dUT2UT1 < 0.0) {
                ktuiv5qnvo2.bl1ublhpfw = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
            } else {
                ktuiv5qnvo2.bl1ublhpfw = muDoubleScalarSqrt(dUT2UT1);
            }
            if (uTmp_idx_0 < 0.0) {
                dzu2rlzxmw1.jnmhg3kfyb = 1;
            }
        }
        ktuiv5qnvo2.a00doxjmna[2] = mft3luzpor.Gain_Gain_izphj4ykdx * ktuiv5qnvo2.bl1ublhpfw;
        ktuiv5qnvo2.fnh0401ibb = ktuiv5qnvo2.gdkoorrli3[1] + ktuiv5qnvo2.gdkoorrli3[3];
        ktuiv5qnvo2.kv1nyssjek = ktuiv5qnvo2.gdkoorrli3[5] + ktuiv5qnvo2.gdkoorrli3[7];
        ktuiv5qnvo2.ain1pbpzb4 = ktuiv5qnvo2.gdkoorrli3[2] - ktuiv5qnvo2.gdkoorrli3[6];
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            dzu2rlzxmw1.ct5m3lxryd = (ktuiv5qnvo2.bl1ublhpfw != 0.0);
        }
        if (dzu2rlzxmw1.ct5m3lxryd) {
            ktuiv5qnvo2.jdysjfbsej[0] = mft3luzpor.Constant1_Value;
            ktuiv5qnvo2.jdysjfbsej[1] = ktuiv5qnvo2.bl1ublhpfw;
        } else {
            ktuiv5qnvo2.jdysjfbsej[0] = mft3luzpor.Constant2_Value[0];
            ktuiv5qnvo2.jdysjfbsej[1] = mft3luzpor.Constant2_Value[1];
        }
        ktuiv5qnvo2.bsvcitorkd = ktuiv5qnvo2.jdysjfbsej[0] / ktuiv5qnvo2.jdysjfbsej[1];
        ktuiv5qnvo2.bck5z40k1v[0] = ktuiv5qnvo2.fnh0401ibb * ktuiv5qnvo2.bsvcitorkd;
        ktuiv5qnvo2.bck5z40k1v[1] = ktuiv5qnvo2.kv1nyssjek * ktuiv5qnvo2.bsvcitorkd;
        ktuiv5qnvo2.bck5z40k1v[2] = ktuiv5qnvo2.ain1pbpzb4 * ktuiv5qnvo2.bsvcitorkd;
        ktuiv5qnvo2.a00doxjmna[1] = mft3luzpor.Gain1_Gain_iar5edajmr * ktuiv5qnvo2.bck5z40k1v[0];
        ktuiv5qnvo2.a00doxjmna[3] = mft3luzpor.Gain3_Gain * ktuiv5qnvo2.bck5z40k1v[1];
        ktuiv5qnvo2.a00doxjmna[0] = mft3luzpor.Gain4_Gain * ktuiv5qnvo2.bck5z40k1v[2];
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.fkef5z4gjh);
        }
        break;
      case 1:
        if (rtAction != rtPrevAction) {
            uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
            if (%<(SLibCG_SE(LibGetTaskTime(0)))> != uTmp_idx_0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 1, 0)>\
        }
        ktuiv5qnvo2.mby2zpgi0o = ((ktuiv5qnvo2.gdkoorrli3[8] - ktuiv5qnvo2.gdkoorrli3[0]) - ktuiv5qnvo2.gdkoorrli3[4]) + mft3luzpor.Constant_Value_hx1erq5der;
        uTmp_idx_0 = ktuiv5qnvo2.mby2zpgi0o;
        if (%<(LibIsMajorTimeStep())>) {
            if (dzu2rlzxmw1.cqhfzkqvew != 0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
                dzu2rlzxmw1.cqhfzkqvew = 0;
            }
            ktuiv5qnvo2.f4snyiph1p = muDoubleScalarSqrt(ktuiv5qnvo2.mby2zpgi0o);
        } else {
            dUT2UT1 = ktuiv5qnvo2.mby2zpgi0o;
            if (dUT2UT1 < 0.0) {
                ktuiv5qnvo2.f4snyiph1p = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
            } else {
                ktuiv5qnvo2.f4snyiph1p = muDoubleScalarSqrt(dUT2UT1);
            }
            if (uTmp_idx_0 < 0.0) {
                dzu2rlzxmw1.cqhfzkqvew = 1;
            }
        }
        ktuiv5qnvo2.a00doxjmna[3] = mft3luzpor.Gain_Gain_evf1m0norx * ktuiv5qnvo2.f4snyiph1p;
        ktuiv5qnvo2.mq2mngxx4p = ktuiv5qnvo2.gdkoorrli3[2] + ktuiv5qnvo2.gdkoorrli3[6];
        ktuiv5qnvo2.hc1xpq3lrx = ktuiv5qnvo2.gdkoorrli3[5] + ktuiv5qnvo2.gdkoorrli3[7];
        ktuiv5qnvo2.lwsqkx2jpk = ktuiv5qnvo2.gdkoorrli3[3] - ktuiv5qnvo2.gdkoorrli3[1];
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            dzu2rlzxmw1.f3qlbdflbf = (ktuiv5qnvo2.f4snyiph1p != 0.0);
        }
        if (dzu2rlzxmw1.f3qlbdflbf) {
            ktuiv5qnvo2.lqajvqev2l[0] = mft3luzpor.Constant1_Value_i1g2sgu4pn;
            ktuiv5qnvo2.lqajvqev2l[1] = ktuiv5qnvo2.f4snyiph1p;
        } else {
            ktuiv5qnvo2.lqajvqev2l[0] = mft3luzpor.Constant2_Value_g1l3jouubp[0];
            ktuiv5qnvo2.lqajvqev2l[1] = mft3luzpor.Constant2_Value_g1l3jouubp[1];
        }
        ktuiv5qnvo2.dlvlrswtgl = ktuiv5qnvo2.lqajvqev2l[0] / ktuiv5qnvo2.lqajvqev2l[1];
        ktuiv5qnvo2.fhmj2yfrou[0] = ktuiv5qnvo2.mq2mngxx4p * ktuiv5qnvo2.dlvlrswtgl;
        ktuiv5qnvo2.fhmj2yfrou[1] = ktuiv5qnvo2.hc1xpq3lrx * ktuiv5qnvo2.dlvlrswtgl;
        ktuiv5qnvo2.fhmj2yfrou[2] = ktuiv5qnvo2.lwsqkx2jpk * ktuiv5qnvo2.dlvlrswtgl;
        ktuiv5qnvo2.a00doxjmna[1] = mft3luzpor.Gain1_Gain_o3yrxmmz42 * ktuiv5qnvo2.fhmj2yfrou[0];
        ktuiv5qnvo2.a00doxjmna[2] = mft3luzpor.Gain2_Gain * ktuiv5qnvo2.fhmj2yfrou[1];
        ktuiv5qnvo2.a00doxjmna[0] = mft3luzpor.Gain3_Gain_cq02yt1jxu * ktuiv5qnvo2.fhmj2yfrou[2];
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.jopax3kg4g);
        }
        break;
      default:
        if (rtAction != rtPrevAction) {
            uTmp_idx_0 = %<(SLibCG_SE(RTMGet("TStart")))>;
            if (%<(SLibCG_SE(LibGetTaskTime(0)))> != uTmp_idx_0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
            }
%<SLibCGIRSetStatesDisabledForSubsystemAndModelRef(7, 2, 0)>\
        }
        ktuiv5qnvo2.ftha5wn4i2 = ((ktuiv5qnvo2.gdkoorrli3[0] - ktuiv5qnvo2.gdkoorrli3[4]) - ktuiv5qnvo2.gdkoorrli3[8]) + mft3luzpor.Constant_Value_ddxk042hnl;
        uTmp_idx_0 = ktuiv5qnvo2.ftha5wn4i2;
        if (%<(LibIsMajorTimeStep())>) {
            if (dzu2rlzxmw1.nggkabx0mf != 0) {
                %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
                %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
                dzu2rlzxmw1.nggkabx0mf = 0;
            }
            ktuiv5qnvo2.h0ayrtgqgn = muDoubleScalarSqrt(ktuiv5qnvo2.ftha5wn4i2);
        } else {
            dUT2UT1 = ktuiv5qnvo2.ftha5wn4i2;
            if (dUT2UT1 < 0.0) {
                ktuiv5qnvo2.h0ayrtgqgn = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
            } else {
                ktuiv5qnvo2.h0ayrtgqgn = muDoubleScalarSqrt(dUT2UT1);
            }
            if (uTmp_idx_0 < 0.0) {
                dzu2rlzxmw1.nggkabx0mf = 1;
            }
        }
        ktuiv5qnvo2.a00doxjmna[1] = mft3luzpor.Gain_Gain_fr1kekirc0 * ktuiv5qnvo2.h0ayrtgqgn;
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            dzu2rlzxmw1.oovk1t0bug = (ktuiv5qnvo2.h0ayrtgqgn != 0.0);
        }
        if (dzu2rlzxmw1.oovk1t0bug) {
            ktuiv5qnvo2.jeigdppz1w[0] = mft3luzpor.Constant1_Value_iunxkpjmrj;
            ktuiv5qnvo2.jeigdppz1w[1] = ktuiv5qnvo2.h0ayrtgqgn;
        } else {
            ktuiv5qnvo2.jeigdppz1w[0] = mft3luzpor.Constant2_Value_kutdpfvzpu[0];
            ktuiv5qnvo2.jeigdppz1w[1] = mft3luzpor.Constant2_Value_kutdpfvzpu[1];
        }
        ktuiv5qnvo2.kxte1ugnh3 = ktuiv5qnvo2.jeigdppz1w[0] / ktuiv5qnvo2.jeigdppz1w[1];
        ktuiv5qnvo2.hh4a2vywd5 = ktuiv5qnvo2.gdkoorrli3[1] + ktuiv5qnvo2.gdkoorrli3[3];
        ktuiv5qnvo2.jgux41u2jf = ktuiv5qnvo2.gdkoorrli3[2] + ktuiv5qnvo2.gdkoorrli3[6];
        ktuiv5qnvo2.b3aqqvmjku = ktuiv5qnvo2.gdkoorrli3[7] - ktuiv5qnvo2.gdkoorrli3[5];
        ktuiv5qnvo2.g32x15bn3h[0] = ktuiv5qnvo2.kxte1ugnh3 * ktuiv5qnvo2.hh4a2vywd5;
        ktuiv5qnvo2.g32x15bn3h[1] = ktuiv5qnvo2.kxte1ugnh3 * ktuiv5qnvo2.jgux41u2jf;
        ktuiv5qnvo2.g32x15bn3h[2] = ktuiv5qnvo2.kxte1ugnh3 * ktuiv5qnvo2.b3aqqvmjku;
        ktuiv5qnvo2.a00doxjmna[2] = mft3luzpor.Gain1_Gain_ep0lsckp3j * ktuiv5qnvo2.g32x15bn3h[0];
        ktuiv5qnvo2.a00doxjmna[3] = mft3luzpor.Gain2_Gain_ce0zvlmbna * ktuiv5qnvo2.g32x15bn3h[1];
        ktuiv5qnvo2.a00doxjmna[0] = mft3luzpor.Gain3_Gain_bxmv2rsvim * ktuiv5qnvo2.g32x15bn3h[2];
        if (%<(RTMGetIsModeUpdateTimeStep())>) {
            srUpdateBC(dzu2rlzxmw1.c1r2s0jhqc);
        }
        break;
    }
    if (%<(RTMGetIsModeUpdateTimeStep())>) {
        srUpdateBC(dzu2rlzxmw1.i5gew0eykk);
    }
}
ktuiv5qnvo2.c4tmgxlhnh = ktuiv5qnvo2.n4ai4ankzt[0] * ktuiv5qnvo2.a00doxjmna[0];
ktuiv5qnvo2.agxyleorkl = ktuiv5qnvo2.n4ai4ankzt[1] * ktuiv5qnvo2.a00doxjmna[1];
ktuiv5qnvo2.dv2ba0xord = ktuiv5qnvo2.n4ai4ankzt[2] * ktuiv5qnvo2.a00doxjmna[2];
ktuiv5qnvo2.lqdhbmjcnm = ktuiv5qnvo2.n4ai4ankzt[3] * ktuiv5qnvo2.a00doxjmna[3];
ktuiv5qnvo2.ppg2zfkz0x = ((ktuiv5qnvo2.c4tmgxlhnh - ktuiv5qnvo2.agxyleorkl) - ktuiv5qnvo2.dv2ba0xord) - ktuiv5qnvo2.lqdhbmjcnm;
ktuiv5qnvo2.isafnyqg0q = ktuiv5qnvo2.n4ai4ankzt[0] * ktuiv5qnvo2.a00doxjmna[1];
ktuiv5qnvo2.a150xack5u = ktuiv5qnvo2.a00doxjmna[0] * ktuiv5qnvo2.n4ai4ankzt[1];
ktuiv5qnvo2.gfn5qrl5pb = ktuiv5qnvo2.n4ai4ankzt[2] * ktuiv5qnvo2.a00doxjmna[3];
ktuiv5qnvo2.bgjz1vfomo = ktuiv5qnvo2.a00doxjmna[2] * ktuiv5qnvo2.n4ai4ankzt[3];
ktuiv5qnvo2.myx23yxhrh = ((ktuiv5qnvo2.isafnyqg0q + ktuiv5qnvo2.a150xack5u) + ktuiv5qnvo2.gfn5qrl5pb) - ktuiv5qnvo2.bgjz1vfomo;
ktuiv5qnvo2.gvpgirihtw = ktuiv5qnvo2.n4ai4ankzt[0] * ktuiv5qnvo2.a00doxjmna[2];
ktuiv5qnvo2.ovvmurfsaq = ktuiv5qnvo2.n4ai4ankzt[1] * ktuiv5qnvo2.a00doxjmna[3];
ktuiv5qnvo2.m3bhbs1fa2 = ktuiv5qnvo2.a00doxjmna[0] * ktuiv5qnvo2.n4ai4ankzt[2];
ktuiv5qnvo2.gfsly2jia4 = ktuiv5qnvo2.a00doxjmna[1] * ktuiv5qnvo2.n4ai4ankzt[3];
ktuiv5qnvo2.dfvrnjcz5k = ((ktuiv5qnvo2.gvpgirihtw - ktuiv5qnvo2.ovvmurfsaq) + ktuiv5qnvo2.m3bhbs1fa2) + ktuiv5qnvo2.gfsly2jia4;
ktuiv5qnvo2.chuo3pdrrf = ktuiv5qnvo2.n4ai4ankzt[0] * ktuiv5qnvo2.a00doxjmna[3];
ktuiv5qnvo2.khjb1lzc3g = ktuiv5qnvo2.n4ai4ankzt[1] * ktuiv5qnvo2.a00doxjmna[2];
ktuiv5qnvo2.fkvz1tw0cw = ktuiv5qnvo2.a00doxjmna[1] * ktuiv5qnvo2.n4ai4ankzt[2];
ktuiv5qnvo2.nodzf3zrs2 = ktuiv5qnvo2.a00doxjmna[0] * ktuiv5qnvo2.n4ai4ankzt[3];
ktuiv5qnvo2.awoxnmunon = ((ktuiv5qnvo2.chuo3pdrrf + ktuiv5qnvo2.khjb1lzc3g) - ktuiv5qnvo2.fkvz1tw0cw) + ktuiv5qnvo2.nodzf3zrs2;
if (%<(SLibCGIRIsSampleHit(2, 13))>) {
    ktuiv5qnvo2.pznqhrc4sj[0] = mft3luzpor.Torques_Body_Value[0] + ktuiv5qnvo2.keljnw1iuf[0];
    ktuiv5qnvo2.pznqhrc4sj[1] = mft3luzpor.Torques_Body_Value[1] + ktuiv5qnvo2.keljnw1iuf[1];
    ktuiv5qnvo2.pznqhrc4sj[2] = mft3luzpor.Torques_Body_Value[2] + ktuiv5qnvo2.keljnw1iuf[2];
}
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    ktuiv5qnvo2.mbmcpuzyml[0] = mft3luzpor.Constant_Value_l5ckikavo3[0];
    ktuiv5qnvo2.mbmcpuzyml[1] = mft3luzpor.Constant_Value_l5ckikavo3[1];
    ktuiv5qnvo2.mbmcpuzyml[2] = mft3luzpor.Constant_Value_l5ckikavo3[2];
}
ktuiv5qnvo2.f3chg3oisf = -ktuiv5qnvo2.dfvrnjcz5k;
ktuiv5qnvo2.lxpokjgc3x = ktuiv5qnvo2.ppg2zfkz0x * ktuiv5qnvo2.ppg2zfkz0x;
ktuiv5qnvo2.ato3bl1cmc = -ktuiv5qnvo2.myx23yxhrh;
ktuiv5qnvo2.lsqs5la1d0 = ktuiv5qnvo2.ato3bl1cmc * ktuiv5qnvo2.ato3bl1cmc;
ktuiv5qnvo2.pkwqvlilt4 = ktuiv5qnvo2.f3chg3oisf * ktuiv5qnvo2.f3chg3oisf;
ktuiv5qnvo2.nheuokxcdh = -ktuiv5qnvo2.awoxnmunon;
ktuiv5qnvo2.hp3oxzavtd = ktuiv5qnvo2.nheuokxcdh * ktuiv5qnvo2.nheuokxcdh;
ktuiv5qnvo2.d3lw34jrjn = ((ktuiv5qnvo2.lxpokjgc3x + ktuiv5qnvo2.lsqs5la1d0) + ktuiv5qnvo2.pkwqvlilt4) + ktuiv5qnvo2.hp3oxzavtd;
uTmp_idx_0 = ktuiv5qnvo2.d3lw34jrjn;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.nkmv45wa3j != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.nkmv45wa3j = 0;
    }
    ktuiv5qnvo2.nexcukqpgj = muDoubleScalarSqrt(ktuiv5qnvo2.d3lw34jrjn);
} else {
    dUT2UT1 = ktuiv5qnvo2.d3lw34jrjn;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.nexcukqpgj = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.nexcukqpgj = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.nkmv45wa3j = 1;
    }
}
ktuiv5qnvo2.bqhfhwqxpt = ktuiv5qnvo2.f3chg3oisf / ktuiv5qnvo2.nexcukqpgj;
ktuiv5qnvo2.f2kimgo4bl = ktuiv5qnvo2.bqhfhwqxpt * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.gxw0kiaxko = ktuiv5qnvo2.nheuokxcdh / ktuiv5qnvo2.nexcukqpgj;
ktuiv5qnvo2.ljqc4nfb5k = ktuiv5qnvo2.gxw0kiaxko * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.hr4e1xbe0b = (mft3luzpor.Constant_Value_infl2wzd2x - ktuiv5qnvo2.f2kimgo4bl) - ktuiv5qnvo2.ljqc4nfb5k;
ktuiv5qnvo2.gbjky3dp1b = mft3luzpor.Gain2_Gain_a1syec2s31 * ktuiv5qnvo2.hr4e1xbe0b;
ktuiv5qnvo2.atwsbea2j3 = ktuiv5qnvo2.mbmcpuzyml[0] * ktuiv5qnvo2.gbjky3dp1b;
ktuiv5qnvo2.ka5lkmpcx1 = ktuiv5qnvo2.ato3bl1cmc / ktuiv5qnvo2.nexcukqpgj;
ktuiv5qnvo2.faxfchhj03 = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.jx1iscr5ja = ktuiv5qnvo2.ppg2zfkz0x / ktuiv5qnvo2.nexcukqpgj;
ktuiv5qnvo2.ghf4vueaqn = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.dozd5vzzyf = ktuiv5qnvo2.faxfchhj03 + ktuiv5qnvo2.ghf4vueaqn;
ktuiv5qnvo2.p0rfqushhs = mft3luzpor.Gain_Gain_pqmdh5vchy * ktuiv5qnvo2.dozd5vzzyf;
ktuiv5qnvo2.ndnyv1dxqo = ktuiv5qnvo2.p0rfqushhs * ktuiv5qnvo2.mbmcpuzyml[1];
ktuiv5qnvo2.cswa4mm2ib = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.b422d1lyww = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.axuxvrq0v2 = ktuiv5qnvo2.b422d1lyww - ktuiv5qnvo2.cswa4mm2ib;
ktuiv5qnvo2.imzvswpzjs = mft3luzpor.Gain1_Gain_nbsdyosk31 * ktuiv5qnvo2.axuxvrq0v2;
ktuiv5qnvo2.lshog2b4ym = ktuiv5qnvo2.imzvswpzjs * ktuiv5qnvo2.mbmcpuzyml[2];
ktuiv5qnvo2.avvlv4kyvw = (ktuiv5qnvo2.atwsbea2j3 + ktuiv5qnvo2.ndnyv1dxqo) + ktuiv5qnvo2.lshog2b4ym;
ktuiv5qnvo2.l3hsk551mn = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.jzzmpc4yga = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.jvwes4xfyt = ktuiv5qnvo2.l3hsk551mn - ktuiv5qnvo2.jzzmpc4yga;
ktuiv5qnvo2.d4cgytsdfi = mft3luzpor.Gain_Gain_mpffh2nq4u * ktuiv5qnvo2.jvwes4xfyt;
ktuiv5qnvo2.p21qefwtvn = ktuiv5qnvo2.mbmcpuzyml[0] * ktuiv5qnvo2.d4cgytsdfi;
ktuiv5qnvo2.bw2hjzbmyf = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.ka5lkmpcx1;
ktuiv5qnvo2.i4eqs14wzu = ktuiv5qnvo2.gxw0kiaxko * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.pnoqynnphw = (mft3luzpor.Constant_Value_ae5xsg5zwg - ktuiv5qnvo2.bw2hjzbmyf) - ktuiv5qnvo2.i4eqs14wzu;
ktuiv5qnvo2.oyki30k1aj = mft3luzpor.Gain2_Gain_pqei0he1km * ktuiv5qnvo2.pnoqynnphw;
ktuiv5qnvo2.arogtszhs5 = ktuiv5qnvo2.oyki30k1aj * ktuiv5qnvo2.mbmcpuzyml[1];
ktuiv5qnvo2.jqgugleprs = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.ka5lkmpcx1;
ktuiv5qnvo2.o5ndifgoks = ktuiv5qnvo2.bqhfhwqxpt * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.frmmeddqv5 = ktuiv5qnvo2.jqgugleprs + ktuiv5qnvo2.o5ndifgoks;
ktuiv5qnvo2.oa1getq115 = mft3luzpor.Gain1_Gain_lpavq11n4s * ktuiv5qnvo2.frmmeddqv5;
ktuiv5qnvo2.fzlt0ijh4o = ktuiv5qnvo2.oa1getq115 * ktuiv5qnvo2.mbmcpuzyml[2];
ktuiv5qnvo2.cvvt4jf4qb = (ktuiv5qnvo2.p21qefwtvn + ktuiv5qnvo2.arogtszhs5) + ktuiv5qnvo2.fzlt0ijh4o;
ktuiv5qnvo2.ohucyuywpl = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.inb5ttb3jj = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.d2rkdr4kkv = ktuiv5qnvo2.ohucyuywpl + ktuiv5qnvo2.inb5ttb3jj;
ktuiv5qnvo2.cae1hemhpe = mft3luzpor.Gain_Gain_o3sxaj3ene * ktuiv5qnvo2.d2rkdr4kkv;
ktuiv5qnvo2.f351shx3do = ktuiv5qnvo2.mbmcpuzyml[0] * ktuiv5qnvo2.cae1hemhpe;
ktuiv5qnvo2.fslaxrtroo = ktuiv5qnvo2.jx1iscr5ja * ktuiv5qnvo2.ka5lkmpcx1;
ktuiv5qnvo2.nk3orwpupw = ktuiv5qnvo2.bqhfhwqxpt * ktuiv5qnvo2.gxw0kiaxko;
ktuiv5qnvo2.e1rejqlme4 = ktuiv5qnvo2.nk3orwpupw - ktuiv5qnvo2.fslaxrtroo;
ktuiv5qnvo2.mcltshjpun = mft3luzpor.Gain1_Gain_orrcgn1tbv * ktuiv5qnvo2.e1rejqlme4;
ktuiv5qnvo2.m1acjmrbru = ktuiv5qnvo2.mcltshjpun * ktuiv5qnvo2.mbmcpuzyml[1];
ktuiv5qnvo2.p3ejj2yywg = ktuiv5qnvo2.ka5lkmpcx1 * ktuiv5qnvo2.ka5lkmpcx1;
ktuiv5qnvo2.hpnuoon2c2 = ktuiv5qnvo2.bqhfhwqxpt * ktuiv5qnvo2.bqhfhwqxpt;
ktuiv5qnvo2.apu1suwoo4 = (mft3luzpor.Constant_Value_gno3p02nfv - ktuiv5qnvo2.p3ejj2yywg) - ktuiv5qnvo2.hpnuoon2c2;
ktuiv5qnvo2.dpo23ndn3u = mft3luzpor.Gain2_Gain_phscpgr5dh * ktuiv5qnvo2.apu1suwoo4;
ktuiv5qnvo2.cxhavlioi0 = ktuiv5qnvo2.dpo23ndn3u * ktuiv5qnvo2.mbmcpuzyml[2];
ktuiv5qnvo2.nalz3opatz = (ktuiv5qnvo2.f351shx3do + ktuiv5qnvo2.m1acjmrbru) + ktuiv5qnvo2.cxhavlioi0;
ktuiv5qnvo2.cmvds0woye[0] = ktuiv5qnvo2.avvlv4kyvw;
ktuiv5qnvo2.cmvds0woye[1] = ktuiv5qnvo2.cvvt4jf4qb;
ktuiv5qnvo2.cmvds0woye[2] = ktuiv5qnvo2.nalz3opatz;
uTmp_idx_0 = ktuiv5qnvo2.cmvds0woye[0];
uTmp_idx_2 = ktuiv5qnvo2.mnpqjp0stq[0];
month = uTmp_idx_0 * uTmp_idx_2;
uTmp_idx_2 = uTmp_idx_0;
bessDate = uTmp_idx_0 * uTmp_idx_2;
uTmp_idx_0 = ktuiv5qnvo2.cmvds0woye[1];
uTmp_idx_2 = ktuiv5qnvo2.mnpqjp0stq[1];
month += uTmp_idx_0 * uTmp_idx_2;
uTmp_idx_2 = uTmp_idx_0;
bessDate += uTmp_idx_0 * uTmp_idx_2;
uTmp_idx_0 = ktuiv5qnvo2.cmvds0woye[2];
uTmp_idx_2 = ktuiv5qnvo2.mnpqjp0stq[2];
month += uTmp_idx_0 * uTmp_idx_2;
uTmp_idx_2 = uTmp_idx_0;
bessDate += uTmp_idx_0 * uTmp_idx_2;
ktuiv5qnvo2.go1rtmbt2n = month;
ktuiv5qnvo2.hgkeqywwxt = bessDate;
uTmp_idx_0 = ktuiv5qnvo2.hgkeqywwxt;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.gqb3wumnnb != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.gqb3wumnnb = 0;
    }
    ktuiv5qnvo2.osh34hsw40 = muDoubleScalarSqrt(ktuiv5qnvo2.hgkeqywwxt);
} else {
    dUT2UT1 = ktuiv5qnvo2.hgkeqywwxt;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.osh34hsw40 = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.osh34hsw40 = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.gqb3wumnnb = 1;
    }
}
uTmp_idx_0 = ktuiv5qnvo2.mnpqjp0stq[0];
uTmp_idx_2 = uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.mnpqjp0stq[1];
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.mnpqjp0stq[2];
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
ktuiv5qnvo2.iuqhwuhkca = uTmp_idx_2;
uTmp_idx_0 = ktuiv5qnvo2.iuqhwuhkca;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.g54ohlxfz0 != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.g54ohlxfz0 = 0;
    }
    ktuiv5qnvo2.h1l0p5yhcd = muDoubleScalarSqrt(ktuiv5qnvo2.iuqhwuhkca);
} else {
    dUT2UT1 = ktuiv5qnvo2.iuqhwuhkca;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.h1l0p5yhcd = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.h1l0p5yhcd = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.g54ohlxfz0 = 1;
    }
}
ktuiv5qnvo2.mtcu1gi2bm = ktuiv5qnvo2.osh34hsw40 * ktuiv5qnvo2.h1l0p5yhcd;
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    uTmp_idx_0 = ktuiv5qnvo2.mtcu1gi2bm;
    dzu2rlzxmw1.anodop3bfa = 0;
    if ((uTmp_idx_0 != uTmp_idx_0) || (mft3luzpor.Constant1_Value_lj35wik0h0 > uTmp_idx_0)) {
        uTmp_idx_0 = mft3luzpor.Constant1_Value_lj35wik0h0;
        dzu2rlzxmw1.anodop3bfa = 1;
    }
    ktuiv5qnvo2.a1oscqdt3n = uTmp_idx_0;
} else {
    uTmp_idx_0 = ktuiv5qnvo2.mtcu1gi2bm;
    if (dzu2rlzxmw1.anodop3bfa == 1) {
        uTmp_idx_0 = mft3luzpor.Constant1_Value_lj35wik0h0;
    }
    ktuiv5qnvo2.a1oscqdt3n = uTmp_idx_0;
}
ktuiv5qnvo2.gsaeldrp4t = ktuiv5qnvo2.go1rtmbt2n / ktuiv5qnvo2.a1oscqdt3n;
uTmp_idx_0 = ktuiv5qnvo2.gsaeldrp4t;
if (uTmp_idx_0 > 1.0) {
    uTmp_idx_0 = 1.0;
} else if (uTmp_idx_0 < -1.0) {
    uTmp_idx_0 = -1.0;
}
ktuiv5qnvo2.opwl0hzjxg = muDoubleScalarAcos(uTmp_idx_0);
ktuiv5qnvo2.mambpjcdh4 = mft3luzpor.Gain_Gain_d4pezknrma * ktuiv5qnvo2.opwl0hzjxg;
if (%<(SLibCGIRIsSampleHit(1, 13))>) {
    ktuiv5qnvo2.i4wrjduekl = mft3luzpor.EarthRadius_Value;
}
uTmp_idx_0 = ktuiv5qnvo2.mbegyyvbpy[0];
uTmp_idx_2 = uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.mbegyyvbpy[1];
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.mbegyyvbpy[2];
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
ktuiv5qnvo2.pn2uaz3u3v = uTmp_idx_2;
uTmp_idx_0 = ktuiv5qnvo2.pn2uaz3u3v;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.j31ckjze2x != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.j31ckjze2x = 0;
    }
    ktuiv5qnvo2.jh435ituhk = muDoubleScalarSqrt(ktuiv5qnvo2.pn2uaz3u3v);
} else {
    dUT2UT1 = ktuiv5qnvo2.pn2uaz3u3v;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.jh435ituhk = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.jh435ituhk = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.j31ckjze2x = 1;
    }
}
ktuiv5qnvo2.kezzw1aj02 = ktuiv5qnvo2.i4wrjduekl / ktuiv5qnvo2.jh435ituhk;
uTmp_idx_0 = ktuiv5qnvo2.kezzw1aj02;
if (uTmp_idx_0 > 1.0) {
    uTmp_idx_0 = 1.0;
} else if (uTmp_idx_0 < -1.0) {
    uTmp_idx_0 = -1.0;
}
ktuiv5qnvo2.jfaeuppoal = muDoubleScalarAsin(uTmp_idx_0);
ktuiv5qnvo2.kp3bitqnfo = muDoubleScalarCos(ktuiv5qnvo2.jfaeuppoal);
uTmp_idx_0 = mft3luzpor.Gain_Gain_pfj5uh0yxl * ktuiv5qnvo2.mnpqjp0stq[0];
ktuiv5qnvo2.nkts1zw0nd[0] = uTmp_idx_0;
uTmp_idx_2 = uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = mft3luzpor.Gain_Gain_pfj5uh0yxl * ktuiv5qnvo2.mnpqjp0stq[1];
ktuiv5qnvo2.nkts1zw0nd[1] = uTmp_idx_0;
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
uTmp_idx_0 = mft3luzpor.Gain_Gain_pfj5uh0yxl * ktuiv5qnvo2.mnpqjp0stq[2];
ktuiv5qnvo2.nkts1zw0nd[2] = uTmp_idx_0;
uTmp_idx_2 += uTmp_idx_0 * uTmp_idx_0;
ktuiv5qnvo2.b1glzhdjuy = uTmp_idx_2;
uTmp_idx_0 = ktuiv5qnvo2.b1glzhdjuy;
if (%<(LibIsMajorTimeStep())>) {
    if (dzu2rlzxmw1.pwrrdllj3z != 0) {
        %<(RTMSetBlockStateForSolverChangedAtMajorStep())>;
        %<(RTMSetContTimeOutputInconsistentWithStateAtMajorStep())>;
        dzu2rlzxmw1.pwrrdllj3z = 0;
    }
    ktuiv5qnvo2.k0lnspzixt = muDoubleScalarSqrt(ktuiv5qnvo2.b1glzhdjuy);
} else {
    dUT2UT1 = ktuiv5qnvo2.b1glzhdjuy;
    if (dUT2UT1 < 0.0) {
        ktuiv5qnvo2.k0lnspzixt = -muDoubleScalarSqrt(muDoubleScalarAbs(dUT2UT1));
    } else {
        ktuiv5qnvo2.k0lnspzixt = muDoubleScalarSqrt(dUT2UT1);
    }
    if (uTmp_idx_0 < 0.0) {
        dzu2rlzxmw1.pwrrdllj3z = 1;
    }
}
if (%<(RTMGetIsModeUpdateTimeStep())>) {
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[0];
    dzu2rlzxmw1.fg4e4z0egr[0] = 0;
    if ((uTmp_idx_0 != uTmp_idx_0) || (mft3luzpor.Constant_Value_f1uqwlg30t > uTmp_idx_0)) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
        dzu2rlzxmw1.fg4e4z0egr[0] = 1;
    }
    ktuiv5qnvo2.gn4ifeeyqu[0] = uTmp_idx_0;
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[1];
    dzu2rlzxmw1.fg4e4z0egr[1] = 0;
    if ((uTmp_idx_0 != uTmp_idx_0) || (mft3luzpor.Constant_Value_f1uqwlg30t > uTmp_idx_0)) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
        dzu2rlzxmw1.fg4e4z0egr[1] = 1;
    }
    ktuiv5qnvo2.gn4ifeeyqu[1] = uTmp_idx_0;
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[2];
    dzu2rlzxmw1.fg4e4z0egr[2] = 0;
    if ((uTmp_idx_0 != uTmp_idx_0) || (mft3luzpor.Constant_Value_f1uqwlg30t > uTmp_idx_0)) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
        dzu2rlzxmw1.fg4e4z0egr[2] = 1;
    }
    ktuiv5qnvo2.gn4ifeeyqu[2] = uTmp_idx_0;
} else {
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[0];
    if (dzu2rlzxmw1.fg4e4z0egr[0] == 1) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
    }
    ktuiv5qnvo2.gn4ifeeyqu[0] = uTmp_idx_0;
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[1];
    if (dzu2rlzxmw1.fg4e4z0egr[1] == 1) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
    }
    ktuiv5qnvo2.gn4ifeeyqu[1] = uTmp_idx_0;
    uTmp_idx_0 = ktuiv5qnvo2.nkts1zw0nd[2];
    if (dzu2rlzxmw1.fg4e4z0egr[2] == 1) {
        uTmp_idx_0 = mft3luzpor.Constant_Value_f1uqwlg30t;
    }
    ktuiv5qnvo2.gn4ifeeyqu[2] = uTmp_idx_0;
}
uTmp_idx_0 = ktuiv5qnvo2.k0lnspzixt / ktuiv5qnvo2.gn4ifeeyqu[0];
ktuiv5qnvo2.o500kwkjpt[0] = uTmp_idx_0;
A = ktuiv5qnvo2.jh435ituhk / ktuiv5qnvo2.mbegyyvbpy[0];
ktuiv5qnvo2.e2gkdafpqw[0] = A;
uTmp_idx_2 = A * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.k0lnspzixt / ktuiv5qnvo2.gn4ifeeyqu[1];
ktuiv5qnvo2.o500kwkjpt[1] = uTmp_idx_0;
A = ktuiv5qnvo2.jh435ituhk / ktuiv5qnvo2.mbegyyvbpy[1];
ktuiv5qnvo2.e2gkdafpqw[1] = A;
uTmp_idx_2 += A * uTmp_idx_0;
uTmp_idx_0 = ktuiv5qnvo2.k0lnspzixt / ktuiv5qnvo2.gn4ifeeyqu[2];
ktuiv5qnvo2.o500kwkjpt[2] = uTmp_idx_0;
A = ktuiv5qnvo2.jh435ituhk / ktuiv5qnvo2.mbegyyvbpy[2];
ktuiv5qnvo2.e2gkdafpqw[2] = A;
uTmp_idx_2 += A * uTmp_idx_0;
ktuiv5qnvo2.cqrilyhpyu = uTmp_idx_2;
ktuiv5qnvo2.aqwddl53gj = (ktuiv5qnvo2.kp3bitqnfo > ktuiv5qnvo2.cqrilyhpyu);
%<SLibInsertSolverResetCode()>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%assign tlcOutputsFcnOfS13B2Tid3 = OpaqueTLCBlockFcnForMdlRefTID("Outputs", 13, 2, 3, 4, 3, 0)
ktuiv5qnvo2.ovwjazpwxg = mft3luzpor.Constant1_Value_ky0zm1vdu3 + mft3luzpor.Bias_Bias_f4lfrmc2xj;
ktuiv5qnvo2.mcbegoyojd = ktuiv5qnvo2.ovwjazpwxg / mft3luzpor.dayFrac_Value;
ktuiv5qnvo2.dgzllg0vkk = mft3luzpor.Constant1_Value_ky0zm1vdu3 + mft3luzpor.R_woPM_sec;
ktuiv5qnvo2.elfpckikpf = ktuiv5qnvo2.dgzllg0vkk + mft3luzpor.Bias_Bias_fjuplsuwzh;
ktuiv5qnvo2.h3ma3ezsd2 = mft3luzpor.secGain_Gain * ktuiv5qnvo2.elfpckikpf;
memcpy(&ktuiv5qnvo2.a3xsdbwusr[0], &mft3luzpor.Constant_Value_ka0pbbhorg[198], 528U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.ewxmxolsjd[0], &mft3luzpor.Constant_Value_ka0pbbhorg[66], 66U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.khxt0zslsh[0], &mft3luzpor.Constant_Value_ka0pbbhorg[132], 66U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.j25fvdirci[0], &mft3luzpor.Constant_Value_cww0o13hsc[4800], 22400U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.fxt4d3dyo3[0], &mft3luzpor.Constant_Value_cww0o13hsc[1600], 1600U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.egtxigpxs2[0], &mft3luzpor.Constant_Value_cww0o13hsc[3200], 1600U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.g0lkbwhl0q[0], &mft3luzpor.Constant_Value_bsb1eyrosh[3825], 17850U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.pft4zg43cd[0], &mft3luzpor.Constant_Value_bsb1eyrosh[1275], 1275U * sizeof(real_T));
memcpy(&ktuiv5qnvo2.bwfvokrayn[0], &mft3luzpor.Constant_Value_bsb1eyrosh[2550], 1275U * sizeof(real_T));
ktuiv5qnvo2.dnp3mvdsnk[0] = mft3luzpor.Gain1_Gain_jnadjjzdgl * mft3luzpor.Constant2_Value_p54gbuogdj[0];
ktuiv5qnvo2.dnp3mvdsnk[1] = mft3luzpor.Gain1_Gain_jnadjjzdgl * mft3luzpor.Constant2_Value_p54gbuogdj[1];
ktuiv5qnvo2.cv1nz3ipi2[0] = mft3luzpor.Forces_Body_Value[0] + mft3luzpor.Constant_Value_eiwjhyz04e[0];
ktuiv5qnvo2.cv1nz3ipi2[1] = mft3luzpor.Forces_Body_Value[1] + mft3luzpor.Constant_Value_eiwjhyz04e[1];
ktuiv5qnvo2.cv1nz3ipi2[2] = mft3luzpor.Forces_Body_Value[2] + mft3luzpor.Constant_Value_eiwjhyz04e[2];
%<tlcOutputsFcnOfS13B2Tid3>\
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedOutput3LocalVars", localVarDecl)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
%function OutputsFcnProtoTypeForTID(block, system, tid) Output
%if tid == 0
%assign ::GlobalCurrentTID = 0
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs0(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 2, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%if tid == 3
%assign ::GlobalCurrentTID = 3
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Outputs1(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 3, fcnProtoType)>
%assign ::GlobalCurrentTID = []
%endif
%endfunction
